{"version":3,"file":"KnowledgeBase-49aca626.js","sources":["../../../../desk/src/pages/knowledge-base/KnowledgeBaseCategoryNew.vue","../../../../desk/src/pages/knowledge-base/KnowledgeBaseSidebar.vue","../../../../desk/src/pages/knowledge-base/KnowledgeBase.vue"],"sourcesContent":["<template>\n  <Dialog v-bind=\"attrs\" :options=\"{ title: 'New category' }\">\n    <template #body-content>\n      <form @submit.prevent=\"newCategoryRes.submit\">\n        <div class=\"space-y-4\">\n          <div class=\"space-y-2\">\n            <div class=\"text-xs text-gray-700\">Title</div>\n            <div class=\"flex items-center gap-2\">\n              <KnowledgeBaseIconSelector\n                :icon=\"newCategoryIcon\"\n                @select=\"(icon) => (newCategoryIcon = icon)\"\n              />\n              <FormControl\n                v-model=\"newCategoryName\"\n                placeholder=\"A brief guide\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div class=\"space-y-2\">\n            <div class=\"text-xs text-gray-700\">Description</div>\n            <FormControl\n              v-model=\"newCategoryDescription\"\n              placeholder=\"A short description\"\n              type=\"textarea\"\n            />\n          </div>\n          <Button class=\"w-full\" label=\"Create\" theme=\"gray\" variant=\"solid\" />\n        </div>\n      </form>\n    </template>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, useAttrs } from \"vue\";\nimport { createResource, Button, Dialog, FormControl } from \"frappe-ui\";\nimport KnowledgeBaseIconSelector from \"./KnowledgeBaseIconSelector.vue\";\n\ninterface E {\n  (event: \"success\", id: string): void;\n}\n\nconst attrs = useAttrs();\nconst emit = defineEmits<E>();\nconst newCategoryName = ref(\"\");\nconst newCategoryDescription = ref(\"\");\nconst newCategoryIcon = ref(\"\");\n\nconst resetForm = () => {\n  newCategoryName.value = \"\";\n  newCategoryDescription.value = \"\";\n  newCategoryIcon.value = \"\";\n};\n\nconst newCategoryRes = createResource({\n  url: \"frappe.client.insert\",\n  makeParams() {\n    return {\n      doc: {\n        doctype: \"HD Article Category\",\n        category_name: newCategoryName.value,\n        description: newCategoryDescription.value,\n        icon: newCategoryIcon.value,\n      },\n    };\n  },\n  validate(params) {\n    const requiredFields = [\"category_name\", \"description\", \"icon\"];\n    for (const f of requiredFields) {\n      if (params.doc[f]) return;\n      const field = f.replace(\"_\", \" \").toUpperCase();\n      return `${field} is required`;\n    }\n  },\n  onSuccess(data) {\n    emit(\"success\", data.name);\n    resetForm();\n  },\n});\n</script>\n","<template>\n  <div\n    class=\"h-full space-y-2 border-r px-3.5 py-2.5\"\n    :style=\"{\n      'min-width': '242px',\n      'max-width': '242px',\n    }\"\n  >\n    <div class=\"flex items-center justify-between\">\n      <div class=\"text-sm font-medium text-gray-600\">Categories</div>\n      <Button\n        theme=\"gray\"\n        variant=\"ghost\"\n        @click=\"showNewDialog = !showNewDialog\"\n      >\n        <template #icon>\n          <Icon icon=\"lucide:plus\" class=\"h-4 w-4\" />\n        </template>\n      </Button>\n    </div>\n    <div class=\"flex flex-col gap-1\">\n      <SidebarLink\n        v-for=\"category in categories.data\"\n        :key=\"category.label\"\n        :icon=\"getIcon(category.icon, true)\"\n        :is-active=\"activeCategory === category.name\"\n        :is-expanded=\"true\"\n        :label=\"category.category_name\"\n        :on-click=\"() => toCategory(category.name)\"\n      />\n    </div>\n    <KnowledgeBaseCategoryNew\n      v-model=\"showNewDialog\"\n      @success=\"onNewCategory\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { createListResource, Button } from \"frappe-ui\";\nimport { Icon } from \"@iconify/vue\";\nimport { AGENT_PORTAL_KNOWLEDGE_BASE_CATEGORY } from \"@/router\";\nimport SidebarLink from \"@/components/SidebarLink.vue\";\nimport KnowledgeBaseCategoryNew from \"./KnowledgeBaseCategoryNew.vue\";\nimport { getIcon } from \"./util\";\n\nconst router = useRouter();\nconst route = useRoute();\nconst activeCategory = computed(() => route.params.categoryId);\nconst categories = createListResource({\n  doctype: \"HD Article Category\",\n  auto: true,\n  fields: [\"name\", \"category_name\", \"icon\"],\n  filters: {\n    parent_category: \"\",\n  },\n});\nconst showNewDialog = ref(false);\n\nfunction toCategory(categoryId: string) {\n  router.push({\n    name: AGENT_PORTAL_KNOWLEDGE_BASE_CATEGORY,\n    params: {\n      categoryId,\n    },\n  });\n}\n\nfunction onNewCategory(categoryId: string) {\n  categories.reload().then(() => {\n    showNewDialog.value = false;\n    toCategory(categoryId);\n  });\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <PageTitle title=\"Knowledge base\" />\n    <div class=\"flex grow border-t\">\n      <KnowledgeBaseSidebar />\n      <RouterView :key=\"$route.fullPath\" v-slot=\"{ Component }\">\n        <component :is=\"Component\" v-if=\"Component\" />\n        <EmptyMessage v-else message=\"Select a category\" />\n      </RouterView>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { usePageMeta } from \"frappe-ui\";\nimport PageTitle from \"@/components/PageTitle.vue\";\nimport EmptyMessage from \"@/components/EmptyMessage.vue\";\nimport KnowledgeBaseSidebar from \"./KnowledgeBaseSidebar.vue\";\n\nusePageMeta(() => {\n  return {\n    title: \"Knowledge base\",\n  };\n});\n</script>\n"],"names":["attrs","useAttrs","emit","__emit","newCategoryName","ref","newCategoryDescription","newCategoryIcon","resetForm","newCategoryRes","createResource","params","requiredFields","f","data","router","useRouter","route","useRoute","activeCategory","computed","categories","createListResource","showNewDialog","toCategory","categoryId","AGENT_PORTAL_KNOWLEDGE_BASE_CATEGORY","onNewCategory","usePageMeta"],"mappings":"y6BA2CA,MAAAA,EAAAC,IACAC,EAAAC,EACAC,EAAAC,EAAA,EAAA,EACAC,EAAAD,EAAA,EAAA,EACAE,EAAAF,EAAA,EAAA,EAEAG,EAAA,IAAA,CACEJ,EAAA,MAAA,GACAE,EAAA,MAAA,GACAC,EAAA,MAAA,EAAwB,EAG1BE,EAAAC,EAAA,CAAsC,IAAA,uBAC/B,YAAA,CAEH,MAAA,CAAO,IAAA,CACA,QAAA,sBACM,cAAAN,EAAA,MACsB,YAAAE,EAAA,MACK,KAAAC,EAAA,KACd,CACxB,CACF,EACF,SAAAI,EAAA,CAEE,MAAAC,EAAA,CAAA,gBAAA,cAAA,MAAA,EACA,UAAAC,KAAAD,EACE,OAAAD,EAAA,IAAAE,CAAA,EAAmB,OAEnB,GADAA,EAAA,QAAA,IAAA,GAAA,EAAA,aACA,cACF,EACF,UAAAC,EAAA,CAEEZ,EAAA,UAAAY,EAAA,IAAA,EACAN,GAAU,CACZ,CAAA,k9BC9BF,MAAAO,EAAAC,IACAC,EAAAC,IACAC,EAAAC,EAAA,IAAAH,EAAA,OAAA,UAAA,EACAI,EAAAC,EAAA,CAAsC,QAAA,sBAC3B,KAAA,GACH,OAAA,CAAA,OAAA,gBAAA,MAAA,EACkC,QAAA,CAC/B,gBAAA,EACU,CACnB,CAAA,EAEFC,EAAAlB,EAAA,EAAA,EAEA,SAAAmB,EAAAC,EAAA,CACEV,EAAA,KAAA,CAAY,KAAAW,EACJ,OAAA,CACE,WAAAD,CACN,CACF,CAAA,CACD,CAGH,SAAAE,EAAAF,EAAA,CACEJ,EAAA,SAAA,KAAA,IAAA,CACEE,EAAA,MAAA,GACAC,EAAAC,CAAA,CAAqB,CAAA,CACtB,+nBCvDH,OAAAG,EAAA,KACE,CAAO,MAAA,gBACE,EACT"}