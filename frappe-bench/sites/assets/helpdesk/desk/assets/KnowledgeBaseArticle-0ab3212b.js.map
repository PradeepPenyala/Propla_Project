{"version":3,"file":"KnowledgeBaseArticle-0ab3212b.js","sources":["../../../../desk/src/pages/knowledge-base/KnowledgeBaseArticleActionsEdit.vue","../../../../desk/src/pages/knowledge-base/KnowledgeBaseArticleActionsNew.vue","../../../../desk/src/pages/knowledge-base/KnowledgeBaseArticleActionsView.vue","../../../../desk/src/pages/knowledge-base/KnowledgeBaseArticleTopEdit.vue","../../../../desk/src/pages/knowledge-base/KnowledgeBaseArticleTopNew.vue","../../../../desk/src/pages/knowledge-base/KnowledgeBaseArticleTopPublic.vue","../../../../desk/src/pages/KnowledgeBaseArticle.vue"],"sourcesContent":["<template>\n  <div class=\"flex gap-2\">\n    <Button v-bind=\"secondary\">\n      <template #prefix>\n        <IconReset class=\"h-4 w-4\" />\n      </template>\n    </Button>\n    <Button v-bind=\"primary\">\n      <template #prefix>\n        <IconSave class=\"h-4 w-4\" />\n      </template>\n    </Button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconSave from \"~icons/lucide/save\";\nimport IconReset from \"~icons/lucide/rotate-ccw\";\n\nconst emit = defineEmits<{\n  (event: \"save\"): void;\n  (event: \"cancel\"): void;\n}>();\n\nconst primary = {\n  label: \"Save\",\n  theme: \"gray\",\n  variant: \"solid\",\n  onClick: () => emit(\"save\"),\n};\n\nconst secondary = {\n  label: \"Cancel\",\n  theme: \"gray\",\n  variant: \"subtle\",\n  onClick: () => emit(\"cancel\"),\n};\n</script>\n","<template>\n  <div class=\"flex gap-2\">\n    <Button v-bind=\"secondary\">\n      <template #prefix>\n        <Icon icon=\"lucide:x\" class=\"h-4 w-4\" />\n      </template>\n    </Button>\n    <Button v-bind=\"primary\">\n      <template #prefix>\n        <Icon icon=\"lucide:check\" class=\"h-4 w-4\" />\n      </template>\n    </Button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Icon } from \"@iconify/vue\";\n\nconst emit = defineEmits<{\n  (event: \"create\"): void;\n  (event: \"discard\"): void;\n}>();\n\nconst primary = {\n  label: \"Create\",\n  theme: \"gray\",\n  variant: \"solid\",\n  onClick: () => emit(\"create\"),\n};\n\nconst secondary = {\n  label: \"Discard\",\n  theme: \"gray\",\n  variant: \"subtle\",\n  onClick: () => emit(\"discard\"),\n};\n</script>\n","<template>\n  <div class=\"flex gap-2\">\n    <Button v-bind=\"primary\" />\n    <Dropdown :options=\"dropdownOptions\">\n      <Button theme=\"gray\" variant=\"ghost\">\n        <template #icon>\n          <IconMoreHorizontal class=\"h-4 w-4\" />\n        </template>\n      </Button>\n    </Dropdown>\n    <Dialog v-model=\"showDeleteDialog\" :options=\"deleteDialogOptions\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, toRef } from \"vue\";\nimport { Dialog, Dropdown } from \"frappe-ui\";\nimport IconEdit from \"~icons/lucide/edit-3\";\nimport IconMoreHorizontal from \"~icons/lucide/more-horizontal\";\nimport IconTrash from \"~icons/lucide/trash-2\";\n\nconst props = defineProps({\n  status: {\n    type: String,\n    required: false,\n    default: \"Draft\",\n  },\n});\n\nconst emit = defineEmits<{\n  (event: \"delete\"): void;\n  (event: \"toggleEditMode\"): void;\n  (event: \"toggleStatus\"): void;\n}>();\n\nconst status = toRef(props, \"status\");\nconst showDeleteDialog = ref(false);\nconst primary = computed(() => ({\n  label: status.value === \"Published\" ? \"Unpublish\" : \"Publish\",\n  theme: \"gray\",\n  variant: \"solid\",\n  onClick: () => emit(\"toggleStatus\"),\n}));\nconst dropdownOptions = [\n  {\n    label: \"Edit\",\n    icon: IconEdit,\n    onClick: () => emit(\"toggleEditMode\"),\n  },\n  {\n    label: \"Delete\",\n    icon: IconTrash,\n    onClick: () => (showDeleteDialog.value = !showDeleteDialog.value),\n  },\n];\nconst deleteDialogOptions = {\n  title: \"Delete\",\n  message: \"Are you sure you want to delete? This action can not be reversed\",\n  icon: {\n    name: \"alert-triangle\",\n    appearance: \"warning\",\n  },\n  actions: [\n    {\n      label: \"Confirm\",\n      theme: \"red\",\n      variant: \"solid\",\n      onClick: () => emit(\"delete\"),\n    },\n  ],\n};\n</script>\n","<template>\n  <div class=\"mb-4.5 flex items-center justify-between\">\n    <div class=\"flex items-center gap-2\">\n      <Avatar :label=\"authorFullname\" :image=\"authorImage\" />\n      <div class=\"text-base text-gray-800\">\n        {{ authorFullname }}\n      </div>\n    </div>\n    <div class=\"flex items-center gap-2 text-sm text-gray-600\">\n      <div class=\"text-gray-600\">Created</div>\n      <div class=\"text-gray-800\">\n        {{ dayjs.tz(creation).fromNow() }}\n      </div>\n      <div class=\"text-base text-gray-300\">|</div>\n      <div class=\"text-gray-600\">Modified</div>\n      <div class=\"text-gray-800\">\n        {{ dayjs.tz(modified).fromNow() }}\n      </div>\n    </div>\n  </div>\n  <div class=\"border-b pb-3\">\n    <FormControl\n      :value=\"title\"\n      type=\"text\"\n      @change=\"emit('update:title', $event.target.value)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Avatar, FormControl } from \"frappe-ui\";\nimport { dayjs } from \"@/dayjs\";\n\ninterface P {\n  categoryName: string;\n  subCategoryName: string;\n  title: string;\n  authorFullname: string;\n  authorImage: string;\n  creation: string;\n  modified: string;\n  likes?: number;\n  dislikes?: number;\n}\n\ninterface E {\n  (event: \"update:title\", title: string): void;\n}\n\ndefineProps<P>();\nconst emit = defineEmits<E>();\n</script>\n","<template>\n  <div class=\"mb-4.5 flex items-center justify-between\">\n    <div class=\"flex items-center gap-2\">\n      <Avatar :label=\"authorFullname\" :image=\"authorImage\" />\n      <div class=\"text-base text-gray-800\">\n        {{ authorFullname }}\n      </div>\n    </div>\n  </div>\n  <div class=\"border-b pb-3\">\n    <FormControl\n      type=\"text\"\n      placeholder=\"Title\"\n      @change=\"emit('update:title', $event.target.value)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Avatar, FormControl } from \"frappe-ui\";\n\ninterface P {\n  title: string;\n  authorFullname: string;\n  authorImage: string;\n}\n\ninterface E {\n  (event: \"update:title\", title: string): void;\n}\n\ndefineProps<P>();\nconst emit = defineEmits<E>();\n</script>\n","<template>\n  <div class=\"mb-8 flex items-center gap-1.5\">\n    <RouterLink :to=\"{ name: KB_PUBLIC }\">\n      <Icon icon=\"lucide:home\" class=\"h-4 w-4 text-gray-800\" />\n    </RouterLink>\n    <Icon icon=\"lucide:chevron-right\" class=\"h-4 w-4 text-gray-600\" />\n    <div\n      class=\"cursor-pointer text-base font-medium text-gray-800\"\n      @click=\"toSubCategory\"\n    >\n      {{ subCategoryName }}\n    </div>\n  </div>\n  <div class=\"border-b pb-3\">\n    <div class=\"text-3xl font-semibold text-gray-900\">\n      {{ title }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useRouter } from \"vue-router\";\nimport { KB_PUBLIC, KB_PUBLIC_CATEGORY } from \"@/router\";\nimport { Icon } from \"@iconify/vue\";\nimport { toRefs } from \"vue\";\n\nconst props = defineProps({\n  subCategoryName: {\n    type: String,\n    required: true,\n  },\n  subCategoryId: {\n    type: String,\n    required: true,\n  },\n  title: {\n    type: String,\n    required: true,\n  },\n});\n\nconst router = useRouter();\nconst { subCategoryId } = toRefs(props);\n\nfunction toSubCategory() {\n  router.push({\n    name: KB_PUBLIC_CATEGORY,\n    params: {\n      categoryId: subCategoryId.value,\n    },\n  });\n}\n</script>\n","<template>\n  <div class=\"flex h-full flex-col overflow-hidden\">\n    <PageTitle v-if=\"!route.meta.public\">\n      <template #title>\n        <Breadcrumbs :items=\"breadcrumbs\" />\n      </template>\n      <template #right>\n        <component\n          :is=\"actionsComponent\"\n          :status=\"article.data?.status\"\n          @cancel=\"() => article.reload().then((editMode = !editMode))\"\n          @create=\"insertRes.submit\"\n          @delete=\"deleteRes.submit\"\n          @discard=\"router.push(backTo)\"\n          @save=\"updateContent\"\n          @toggle-edit-mode=\"editMode = !editMode\"\n          @toggle-status=\"toggleStatus\"\n        />\n      </template>\n    </PageTitle>\n    <div class=\"overflow-auto\">\n      <div class=\"container m-auto my-12\">\n        <TextEditor\n          :content=\"textEditorContentWithIDs\"\n          :editable=\"editMode\"\n          :placeholder=\"placeholder\"\n          :extensions=\"[PreserveIds]\"\n          class=\"rounded\"\n          :class=\"{\n            shadow: editMode,\n            'p-4': editMode,\n          }\"\n          editor-class=\"prose-f\"\n          @change=\"articleContent = $event\"\n        >\n          <template #top>\n            <component\n              :is=\"topComponent\"\n              v-model:title=\"articleTitle\"\n              v-bind=\"options__\"\n            />\n            <TextEditorFixedMenu\n              v-if=\"editMode\"\n              class=\"-ml-1\"\n              :buttons=\"textEditorMenuButtons\"\n            />\n          </template>\n        </TextEditor>\n        <RouterLink\n          v-if=\"route.meta.public\"\n          :to=\"{ name: CUSTOMER_PORTAL_NEW_TICKET }\"\n        >\n          <Button\n            label=\"Still need help? Create a ticket\"\n            size=\"md\"\n            theme=\"gray\"\n            variant=\"solid\"\n          >\n            <template #suffix> &rightarrow; </template>\n          </Button>\n        </RouterLink>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { capture } from \"@/telemetry\";\nimport {\n  createResource,\n  createDocumentResource,\n  debounce,\n  Button,\n  TextEditor,\n  TextEditorFixedMenu,\n  Breadcrumbs,\n} from \"frappe-ui\";\nimport {\n  AGENT_PORTAL_KNOWLEDGE_BASE_ARTICLE,\n  AGENT_PORTAL_KNOWLEDGE_BASE_CATEGORY,\n  AGENT_PORTAL_KNOWLEDGE_BASE_SUB_CATEGORY,\n  CUSTOMER_PORTAL_NEW_TICKET,\n} from \"@/router\";\nimport { createToast } from \"@/utils\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { useError } from \"@/composables/error\";\n\nimport { PageTitle } from \"@/components\";\nimport KnowledgeBaseArticleActionsEdit from \"./knowledge-base/KnowledgeBaseArticleActionsEdit.vue\";\nimport KnowledgeBaseArticleActionsNew from \"./knowledge-base/KnowledgeBaseArticleActionsNew.vue\";\nimport KnowledgeBaseArticleActionsView from \"./knowledge-base/KnowledgeBaseArticleActionsView.vue\";\nimport KnowledgeBaseArticleTopEdit from \"./knowledge-base/KnowledgeBaseArticleTopEdit.vue\";\nimport KnowledgeBaseArticleTopNew from \"./knowledge-base/KnowledgeBaseArticleTopNew.vue\";\nimport KnowledgeBaseArticleTopPublic from \"./knowledge-base/KnowledgeBaseArticleTopPublic.vue\";\nimport KnowledgeBaseArticleTopView from \"./knowledge-base/KnowledgeBaseArticleTopView.vue\";\nimport { Extension } from \"@tiptap/core\";\n\nconst props = defineProps({\n  articleId: {\n    type: String,\n    required: true,\n  },\n});\n\nonMounted(() => {\n  setTimeout(() => {\n    scrollToHeading();\n  }, 100);\n});\n\nfunction scrollToHeading() {\n  const articleHeading = window.location.hash;\n  if (!articleHeading) return;\n  const headingElement = document.querySelector(articleHeading);\n  if (!headingElement) return;\n  headingElement.scrollIntoView({ behavior: \"smooth\" });\n}\n\nconst route = useRoute();\nconst router = useRouter();\nconst authStore = useAuthStore();\nconst isNew = props.articleId === \"new\";\nconst editMode = ref(isNew);\nconst categoryId = computed(() => route.query.category);\nconst subCategoryId = computed(() => route.query.subCategory);\nconst breadcrumbs = computed(() => {\n  const items = [\n    {\n      label: options__.value.categoryName,\n      route: {\n        name: AGENT_PORTAL_KNOWLEDGE_BASE_CATEGORY,\n        params: { categoryId: options__.value.categoryId },\n      },\n    },\n    {\n      label: options__.value.subCategoryName,\n      route: {\n        name: AGENT_PORTAL_KNOWLEDGE_BASE_SUB_CATEGORY,\n        params: {\n          categoryId: options__.value.categoryId,\n          subCategoryId: options__.value.subCategoryId,\n        },\n      },\n    },\n  ];\n\n  if (!isNew) {\n    items.push({\n      label: article.data?.title,\n      route: {\n        name: AGENT_PORTAL_KNOWLEDGE_BASE_ARTICLE,\n        params: {\n          articleId: article.data?.name,\n        },\n        query: {\n          category: options__.value.categoryId,\n          subCategory: options__.value.subCategoryId,\n        },\n      },\n    });\n  }\n  return items;\n});\nconst placeholder = computed(() =>\n  editMode.value ? \"Write something...\" : \"Content is empty\"\n);\nconst articleContent = ref(\"\");\nconst articleTitle = ref(\"\");\n\nconst actionsComponent = computed(() => {\n  if (isNew) return KnowledgeBaseArticleActionsNew;\n  if (editMode.value) return KnowledgeBaseArticleActionsEdit;\n  return KnowledgeBaseArticleActionsView;\n});\n\nconst topComponent = computed(() => {\n  if (route.meta.public) return KnowledgeBaseArticleTopPublic;\n  if (isNew) return KnowledgeBaseArticleTopNew;\n  if (editMode.value) return KnowledgeBaseArticleTopEdit;\n  return KnowledgeBaseArticleTopView;\n});\n\nconst article = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_article.api.get_article\",\n  params: {\n    name: props.articleId,\n  },\n  onSuccess(data) {\n    articleTitle.value = data.title;\n    capture(\"article_viewed\", {\n      data: {\n        user: authStore.userId,\n        article: data.name,\n        title: data.title,\n      },\n    });\n  },\n  auto: !isNew,\n});\n\nconst category = createDocumentResource({\n  doctype: \"HD Article Category\",\n  name: categoryId.value,\n  auto: true,\n});\n\nconst subCategory = createDocumentResource({\n  doctype: \"HD Article Category\",\n  name: subCategoryId.value,\n  auto: true,\n});\n\nconst options__ = computed(() => ({\n  authorFullname: article.data?.author.full_name || authStore.userName,\n  authorImage: article.data?.author.user_image || authStore.userImage,\n  categoryId: categoryId.value,\n  categoryName:\n    article.data?.category.category_name || category?.doc?.category_name,\n  creation: article.data?.creation,\n  modified: article.data?.modified,\n  status: article.data?.status,\n  subCategoryId: subCategoryId.value,\n  subCategoryName:\n    article.data?.sub_category.category_name || subCategory?.doc?.category_name,\n  title: article.data?.title,\n}));\n\nconst insertRes = createResource({\n  url: \"frappe.client.insert\",\n  makeParams() {\n    return {\n      doc: {\n        doctype: \"HD Article\",\n        category: subCategoryId.value,\n        title: articleTitle.value,\n        content: articleContent.value,\n      },\n    };\n  },\n  validate(params) {\n    if (!params.doc.title) throw \"Title is required\";\n    if (!params.doc.content) throw \"Content is required\";\n  },\n  onSuccess(data) {\n    router.push({\n      name: AGENT_PORTAL_KNOWLEDGE_BASE_ARTICLE,\n      params: {\n        articleId: data.name,\n      },\n    });\n  },\n  onError: useError({ title: \"Error creating article\" }),\n});\n\nconst setValueRes = createResource({\n  url: \"frappe.client.set_value\",\n  onSuccess() {\n    article.reload();\n    createToast({\n      title: \"Article updated\",\n      icon: \"check\",\n      iconClasses: \"text-green-500\",\n    });\n  },\n  onError: useError({ title: \"Error updating article\" }),\n});\n\nconst deleteRes = createResource({\n  url: \"frappe.client.delete\",\n  makeParams() {\n    return {\n      doctype: \"HD Article\",\n      name: props.articleId,\n    };\n  },\n  onSuccess() {\n    router.replace(backTo.value);\n  },\n});\n\nconst updateContent = debounce(() => {\n  setValueRes.submit({\n    doctype: \"HD Article\",\n    name: article.data.name,\n    fieldname: {\n      content: articleContent.value,\n      title: articleTitle.value,\n    },\n  });\n}, 300);\n\nconst toggleStatus = debounce(() => {\n  const status = article.data.status === \"Published\" ? \"Draft\" : \"Published\";\n  setValueRes.submit({\n    doctype: \"HD Article\",\n    name: article.data.name,\n    fieldname: \"status\",\n    value: status,\n  });\n}, 300);\n\nconst backTo = computed(() => ({\n  name: AGENT_PORTAL_KNOWLEDGE_BASE_SUB_CATEGORY,\n  params: {\n    categoryId: categoryId.value,\n    subCategoryId: subCategoryId.value,\n  },\n}));\n\nconst textEditorMenuButtons = [\n  \"Paragraph\",\n  [\"Heading 2\", \"Heading 3\", \"Heading 4\", \"Heading 5\", \"Heading 6\"],\n  \"Separator\",\n  \"Bold\",\n  \"Italic\",\n  \"Separator\",\n  \"Bullet List\",\n  \"Numbered List\",\n  \"Separator\",\n  \"Align Left\",\n  \"Align Center\",\n  \"Align Right\",\n  \"FontColor\",\n  \"Separator\",\n  \"Image\",\n  \"Video\",\n  \"Link\",\n  \"Blockquote\",\n  \"Code\",\n  \"Horizontal Rule\",\n  [\n    \"InsertTable\",\n    \"AddColumnBefore\",\n    \"AddColumnAfter\",\n    \"DeleteColumn\",\n    \"AddRowBefore\",\n    \"AddRowAfter\",\n    \"DeleteRow\",\n    \"MergeCells\",\n    \"SplitCell\",\n    \"ToggleHeaderColumn\",\n    \"ToggleHeaderRow\",\n    \"ToggleHeaderCell\",\n    \"DeleteTable\",\n  ],\n];\n\n// extension to preserve ids in html of headings\nconst PreserveIds: Extension = Extension.create({\n  name: \"preserveIds\",\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"heading\"],\n        attributes: {\n          id: {\n            default: null,\n            parseHTML: (element) => element.getAttribute(\"id\"),\n            renderHTML: (attributes) => {\n              if (!attributes.id) {\n                return {};\n              }\n              return { id: attributes.id };\n            },\n          },\n        },\n      },\n    ];\n  },\n});\n\nconst textEditorContentWithIDs = computed(() =>\n  addLinksToHeadings(article.data?.content)\n);\n\nfunction addLinksToHeadings(content: string) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(content, \"text/html\");\n  const headings = doc.querySelectorAll(\"h2, h3, h4, h5, h6\");\n  headings.forEach((heading) => {\n    const text = heading.textContent.trim();\n    const id = text.replace(/[^a-z0-9]+/gi, \"-\").toLowerCase();\n    heading.setAttribute(\"id\", id);\n  });\n  return doc.body.innerHTML;\n}\n</script>\n"],"names":["emit","__emit","primary","secondary","props","__props","status","toRef","showDeleteDialog","ref","computed","dropdownOptions","IconEdit","IconTrash","deleteDialogOptions","router","useRouter","subCategoryId","toRefs","toSubCategory","KB_PUBLIC_CATEGORY","onMounted","scrollToHeading","articleHeading","headingElement","route","useRoute","authStore","useAuthStore","isNew","editMode","categoryId","breadcrumbs","items","options__","AGENT_PORTAL_KNOWLEDGE_BASE_CATEGORY","AGENT_PORTAL_KNOWLEDGE_BASE_SUB_CATEGORY","article","AGENT_PORTAL_KNOWLEDGE_BASE_ARTICLE","placeholder","articleContent","articleTitle","actionsComponent","KnowledgeBaseArticleActionsNew","KnowledgeBaseArticleActionsEdit","KnowledgeBaseArticleActionsView","topComponent","KnowledgeBaseArticleTopPublic","KnowledgeBaseArticleTopNew","KnowledgeBaseArticleTopEdit","KnowledgeBaseArticleTopView","createResource","data","capture","category","createDocumentResource","subCategory","insertRes","params","useError","setValueRes","createToast","deleteRes","backTo","updateContent","debounce","toggleStatus","textEditorMenuButtons","PreserveIds","Extension","element","attributes","textEditorContentWithIDs","addLinksToHeadings","content","doc","heading","id"],"mappings":"+3DAmBA,MAAAA,EAAAC,EAKAC,EAAA,CAAgB,MAAA,OACP,MAAA,OACA,QAAA,QACE,QAAA,IAAAF,EAAA,MAAA,CACiB,EAG5BG,EAAA,CAAkB,MAAA,SACT,MAAA,OACA,QAAA,SACE,QAAA,IAAAH,EAAA,QAAA,CACmB,sTCjB9B,MAAAA,EAAAC,EAKAC,EAAA,CAAgB,MAAA,SACP,MAAA,OACA,QAAA,QACE,QAAA,IAAAF,EAAA,QAAA,CACmB,EAG9BG,EAAA,CAAkB,MAAA,UACT,MAAA,OACA,QAAA,SACE,QAAA,IAAAH,EAAA,SAAA,CACoB,k7BCb/B,MAAAI,EAAAC,EAQAL,EAAAC,EAMAK,EAAAC,GAAAH,EAAA,QAAA,EACAI,EAAAC,EAAA,EAAA,EACAP,EAAAQ,EAAA,KAAA,CAAgC,MAAAJ,EAAA,QAAA,YAAA,YAAA,UACsB,MAAA,OAC7C,QAAA,QACE,QAAA,IAAAN,EAAA,cAAA,CACyB,EAAA,EAEpCW,EAAA,CAAwB,CACtB,MAAA,OACS,KAAAC,GACD,QAAA,IAAAZ,EAAA,gBAAA,CAC8B,EACtC,CACA,MAAA,SACS,KAAAa,GACD,QAAA,IAAAL,EAAA,MAAA,CAAAA,EAAA,KACqD,CAC7D,EAEFM,EAAA,CAA4B,MAAA,SACnB,QAAA,mEACE,KAAA,CACH,KAAA,iBACE,WAAA,SACM,EACd,QAAA,CACS,CACP,MAAA,UACS,MAAA,MACA,QAAA,QACE,QAAA,IAAAd,EAAA,QAAA,CACmB,CAC9B,CACF,m8BCnBF,MAAAA,EAAAC,qsBClBA,MAAAD,EAAAC,8kBCNA,MAAAG,EAAAC,EAeAU,EAAAC,IACA,CAAA,cAAAC,CAAA,EAAAC,GAAAd,CAAA,EAEA,SAAAe,GAAA,CACEJ,EAAA,KAAA,CAAY,KAAAK,GACJ,OAAA,CACE,WAAAH,EAAA,KACoB,CAC5B,CAAA,CACD,wmECgDH,MAAAb,EAAAC,EAOAgB,GAAA,IAAA,CACE,WAAA,IAAA,CACEC,GAAgB,EAAA,GAAA,CACZ,CAAA,EAGR,SAAAA,GAAA,CACE,MAAAC,EAAA,OAAA,SAAA,KACA,GAAA,CAAAA,EAAqB,OACrB,MAAAC,EAAA,SAAA,cAAAD,CAAA,EACAC,GACAA,EAAA,eAAA,CAAA,SAAA,QAAA,CAAA,CAAoD,CAGtD,MAAAC,EAAAC,KACAX,EAAAC,IACAW,EAAAC,KACAC,EAAAzB,EAAA,YAAA,MACA0B,EAAArB,EAAAoB,CAAA,EACAE,EAAArB,EAAA,IAAAe,EAAA,MAAA,QAAA,EACAR,EAAAP,EAAA,IAAAe,EAAA,MAAA,WAAA,EACAO,EAAAtB,EAAA,IAAA,CACE,MAAAuB,EAAA,CAAc,CACZ,MAAAC,EAAA,MAAA,aACyB,MAAA,CAChB,KAAAC,GACC,OAAA,CAAA,WAAAD,EAAA,MAAA,UAAA,CAC2C,CACnD,EACF,CACA,MAAAA,EAAA,MAAA,gBACyB,MAAA,CAChB,KAAAE,EACC,OAAA,CACE,WAAAF,EAAA,MAAA,WACsB,cAAAA,EAAA,MAAA,aACG,CACjC,CACF,CACF,EAGF,OAAAL,GACEI,EAAA,KAAA,CAAW,MAAAI,EAAA,MAAA,MACY,MAAA,CACd,KAAAC,EACC,OAAA,CACE,UAAAD,EAAA,MAAA,IACmB,EAC3B,MAAA,CACO,SAAAH,EAAA,MAAA,WACqB,YAAAA,EAAA,MAAA,aACG,CAC/B,CACF,CAAA,EAGJD,CAAO,CAAA,EAETM,EAAA7B,EAAoB,IAAAoB,EAAA,MAAA,qBAAA,kBACsB,EAE1CU,EAAA/B,EAAA,EAAA,EACAgC,EAAAhC,EAAA,EAAA,EAEAiC,EAAAhC,EAAA,IACEmB,EAAWc,GACXb,EAAA,MAAoBc,GACpBC,EAAO,EAGTC,GAAApC,EAAA,IACEe,EAAA,KAAA,OAAuBsB,GACvBlB,EAAWmB,GACXlB,EAAA,MAAoBmB,GACpBC,EAAO,EAGTb,EAAAc,EAAA,CAA+B,IAAA,uDACxB,OAAA,CACG,KAAA/C,EAAA,SACM,EACd,UAAAgD,EAAA,CAEEX,EAAA,MAAAW,EAAA,MACAC,GAAA,iBAAA,CAA0B,KAAA,CAClB,KAAA1B,EAAA,OACY,QAAAyB,EAAA,KACF,MAAAA,EAAA,KACF,CACd,CAAA,CACD,EACH,KAAA,CAAAvB,CACO,CAAA,EAGTyB,GAAAC,EAAA,CAAwC,QAAA,sBAC7B,KAAAxB,EAAA,MACQ,KAAA,EACX,CAAA,EAGRyB,GAAAD,EAAA,CAA2C,QAAA,sBAChC,KAAAtC,EAAA,MACW,KAAA,EACd,CAAA,EAGRiB,EAAAxB,EAAA,KAAA,CAAkC,eAAA2B,EAAA,MAAA,OAAA,WAAAV,EAAA,SAC4B,YAAAU,EAAA,MAAA,OAAA,YAAAV,EAAA,UACF,WAAAI,EAAA,MACnC,aAAAM,EAAA,MAAA,SAAA,eAAAiB,IAAA,KAAA,cAEkC,SAAAjB,EAAA,MAAA,SACjC,SAAAA,EAAA,MAAA,SACA,OAAAA,EAAA,MAAA,OACF,cAAApB,EAAA,MACO,gBAAAoB,EAAA,MAAA,aAAA,eAAAmB,IAAA,KAAA,cAEmC,MAAAnB,EAAA,MAAA,KAC3C,EAAA,EAGvBoB,GAAAN,EAAA,CAAiC,IAAA,uBAC1B,YAAA,CAEH,MAAA,CAAO,IAAA,CACA,QAAA,aACM,SAAAlC,EAAA,MACe,MAAAwB,EAAA,MACJ,QAAAD,EAAA,KACI,CAC1B,CACF,EACF,SAAAkB,EAAA,CAEE,GAAA,CAAAA,EAAA,IAAA,MAAuB,KAAA,oBACvB,GAAA,CAAAA,EAAA,IAAA,QAAyB,KAAA,qBAAM,EACjC,UAAAN,EAAA,CAEErC,EAAA,KAAA,CAAY,KAAAuB,EACJ,OAAA,CACE,UAAAc,EAAA,IACU,CAClB,CAAA,CACD,EACH,QAAAO,EAAA,CAAA,MAAA,wBAAA,CAAA,CACqD,CAAA,EAGvDC,EAAAT,EAAA,CAAmC,IAAA,0BAC5B,WAAA,CAEHd,EAAA,OAAA,EACAwB,GAAA,CAAY,MAAA,kBACH,KAAA,QACD,YAAA,gBACO,CAAA,CACd,EACH,QAAAF,EAAA,CAAA,MAAA,wBAAA,CAAA,CACqD,CAAA,EAGvDG,GAAAX,EAAA,CAAiC,IAAA,uBAC1B,YAAA,CAEH,MAAA,CAAO,QAAA,aACI,KAAA/C,EAAA,SACG,CACd,EACF,WAAA,CAEEW,EAAA,QAAAgD,EAAA,KAAA,CAA2B,CAC7B,CAAA,EAGFC,GAAAC,EAAA,IAAA,CACEL,EAAA,OAAA,CAAmB,QAAA,aACR,KAAAvB,EAAA,KAAA,KACU,UAAA,CACR,QAAAG,EAAA,MACe,MAAAC,EAAA,KACJ,CACtB,CAAA,CACD,EAAA,GAAA,EAGHyB,GAAAD,EAAA,IAAA,CACE,MAAA3D,EAAA+B,EAAA,KAAA,SAAA,YAAA,QAAA,YACAuB,EAAA,OAAA,CAAmB,QAAA,aACR,KAAAvB,EAAA,KAAA,KACU,UAAA,SACR,MAAA/B,CACJ,CAAA,CACR,EAAA,GAAA,EAGHyD,EAAArD,EAAA,KAAA,CAA+B,KAAA0B,EACvB,OAAA,CACE,WAAAL,EAAA,MACiB,cAAAd,EAAA,KACM,CAC/B,EAAA,EAGFkD,GAAA,CAA8B,YAC5B,CAAA,YAAA,YAAA,YAAA,YAAA,WAAA,EACgE,YAChE,OACA,SACA,YACA,cACA,gBACA,YACA,aACA,eACA,cACA,YACA,YACA,QACA,QACA,OACA,aACA,OACA,kBACA,CACA,cACE,kBACA,iBACA,eACA,eACA,cACA,YACA,aACA,YACA,qBACA,kBACA,mBACA,aACA,CACF,EAIFC,GAAAC,GAAA,OAAA,CAAgD,KAAA,cACxC,qBAAA,CAEJ,MAAA,CAAO,CACL,MAAA,CAAA,SAAA,EACmB,WAAA,CACL,GAAA,CACN,QAAA,KACO,UAAAC,GAAAA,EAAA,aAAA,IAAA,EACwC,WAAAC,GAE/CA,EAAA,GAGA,CAAA,GAAAA,EAAA,IAFE,EAGJ,CACF,CACF,CACF,CACF,CACF,CAAA,EAGFC,GAAA9D,EAAiC,IAAA+D,GAAApC,EAAA,MAAA,OAAA,CACS,EAG1C,SAAAoC,GAAAC,EAAA,CAEE,MAAAC,EADA,IAAA,YACA,gBAAAD,EAAA,WAAA,EAEA,OADAC,EAAA,iBAAA,oBAAA,EACA,QAAAC,GAAA,CAEE,MAAAC,GADAD,EAAA,YAAA,KAAA,EACA,QAAA,eAAA,GAAA,EAAA,cACAA,EAAA,aAAA,KAAAC,EAAA,CAA6B,CAAA,EAE/BF,EAAA,KAAA,SAAgB"}