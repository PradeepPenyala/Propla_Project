{"version":3,"file":"TicketAgent-fd9549dd.js","sources":["../../../../desk/src/components/icons/EmailIcon.vue","../../../../desk/src/components/icons/EmailAtIcon.vue","../../../../desk/src/components/icons/CommentIcon.vue","../../../../desk/src/components/icons/AttachmentIcon.vue","../../../../desk/src/components/icons/ReplyIcon.vue","../../../../desk/src/components/icons/ReplyAllIcon.vue","../../../../desk/src/components/EmailEditor.vue","../../../../desk/src/components/CommentTextEditor.vue","../../../../desk/src/components/MultiSelectInput.vue","../../../../desk/src/components/CommunicationArea.vue","../../../../desk/src/components/EmailBox.vue","../../../../desk/src/components/CommentBox.vue","../../../../desk/src/components/HistoryBox.vue","../../../../desk/src/components/AssignmentModal.vue","../../../../desk/src/components/CannedResponseSelectorModal.vue","../../../../desk/src/components/ticket/TicketAgentActivities.vue","../../../../desk/src/components/ticket/TicketAgentDetails.vue","../../../../desk/src/components/ticket/TicketAgentContact.vue","../../../../desk/src/stores/team.ts","../../../../desk/src/stores/ticketPriority.ts","../../../../desk/src/stores/ticketType.ts","../../../../desk/src/components/UniInput2.vue","../../../../desk/src/components/ticket/TicketAgentFields.vue","../../../../desk/src/components/ticket/TicketAgentSidebar.vue","../../../../desk/src/components/CustomActions.vue","../../../../desk/src/pages/TicketAgent.vue"],"sourcesContent":["<template>\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2.5 6.5V6.5C2.5 7.10397 2.86771 7.64708 3.42848 7.87139L9.25722 10.2029C9.73404 10.3936 10.266 10.3936 10.7428 10.2029L16.5715 7.87139C17.1323 7.64708 17.5 7.10397 17.5 6.5V6.5\"\n      stroke=\"currentColor\"\n    />\n    <rect x=\"2.5\" y=\"4\" width=\"15\" height=\"12\" rx=\"2.5\" stroke=\"currentColor\" />\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M5.00915 1.67113C6.43756 0.996093 8.0523 0.824124 9.59083 1.18318L9.47719 1.67009L9.59083 1.18318C11.1294 1.54222 12.5012 2.41118 13.4833 3.64873L13.4833 3.64875C14.4653 4.8863 14.9999 6.41969 15 7.99959V7.99961V8.64961C15 9.29937 14.7419 9.92256 14.2824 10.382C13.8229 10.8415 13.1998 11.0996 12.55 11.0996C11.9002 11.0996 11.2771 10.8415 10.8176 10.382C10.6732 10.2376 10.5487 10.077 10.4458 9.90455C9.87852 10.6319 8.99387 11.0996 8.00001 11.0996C6.28792 11.0996 4.90001 9.71167 4.90001 7.99961C4.90001 6.28752 6.28792 4.8996 8.00001 4.8996C8.81015 4.8996 9.54773 5.21039 10.1 5.71924V5.3996C10.1 5.12346 10.3239 4.8996 10.6 4.8996C10.8761 4.8996 11.1 5.12346 11.1 5.3996V7.99961V8.64961C11.1 9.03414 11.2528 9.40298 11.5247 9.67491C11.7966 9.94684 12.1654 10.0996 12.55 10.0996C12.9345 10.0996 13.3034 9.94684 13.5753 9.67491C13.8472 9.40298 14 9.03414 14 8.64961V7.99964C14 7.99963 14 7.99962 14 7.99961C13.9999 6.64545 13.5417 5.33113 12.7 4.27036C11.8582 3.20959 10.6823 2.46476 9.36356 2.15701L9.477 1.67093L9.36356 2.15701C8.04482 1.84925 6.66077 1.99665 5.43641 2.57525L5.24134 2.16246L5.43641 2.57525C4.21207 3.15384 3.21944 4.12961 2.61996 5.34387C2.02048 6.55813 1.84939 7.93946 2.13451 9.26331C2.41962 10.5871 3.14418 11.7756 4.19038 12.6354C5.23657 13.4952 6.54286 13.9758 7.89687 13.9991C9.25083 14.0224 10.5729 13.587 11.648 12.7636C11.8673 12.5958 12.1811 12.6374 12.349 12.8566C12.5169 13.0759 12.4752 13.3897 12.256 13.5576C11.0017 14.5181 9.45929 15.0261 7.87968 14.999C6.30002 14.9718 4.77601 14.4111 3.55545 13.408L3.55543 13.408C2.33489 12.4048 1.48956 11.0183 1.15692 9.47385C0.824284 7.92937 1.02389 6.31782 1.72329 4.90118L2.16883 5.12114L1.72329 4.90117C2.42268 3.48454 3.58074 2.34615 5.00915 1.67113ZM10.1 7.99961C10.1 6.83981 9.15978 5.8996 8.00001 5.8996C6.84021 5.8996 5.90001 6.8398 5.90001 7.99961C5.90001 9.15939 6.84021 10.0996 8.00001 10.0996C9.15978 10.0996 10.1 9.15939 10.1 7.99961Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M8 2.5C4.2911 2.5 1.5 4.84419 1.5 7.5C1.5 9.14452 2.54729 10.6518 4.25112 11.5816C4.50048 11.7177 4.758 12.0041 4.7326 12.4082C4.71107 12.7508 4.61659 13.2533 4.47175 13.6657C4.44071 13.7541 4.40789 13.8389 4.37434 13.9195C4.62005 13.8524 4.91964 13.7411 5.26646 13.5579C5.48882 13.4404 5.69385 13.2901 5.9102 13.1207C5.95058 13.089 5.9922 13.056 6.03481 13.0222C6.20816 12.8848 6.39803 12.7342 6.58835 12.6102C6.7875 12.4803 7.01146 12.4447 7.20831 12.4631C7.46767 12.4875 7.73186 12.5 8 12.5C11.7089 12.5 14.5 10.1558 14.5 7.5C14.5 4.84419 11.7089 2.5 8 2.5ZM0.5 7.5C0.5 4.08068 3.97691 1.5 8 1.5C12.0231 1.5 15.5 4.08068 15.5 7.5C15.5 10.9193 12.0231 13.5 8 13.5C7.70158 13.5 7.40709 13.4861 7.11751 13.459C6.97583 13.5528 6.83777 13.6621 6.67569 13.7905C6.62832 13.828 6.5789 13.8671 6.52674 13.908C6.30071 14.085 6.03818 14.2812 5.73354 14.4421C4.73389 14.9702 3.9948 15.0302 3.62977 15.0147C3.39759 15.0048 3.20936 14.8646 3.12194 14.6754C3.03801 14.4938 3.05143 14.2816 3.15736 14.1099C3.24804 13.963 3.40655 13.6808 3.52825 13.3343C3.62961 13.0457 3.70134 12.6878 3.72712 12.4347C1.81521 11.3748 0.5 9.58517 0.5 7.5Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M12.5684 2.50774C11.5403 1.49742 9.95026 1.49742 8.92215 2.50774L3.62404 7.71417C2.12532 9.18695 2.12532 11.669 3.62404 13.1418C5.12762 14.6194 7.66861 14.6194 9.17219 13.1418L12.1609 10.2049C12.3578 10.0113 12.6744 10.0141 12.8679 10.211C13.0615 10.408 13.0587 10.7246 12.8618 10.9181L9.8731 13.8551C7.98045 15.715 4.81578 15.715 2.92313 13.8551C1.02562 11.9904 1.02562 8.86558 2.92313 7.00091L8.22124 1.79449C9.63842 0.401838 11.8521 0.401838 13.2693 1.79449C14.6914 3.19191 14.6914 5.38225 13.2693 6.77968L13.2668 6.78213L13.2668 6.78212L8.37876 11.5189C8.37834 11.5193 8.37793 11.5197 8.37752 11.5201C7.51767 12.3638 6.11144 12.3939 5.29119 11.5097C4.43611 10.6596 4.40778 9.26893 5.30922 8.46081L7.33823 6.46692C7.53518 6.27337 7.85175 6.27613 8.04531 6.47309C8.23886 6.67005 8.23609 6.98662 8.03913 7.18017L6.0014 9.18264L5.99203 9.19185L5.98219 9.20055C5.5391 9.59243 5.5104 10.3231 6.0014 10.8056L6.01078 10.8148L6.01967 10.8245C6.42299 11.2649 7.18224 11.2926 7.67785 10.8056L7.68034 10.8032L7.68035 10.8032L12.5684 6.06643C12.5688 6.06604 12.5692 6.06565 12.5696 6.06526C13.5917 5.05969 13.5913 3.51289 12.5684 2.50774Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M5.64645 3.14645C5.84171 2.95118 6.15829 2.95118 6.35355 3.14645C6.54882 3.34171 6.54882 3.65829 6.35355 3.85355L3.20711 7H10C12.4853 7 14.5 9.01472 14.5 11.5V12C14.5 12.2761 14.2761 12.5 14 12.5C13.7239 12.5 13.5 12.2761 13.5 12V11.5C13.5 9.567 11.933 8 10 8H3.20711L6.35355 11.1464C6.54882 11.3417 6.54882 11.6583 6.35355 11.8536C6.15829 12.0488 5.84171 12.0488 5.64645 11.8536L1.64645 7.85355C1.45118 7.65829 1.45118 7.34171 1.64645 7.14645L5.64645 3.14645Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M5.85355 3.14645C5.65829 2.95118 5.34171 2.95118 5.14645 3.14645L1.14645 7.14645C0.951184 7.34171 0.951184 7.65829 1.14645 7.85355L5.14645 11.8536C5.34171 12.0488 5.65829 12.0488 5.85355 11.8536C6.04882 11.6583 6.04882 11.3417 5.85355 11.1464L2.20711 7.5L5.85355 3.85355C6.04882 3.65829 6.04882 3.34171 5.85355 3.14645ZM10 8C11.933 8 13.5 9.567 13.5 11.5V12C13.5 12.2761 13.7239 12.5 14 12.5C14.2761 12.5 14.5 12.2761 14.5 12V11.5C14.5 9.01472 12.4853 7 10 7H6.6728L9.81924 3.85355C10.0145 3.65829 10.0145 3.34171 9.81924 3.14645C9.62398 2.95118 9.3074 2.95118 9.11214 3.14645L5.11214 7.14645C4.91688 7.34171 4.91688 7.65829 5.11214 7.85355L9.11214 11.8536C9.3074 12.0488 9.62398 12.0488 9.81924 11.8536C10.0145 11.6583 10.0145 11.3417 9.81924 11.1464L6.6728 8H10Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <TextEditor\n    ref=\"editorRef\"\n    :editor-class=\"[\n      'prose-sm max-w-none mx-10 max-h-[50vh] overflow-y-auto py-3',\n      true && 'min-h-[7rem]',\n    ]\"\n    :content=\"newEmail\"\n    :starterkit-options=\"{ heading: { levels: [2, 3, 4, 5, 6] } }\"\n    :placeholder=\"placeholder\"\n    :editable=\"editable\"\n    @change=\"editable ? (newEmail = $event) : null\"\n  >\n    <template #top>\n      <div class=\"mx-10 flex items-center gap-2 border-y py-2.5\">\n        <span class=\"text-xs text-gray-500\">TO:</span>\n        <MultiSelectInput\n          v-model=\"toEmailsClone\"\n          class=\"flex-1\"\n          :validate=\"validateEmail\"\n          :error-message=\"(value) => `${value} is an invalid email address`\"\n        />\n        <Button\n          :label=\"'CC'\"\n          :class=\"[cc ? 'bg-gray-300 hover:bg-gray-200' : '']\"\n          @click=\"toggleCC()\"\n        />\n        <Button\n          :label=\"'BCC'\"\n          :class=\"[bcc ? 'bg-gray-300 hover:bg-gray-200' : '']\"\n          @click=\"toggleBCC()\"\n        />\n      </div>\n      <div\n        v-if=\"showCC || cc\"\n        class=\"mx-10 flex items-center gap-2 py-2.5\"\n        :class=\"cc || showCC ? 'border-b' : ''\"\n      >\n        <span class=\"text-xs text-gray-500\">CC:</span>\n        <MultiSelectInput\n          ref=\"ccInput\"\n          v-model=\"ccEmailsClone\"\n          class=\"flex-1\"\n          :validate=\"validateEmail\"\n          :error-message=\"(value) => `${value} is an invalid email address`\"\n        />\n      </div>\n      <div\n        v-if=\"showBCC || bcc\"\n        class=\"mx-10 flex items-center gap-2 py-2.5\"\n        :class=\"bcc || showBCC ? 'border-b' : ''\"\n      >\n        <span class=\"text-xs text-gray-500\">BCC:</span>\n        <MultiSelectInput\n          ref=\"bccInput\"\n          v-model=\"bccEmailsClone\"\n          class=\"flex-1\"\n          :validate=\"validateEmail\"\n          :error-message=\"(value) => `${value} is an invalid email address`\"\n        />\n      </div>\n    </template>\n    <template #bottom>\n      <div class=\"flex flex-wrap gap-2 px-10\">\n        <AttachmentItem\n          v-for=\"a in attachments\"\n          :key=\"a.file_url\"\n          :label=\"a.file_name\"\n        >\n          <template #suffix>\n            <FeatherIcon\n              class=\"h-3.5\"\n              name=\"x\"\n              @click.stop=\"removeAttachment(a)\"\n            />\n          </template>\n        </AttachmentItem>\n      </div>\n      <div class=\"flex justify-between gap-2 overflow-hidden px-10 py-2.5\">\n        <div class=\"flex items-center overflow-x-auto\">\n          <TextEditorFixedMenu class=\"-ml-1\" :buttons=\"textEditorMenuButtons\" />\n          <div class=\"flex gap-1\">\n            <FileUploader\n              :upload-args=\"{\n                doctype: doctype,\n                docname: modelValue?.name,\n                private: true,\n              }\"\n              @success=\"\n                (f) => {\n                  attachments.push(f);\n                }\n              \"\n            >\n              <template #default=\"{ openFileSelector }\">\n                <Button variant=\"ghost\" @click=\"openFileSelector()\">\n                  <template #icon>\n                    <AttachmentIcon class=\"h-4\" />\n                  </template>\n                </Button>\n              </template>\n            </FileUploader>\n            <Button\n              variant=\"ghost\"\n              @click=\"showCannedResponseSelectorModal = true\"\n            >\n              <template #icon>\n                <EmailIcon class=\"h-4\" />\n              </template>\n            </Button>\n          </div>\n        </div>\n        <div class=\"mt-2 flex items-center justify-end space-x-2 sm:mt-0\">\n          <Button\n            label=\"Discard\"\n            @click=\"\n              () => {\n                ccEmailsClone = [];\n                bccEmailsClone = [];\n                cc = false;\n                bcc = false;\n                newEmail = '';\n                emit('discard');\n              }\n            \"\n          />\n          <Button\n            variant=\"solid\"\n            :disabled=\"emailEmpty\"\n            :loading=\"loading\"\n            label=\"Submit\"\n            @click=\"\n              () => {\n                loading = true;\n                submitMail();\n              }\n            \"\n          />\n        </div>\n      </div>\n    </template>\n  </TextEditor>\n  <CannedResponseSelectorModal\n    v-model=\"showCannedResponseSelectorModal\"\n    :doctype=\"doctype\"\n    @apply=\"applyCannedResponse\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, nextTick } from \"vue\";\nimport { useStorage } from \"@vueuse/core\";\nimport {\n  FileUploader,\n  TextEditor,\n  TextEditorFixedMenu,\n  createResource,\n} from \"frappe-ui\";\nimport { validateEmail } from \"@/utils\";\nimport {\n  MultiSelectInput,\n  AttachmentItem,\n  CannedResponseSelectorModal,\n} from \"@/components\";\nimport { AttachmentIcon, EmailIcon } from \"@/components/icons\";\n\nconst editorRef = ref(null);\nconst showCannedResponseSelectorModal = ref(false);\nconst loading = ref(false);\n\nconst props = defineProps({\n  placeholder: {\n    type: String,\n    default: null,\n  },\n  editable: {\n    type: Boolean,\n    default: true,\n  },\n  doctype: {\n    type: String,\n    default: \"HD Ticket\",\n  },\n  toEmails: {\n    type: Array,\n    default: () => [],\n  },\n  ccEmails: {\n    type: Array,\n    default: () => [],\n  },\n  bccEmails: {\n    type: Array,\n    default: () => [],\n  },\n});\n\nconst newEmail = useStorage(\"emailBoxContent\", \"\");\n\nconst emailEmpty = computed(() => {\n  return !newEmail.value || newEmail.value === \"<p></p>\";\n});\n\nconst emit = defineEmits([\"submit\", \"discard\"]);\n\nconst doc = defineModel();\nconst attachments = ref([]);\nconst toEmailsClone = ref([...props.toEmails]);\nconst ccEmailsClone = ref([...props.ccEmails]);\nconst bccEmailsClone = ref([...props.bccEmails]);\nconst showCC = ref(false);\nconst showBCC = ref(false);\nconst cc = computed(() => (ccEmailsClone.value?.length ? true : false));\nconst bcc = computed(() => (bccEmailsClone.value?.length ? true : false));\nconst ccInput = ref(null);\nconst bccInput = ref(null);\n\nfunction applyCannedResponse(template) {\n  newEmail.value = template.message;\n  showCannedResponseSelectorModal.value = false;\n}\n\nfunction submitMail() {\n  const sendMail = createResource({\n    url: \"run_doc_method\",\n    makeParams: () => ({\n      dt: props.doctype,\n      dn: doc.value.name,\n      method: \"reply_via_agent\",\n      args: {\n        attachments: attachments.value.map((x) => x.name),\n        to: toEmailsClone.value.join(\",\"),\n        cc: ccEmailsClone.value?.join(\",\"),\n        bcc: bccEmailsClone.value?.join(\",\"),\n        message: newEmail.value,\n      },\n    }),\n    onSuccess: () => {\n      newEmail.value = \"\";\n      emit(\"submit\");\n      loading.value = false;\n    },\n  });\n\n  sendMail.submit();\n}\n\nfunction toggleCC() {\n  showCC.value = !showCC.value;\n\n  showCC.value &&\n    nextTick(() => {\n      ccInput.value.setFocus();\n    });\n}\n\nfunction toggleBCC() {\n  showBCC.value = !showBCC.value;\n  showBCC.value &&\n    nextTick(() => {\n      bccInput.value.setFocus();\n    });\n}\n\nfunction removeAttachment(attachment) {\n  attachments.value = attachments.value.filter((a) => a !== attachment);\n}\n\nfunction addToReply(\n  body: string,\n  toEmails: string[],\n  ccEmails: string[],\n  bccEmails: string[]\n) {\n  toEmailsClone.value = toEmails;\n  ccEmailsClone.value = ccEmails;\n  bccEmailsClone.value = bccEmails;\n  editorRef.value.editor\n    .chain()\n    .clearContent()\n    .insertContent(body)\n    .focus(\"all\")\n    .setBlockquote()\n    .insertContentAt(0, { type: \"paragraph\" })\n    .focus(\"start\")\n    .run();\n}\n\nconst textEditorMenuButtons = [\n  \"Paragraph\",\n  [\"Heading 2\", \"Heading 3\", \"Heading 4\", \"Heading 5\", \"Heading 6\"],\n  \"Separator\",\n  \"Bold\",\n  \"Italic\",\n  \"Separator\",\n  \"Bullet List\",\n  \"Numbered List\",\n  \"Separator\",\n  \"Align Left\",\n  \"Align Center\",\n  \"Align Right\",\n  \"FontColor\",\n  \"Separator\",\n  \"Image\",\n  \"Video\",\n  \"Link\",\n  \"Blockquote\",\n  \"Code\",\n  \"Horizontal Rule\",\n  [\n    \"InsertTable\",\n    \"AddColumnBefore\",\n    \"AddColumnAfter\",\n    \"DeleteColumn\",\n    \"AddRowBefore\",\n    \"AddRowAfter\",\n    \"DeleteRow\",\n    \"MergeCells\",\n    \"SplitCell\",\n    \"ToggleHeaderColumn\",\n    \"ToggleHeaderRow\",\n    \"ToggleHeaderCell\",\n    \"DeleteTable\",\n  ],\n];\n\ndefineExpose({\n  addToReply,\n});\n</script>\n","<template>\n  <TextEditor\n    v-if=\"agentsList.data\"\n    ref=\"textEditor\"\n    :editor-class=\"[\n      'prose-sm max-w-none',\n      editable &&\n        'min-h-[7rem] mx-10 max-h-[50vh] overflow-y-auto border-t py-3',\n    ]\"\n    :content=\"newComment\"\n    :starterkit-options=\"{ heading: { levels: [2, 3, 4, 5, 6] } }\"\n    :placeholder=\"placeholder\"\n    :editable=\"editable\"\n    :mentions=\"agents\"\n    @change=\"editable ? (newComment = $event) : null\"\n  >\n    <template #bottom>\n      <div v-if=\"editable\" class=\"flex flex-col gap-2\">\n        <div class=\"flex flex-wrap gap-2 px-10\">\n          <AttachmentItem\n            v-for=\"a in attachments\"\n            :key=\"a.file_url\"\n            :label=\"a.file_name\"\n          >\n            <template #suffix>\n              <FeatherIcon\n                class=\"h-3.5\"\n                name=\"x\"\n                @click.stop=\"removeAttachment(a)\"\n              />\n            </template>\n          </AttachmentItem>\n        </div>\n        <div\n          class=\"flex justify-between gap-2 overflow-hidden border-t px-10 py-2.5\"\n        >\n          <div class=\"flex items-center overflow-x-auto\">\n            <TextEditorFixedMenu\n              class=\"-ml-1\"\n              :buttons=\"textEditorMenuButtons\"\n            />\n            <FileUploader\n              :upload-args=\"{\n                doctype: doctype,\n                docname: modelValue.name,\n                private: true,\n              }\"\n              @success=\"(f) => attachments.push(f)\"\n            >\n              <template #default=\"{ openFileSelector }\">\n                <Button\n                  theme=\"gray\"\n                  variant=\"ghost\"\n                  @click=\"openFileSelector()\"\n                >\n                  <template #icon>\n                    <AttachmentIcon class=\"h-4\" />\n                  </template>\n                </Button>\n              </template>\n            </FileUploader>\n          </div>\n          <div class=\"mt-2 flex items-center justify-end space-x-2 sm:mt-0\">\n            <Button\n              label=\"Discard\"\n              @click=\"\n                () => {\n                  newComment = '';\n                  emit('discard');\n                }\n              \"\n            />\n            <Button\n              variant=\"solid\"\n              label=\"Submit\"\n              :disabled=\"commentEmpty\"\n              :loading=\"loading\"\n              @click=\"\n                () => {\n                  loading = true;\n                  submitComment();\n                  newComment = '';\n                }\n              \"\n            />\n          </div>\n        </div>\n      </div>\n    </template>\n  </TextEditor>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport {\n  TextEditorFixedMenu,\n  TextEditor,\n  FileUploader,\n  createResource,\n} from \"frappe-ui\";\n\nimport { AttachmentIcon } from \"@/components/icons/\";\nimport { AttachmentItem } from \"@/components/\";\nimport { useAgentStore } from \"@/stores/agent\";\nimport { useStorage } from \"@vueuse/core\";\n\nconst { agents: agentsList } = useAgentStore();\n\nconst props = defineProps({\n  placeholder: {\n    type: String,\n    default: null,\n  },\n  editable: {\n    type: Boolean,\n    default: true,\n  },\n  doctype: {\n    type: String,\n    default: \"HD Ticket\",\n  },\n});\n\nconst doc = defineModel();\nconst attachments = ref([]);\nconst emit = defineEmits([\"submit\", \"discard\"]);\nconst newComment = useStorage(\"commentBoxContent\", \"\");\nconst commentEmpty = computed(() => {\n  return !newComment.value || newComment.value === \"<p></p>\";\n});\nconst loading = ref(false);\n\nconst agents = computed(() => {\n  return (\n    agentsList.data?.map((agent) => ({\n      label: agent.agent_name.trimEnd(),\n      value: agent.name,\n    })) || []\n  );\n});\n\nfunction removeAttachment(attachment) {\n  attachments.value = attachments.value.filter((a) => a !== attachment);\n}\n\nasync function submitComment() {\n  const comment = createResource({\n    url: \"run_doc_method\",\n    makeParams: () => ({\n      dt: props.doctype,\n      dn: doc.value.name,\n      method: \"new_comment\",\n      args: {\n        content: newComment.value,\n      },\n    }),\n    onSuccess: () => {\n      emit(\"submit\");\n      loading.value = false;\n    },\n  });\n\n  comment.submit();\n}\n\nconst textEditorMenuButtons = [\n  \"Paragraph\",\n  [\"Heading 2\", \"Heading 3\", \"Heading 4\", \"Heading 5\", \"Heading 6\"],\n  \"Separator\",\n  \"Bold\",\n  \"Italic\",\n  \"Separator\",\n  \"Bullet List\",\n  \"Numbered List\",\n  \"Separator\",\n  \"Align Left\",\n  \"Align Center\",\n  \"Align Right\",\n  \"FontColor\",\n  \"Separator\",\n  \"Image\",\n  \"Video\",\n  \"Link\",\n  \"Blockquote\",\n  \"Code\",\n  \"Horizontal Rule\",\n  [\n    \"InsertTable\",\n    \"AddColumnBefore\",\n    \"AddColumnAfter\",\n    \"DeleteColumn\",\n    \"AddRowBefore\",\n    \"AddRowAfter\",\n    \"DeleteRow\",\n    \"MergeCells\",\n    \"SplitCell\",\n    \"ToggleHeaderColumn\",\n    \"ToggleHeaderRow\",\n    \"ToggleHeaderCell\",\n    \"DeleteTable\",\n  ],\n];\n</script>\n","<template>\n  <div>\n    <div class=\"flex flex-wrap gap-1\">\n      <Button\n        v-for=\"value in values\"\n        ref=\"emails\"\n        :key=\"value\"\n        :label=\"value\"\n        theme=\"gray\"\n        variant=\"subtle\"\n        class=\"rounded-full\"\n        @keydown.delete.capture.stop=\"removeLastValue\"\n      >\n        <template #suffix>\n          <FeatherIcon\n            class=\"h-3.5\"\n            name=\"x\"\n            @click.stop=\"removeValue(value)\"\n          />\n        </template>\n      </Button>\n      <div class=\"flex-1\">\n        <Combobox v-model=\"selectedValue\" nullable>\n          <Popover v-model:show=\"showOptions\" class=\"w-full\">\n            <template #target=\"{ togglePopover }\">\n              <ComboboxInput\n                ref=\"search\"\n                class=\"search-input form-input w-full border-none bg-white hover:bg-white focus:border-none focus:!shadow-none focus-visible:!ring-0\"\n                type=\"text\"\n                :value=\"query\"\n                autocomplete=\"off\"\n                @change=\"\n                  (e) => {\n                    query = e.target.value;\n                    showOptions = true;\n                  }\n                \"\n                @focus=\"() => togglePopover()\"\n                @keydown.delete.capture.stop=\"removeLastValue\"\n              />\n            </template>\n            <template #body=\"{ isOpen }\">\n              <div v-show=\"isOpen\">\n                <div class=\"mt-1 rounded-lg bg-white py-1 text-base shadow-2xl\">\n                  <ComboboxOptions\n                    class=\"my-1 max-h-[12rem] overflow-y-auto px-1.5\"\n                    static\n                  >\n                    <ComboboxOption\n                      v-for=\"option in options\"\n                      :key=\"option.value\"\n                      v-slot=\"{ active }\"\n                      :value=\"option\"\n                    >\n                      <li\n                        :class=\"[\n                          'flex cursor-pointer items-center rounded px-2 py-1 text-base',\n                          { 'bg-gray-100': active },\n                        ]\"\n                      >\n                        <UserAvatar\n                          class=\"mr-2\"\n                          :name=\"option.value\"\n                          size=\"lg\"\n                        />\n                        <div class=\"flex flex-col gap-1 p-1 text-gray-800\">\n                          <div class=\"text-base font-medium\">\n                            {{ option.label }}\n                          </div>\n                          <div class=\"text-sm text-gray-600\">\n                            {{ option.value }}\n                          </div>\n                        </div>\n                      </li>\n                    </ComboboxOption>\n                  </ComboboxOptions>\n                </div>\n              </div>\n            </template>\n          </Popover>\n        </Combobox>\n      </div>\n    </div>\n    <ErrorMessage v-if=\"error\" class=\"mt-2 pl-2\" :message=\"error\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxOptions,\n  ComboboxOption,\n} from \"@headlessui/vue\";\nimport { UserAvatar } from \"@/components/\";\nimport { Popover, createResource } from \"frappe-ui\";\nimport { ref, computed, nextTick } from \"vue\";\nimport { watchDebounced } from \"@vueuse/core\";\n\nconst props = defineProps({\n  validate: {\n    type: Function,\n    default: null,\n  },\n  errorMessage: {\n    type: Function,\n    default: (value) => `${value} is an Invalid value`,\n  },\n});\n\nconst values = defineModel();\n\nconst emails = ref([]);\nconst search = ref(null);\nconst error = ref(null);\nconst query = ref(\"\");\nconst text = ref(\"\");\nconst showOptions = ref(false);\n\nconst selectedValue = computed({\n  get: () => query.value || \"\",\n  set: (val) => {\n    query.value = \"\";\n    if (val) {\n      showOptions.value = false;\n    }\n    val?.value && addValue(val.value);\n  },\n});\n\nwatchDebounced(\n  query,\n  (val) => {\n    val = val || \"\";\n    if (text.value === val) return;\n    text.value = val;\n    reload(val);\n  },\n  { debounce: 300, immediate: true }\n);\n\nconst filterOptions = createResource({\n  url: \"frappe.desk.search.search_link\",\n  method: \"POST\",\n  cache: [text.value, \"Contact\"],\n  params: {\n    txt: text.value,\n    doctype: \"Contact\",\n  },\n  transform: (data) => {\n    let allData = data\n      .filter((c) => {\n        return c.description.split(\", \")[1];\n      })\n      .map((option) => {\n        let email = option.description.split(\", \")[1];\n        return {\n          label: option.label || email,\n          value: email,\n        };\n      });\n    return allData;\n  },\n});\n\nconst options = computed(() => {\n  let searchedContacts = filterOptions.data || [];\n  if (!searchedContacts.length && query.value) {\n    searchedContacts.push({\n      label: query.value,\n      value: query.value,\n    });\n  }\n  return searchedContacts;\n});\n\nfunction reload(val) {\n  filterOptions.update({\n    params: {\n      txt: val,\n      doctype: \"Contact\",\n    },\n  });\n  filterOptions.reload();\n}\n\nconst addValue = (value) => {\n  error.value = null;\n  if (value) {\n    const splitValues = value.split(\",\");\n    splitValues.forEach((value) => {\n      value = value.trim();\n      if (value) {\n        // check if value is not already in the values array\n        if (!values.value?.includes(value)) {\n          // check if value is valid\n          if (value && props.validate && !props.validate(value)) {\n            error.value = props.errorMessage(value);\n            return;\n          }\n          // add value to values array\n          if (!values.value) {\n            values.value = [value];\n          } else {\n            values.value.push(value);\n          }\n          value = value.replace(value, \"\");\n        }\n      }\n    });\n    !error.value && (value = \"\");\n  }\n};\n\nconst removeValue = (value) => {\n  values.value = values.value.filter((v) => v !== value);\n};\n\nconst removeLastValue = () => {\n  if (query.value) return;\n\n  let emailRef = emails.value[emails.value.length - 1]?.$el;\n  if (document.activeElement === emailRef) {\n    values.value.pop();\n    nextTick(() => {\n      if (values.value.length) {\n        emailRef = emails.value[emails.value.length - 1].$el;\n        emailRef?.focus();\n      } else {\n        setFocus();\n      }\n    });\n  } else {\n    emailRef?.focus();\n  }\n};\n\nfunction setFocus() {\n  search.value.$el.focus();\n}\n\ndefineExpose({ setFocus });\n</script>\n","<template>\n  <div class=\"flex justify-between gap-3 border-t px-10 py-2.5\">\n    <div class=\"flex gap-1.5\">\n      <Button\n        ref=\"sendEmailRef\"\n        variant=\"ghost\"\n        label=\"Reply\"\n        :class=\"[showEmailBox ? '!bg-gray-300 hover:!bg-gray-200' : '']\"\n        @click=\"toggleEmailBox()\"\n      >\n        <template #prefix>\n          <EmailIcon class=\"h-4\" />\n        </template>\n      </Button>\n      <Button\n        variant=\"ghost\"\n        label=\"Comment\"\n        :class=\"[showCommentBox ? '!bg-gray-300 hover:!bg-gray-200' : '']\"\n        @click=\"toggleCommentBox()\"\n      >\n        <template #prefix>\n          <CommentIcon class=\"h-4\" />\n        </template>\n      </Button>\n    </div>\n  </div>\n  <div v-show=\"showCommentBox\">\n    <CommentTextEditor\n      v-model=\"doc\"\n      v-model:attachments=\"attachments\"\n      :editable=\"showCommentBox\"\n      :doctype=\"doctype\"\n      placeholder=\"Add a comment...\"\n      @submit=\"\n        () => {\n          showCommentBox = false;\n          emit('update');\n        }\n      \"\n      @discard=\"\n        () => {\n          showCommentBox = false;\n        }\n      \"\n    />\n  </div>\n  <div\n    v-show=\"showEmailBox\"\n    class=\"flex gap-1.5\"\n    @keydown.ctrl.enter.capture.stop=\"submitEmail\"\n    @keydown.meta.enter.capture.stop=\"submitEmail\"\n  >\n    <EmailEditor\n      ref=\"emailEditorRef\"\n      v-model=\"doc\"\n      v-model:content=\"content\"\n      v-model:attachments=\"attachments\"\n      :to-emails=\"toEmails\"\n      :cc-emails=\"ccEmails\"\n      :bcc-emails=\"bccEmails\"\n      @submit=\"\n        () => {\n          showEmailBox = false;\n          emit('update');\n        }\n      \"\n      @discard=\"\n        () => {\n          showEmailBox = false;\n        }\n      \"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\n\nimport { EmailEditor, CommentTextEditor } from \"@/components\";\nimport { EmailIcon, CommentIcon } from \"@/components/icons/\";\n\nconst content = defineModel(\"content\");\nconst showEmailBox = ref(false);\nconst showCommentBox = ref(false);\nconst doc = defineModel();\nconst attachments = ref([]);\nconst emit = defineEmits([\"update\"]);\nconst emailEditorRef = ref(null);\n\nfunction toggleEmailBox() {\n  if (showCommentBox.value) {\n    showCommentBox.value = false;\n  }\n  showEmailBox.value = !showEmailBox.value;\n}\n\nfunction toggleCommentBox() {\n  if (showEmailBox.value) {\n    showEmailBox.value = false;\n  }\n  showCommentBox.value = !showCommentBox.value;\n}\n\nfunction replyToEmail(data: object) {\n  showEmailBox.value = true;\n  emailEditorRef.value.addToReply(\n    data.content,\n    data.to?.split(\",\"),\n    data.cc?.split(\",\"),\n    data.bcc?.split(\",\")\n  );\n}\n\nconst props = defineProps({\n  doctype: {\n    type: String,\n    default: \"HD Ticket\",\n  },\n  toEmails: {\n    type: Array,\n    default: () => [],\n  },\n  ccEmails: {\n    type: Array,\n    default: () => [],\n  },\n  bccEmails: {\n    type: Array,\n    default: () => [],\n  },\n});\n\ndefineExpose({\n  replyToEmail,\n  toggleEmailBox,\n});\n</script>\n","<template>\n  <div\n    class=\"grow cursor-pointer rounded-md border-transparent bg-gray-50 text-base leading-6 transition-all duration-300 ease-in-out\"\n  >\n    <div class=\"mb-1 flex items-center justify-between gap-2\">\n      <div class=\"flex items-center gap-2\">\n        <UserAvatar :name=\"sender.name\" size=\"md\" />\n        <span>{{ sender.full_name }}</span>\n        <span>&middot;</span>\n        <Tooltip :text=\"dateFormat(creation, dateTooltipFormat)\">\n          <div class=\"text-sm text-gray-600\">\n            {{ timeAgo(creation) }}\n          </div>\n        </Tooltip>\n      </div>\n      <div class=\"flex gap-0.5\">\n        <Button\n          variant=\"ghost\"\n          class=\"text-gray-700\"\n          @click=\"\n            emit('reply', {\n              content: content,\n              to: sender.name,\n            })\n          \"\n        >\n          <ReplyIcon class=\"h-4 w-4\" />\n        </Button>\n        <Button\n          variant=\"ghost\"\n          class=\"text-gray-700\"\n          @click=\"\n            emit('reply', {\n              content: content,\n              to: to ?? sender.name,\n              cc: cc,\n              bcc: bcc,\n            })\n          \"\n        >\n          <ReplyAllIcon class=\"h-4 w-4\" />\n        </Button>\n      </div>\n    </div>\n    <div class=\"text-sm leading-5 text-gray-600\">\n      {{ subject }}\n    </div>\n    <div class=\"mb-3 text-sm leading-5 text-gray-600\">\n      <span v-if=\"to\" class=\"text-2xs mr-1 font-bold text-gray-500\">TO:</span>\n      <span v-if=\"to\"> {{ to }} </span>\n      <span v-if=\"cc\">, </span>\n      <span v-if=\"cc\" class=\"text-2xs mr-1 font-bold text-gray-500\"> CC: </span>\n      <span v-if=\"cc\">{{ cc }}</span>\n      <span v-if=\"bcc\">, </span>\n      <span v-if=\"bcc\" class=\"text-2xs mr-1 font-bold text-gray-500\">\n        BCC:\n      </span>\n      <span v-if=\"bcc\">{{ bcc }}</span>\n    </div>\n    <div\n      class=\"email-content prose-f max-h-[500px] overflow-y-auto\"\n      v-html=\"content\"\n    />\n    <div class=\"flex flex-wrap gap-2\">\n      <AttachmentItem\n        v-for=\"a in attachments\"\n        :key=\"a.file_url\"\n        :label=\"a.file_name\"\n        :url=\"a.file_url\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { UserAvatar, AttachmentItem } from \"@/components\";\nimport { dateFormat, timeAgo, dateTooltipFormat } from \"@/utils\";\nimport { ReplyIcon, ReplyAllIcon } from \"./icons/\";\n\nconst props = defineProps({\n  sender: {\n    type: Object,\n    required: true,\n  },\n  to: { type: String, default: null },\n  cc: { type: String, default: null },\n  bcc: { type: String, default: null },\n  creation: { type: String, required: true },\n  subject: {\n    type: String,\n    required: true,\n  },\n  attachments: {\n    type: Array,\n    default: () => [],\n  },\n  content: {\n    type: String,\n    required: true,\n  },\n});\n\nconst emit = defineEmits([\"reply\"]);\n</script>\n","<template>\n  <div class=\"flex-col text-base\">\n    <div class=\"mb-0.5 flex items-center justify-between\">\n      <div class=\"text-gray-600\">\n        <span class=\"font-medium text-gray-800\">\n          {{ commenter }}\n        </span>\n        <span> added a</span>\n        <span class=\"max-w-xs truncate font-medium text-gray-800\">\n          comment\n        </span>\n        <span class=\"px-1\">&middot;</span>\n        <Tooltip :text=\"dateFormat(creation, dateTooltipFormat)\">\n          <span class=\"pl-0.5 text-sm\">\n            {{ timeAgo(creation) }}\n          </span>\n        </Tooltip>\n      </div>\n      <div v-if=\"authStore.userId === commentedBy\" class=\"px-4\">\n        <Dropdown\n          :options=\"[{ label: 'Delete', onClick: () => (showDialog = true) }]\"\n        >\n          <Button\n            icon=\"more-horizontal\"\n            class=\"text-gray-600\"\n            variant=\"ghost\"\n          />\n        </Dropdown>\n      </div>\n    </div>\n    <div\n      class=\"prose-f grow cursor-pointer rounded bg-gray-50 px-4 py-3 text-base leading-6 transition-all duration-300 ease-in-out\"\n      v-html=\"content\"\n    />\n  </div>\n  <Dialog\n    v-model=\"showDialog\"\n    :options=\"{\n      title: 'Delete Comment',\n      message: 'Are you sure you want to confirm this action?',\n      actions: [\n        { label: 'Cancel', onClick: () => (showDialog = false) },\n        {\n          label: 'Delete',\n          onClick: () => deleteComment.submit(),\n          variant: 'solid',\n        },\n      ],\n    }\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { Dropdown, createResource, Dialog } from \"frappe-ui\";\nimport { dateFormat, timeAgo, dateTooltipFormat, createToast } from \"@/utils\";\nimport { useAuthStore } from \"@/stores/auth\";\n\nconst authStore = useAuthStore();\nconst props = defineProps({\n  name: {\n    type: String,\n    required: true,\n  },\n  creation: {\n    type: String,\n    required: true,\n  },\n  content: {\n    type: String,\n    required: true,\n  },\n  commenter: {\n    type: String,\n    required: true,\n  },\n  commentedBy: {\n    type: String,\n    required: true,\n  },\n});\n\nconst emit = defineEmits([\"update\"]);\nconst showDialog = ref(false);\n\nconst deleteComment = createResource({\n  url: \"frappe.client.delete\",\n  makeParams: () => ({\n    doctype: \"HD Ticket Comment\",\n    name: props.name,\n  }),\n  onSuccess() {\n    emit(\"update\");\n    createToast({\n      title: \"Comment deleted\",\n      icon: \"check\",\n      iconClasses: \"text-green-500\",\n    });\n  },\n});\n</script>\n","<template>\n  <div class=\"mt-1.5 flex justify-between text-base\">\n    <div class=\"text-gray-600\">\n      <span class=\"font-medium text-gray-800\">\n        {{ user }}\n      </span>\n      <span> {{ content }}</span>\n    </div>\n    <Tooltip :text=\"dateFormat(creation, dateTooltipFormat)\">\n      <div class=\"text-gray-600\">\n        {{ timeAgo(creation) }}\n      </div>\n    </Tooltip>\n  </div>\n  <div v-if=\"show_others\">\n    <div\n      v-for=\"relatedActivity in relatedActivities\"\n      :key=\"relatedActivity.creation\"\n      class=\"mt-2 flex justify-between text-base\"\n    >\n      <div class=\"text-gray-600\">\n        <span class=\"font-medium text-gray-800\">\n          {{ relatedActivity.user }}\n        </span>\n        <span> {{ relatedActivity.content }}</span>\n      </div>\n      <Tooltip :text=\"dateFormat(relatedActivity.creation, dateTooltipFormat)\">\n        <div class=\"text-gray-600\">\n          {{ timeAgo(relatedActivity.creation) }}\n        </div>\n      </Tooltip>\n    </div>\n  </div>\n  <Button\n    v-if=\"relatedActivities.length\"\n    :label=\"\n      show_others ? 'Hide' : `${relatedActivities.length} other activities`\n    \"\n    variant=\"outline\"\n    class=\"mt-2\"\n    @click=\"show_others = !show_others\"\n  >\n    <template #suffix>\n      <FeatherIcon\n        :name=\"show_others ? 'chevron-up' : 'chevron-down'\"\n        class=\"h-4 text-gray-600\"\n      />\n    </template>\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { dateFormat, timeAgo, dateTooltipFormat } from \"@/utils\";\n\nconst props = defineProps({\n  user: {\n    type: String,\n    required: true,\n  },\n  content: {\n    type: String,\n    required: true,\n  },\n  creation: {\n    type: String,\n    required: true,\n  },\n  relatedActivities: {\n    type: Array,\n    default: () => [],\n  },\n});\n\nlet show_others = ref(false);\n</script>\n","<template>\n  <Dialog\n    v-model=\"show\"\n    :options=\"{\n      title: 'Assign To',\n      size: 'xl',\n    }\"\n  >\n    <template #body-content>\n      <SearchComplete\n        class=\"form-control\"\n        value=\"\"\n        doctype=\"HD Agent\"\n        :reset-input=\"true\"\n        @change=\"\n          (option) => {\n            addAssignee(option.value);\n          }\n        \"\n      >\n        <template #item-prefix=\"{ option }\">\n          <UserAvatar class=\"mr-2\" :name=\"option.value\" size=\"sm\" />\n        </template>\n        <template #item-label=\"{ option }\">\n          <Tooltip :text=\"option.value\">\n            {{ getUser(option.value).full_name }}\n          </Tooltip>\n        </template>\n      </SearchComplete>\n      <div class=\"mt-3 flex flex-wrap items-center gap-2\">\n        <Tooltip\n          v-for=\"currentAssignee in assignees\"\n          :key=\"currentAssignee.name\"\n          :text=\"currentAssignee.name\"\n        >\n          <Button\n            :label=\"getUser(currentAssignee.name).full_name\"\n            theme=\"gray\"\n            variant=\"outline\"\n          >\n            <template #prefix>\n              <UserAvatar :name=\"currentAssignee.name\" size=\"sm\" />\n            </template>\n            <template #suffix>\n              <FeatherIcon\n                class=\"h-3.5\"\n                name=\"x\"\n                @click.stop=\"removeCurrentAssignee(currentAssignee.name)\"\n              />\n            </template>\n          </Button>\n        </Tooltip>\n      </div>\n      <ErrorMessage v-if=\"error\" class=\"mt-2\" :message=\"error\" />\n    </template>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { createResource } from \"frappe-ui\";\nimport { UserAvatar, SearchComplete } from \"@/components\";\nimport { useUserStore } from \"@/stores/user\";\n\nconst props = defineProps({\n  assignees: {\n    type: Array,\n    required: true,\n  },\n  doctype: {\n    type: String,\n    required: true,\n  },\n  docname: {\n    type: String,\n    required: true,\n  },\n});\n\nconst show = defineModel();\n\nconst emit = defineEmits([\"update\"]);\n\nconst { getUser } = useUserStore();\n\nconst error = ref(\"\");\n\nconst addAssignee = (value) => {\n  error.value = \"\";\n  createResource({\n    url: \"frappe.desk.form.assign_to.add\",\n    auto: true,\n    params: {\n      doctype: props.doctype,\n      name: props.docname,\n      assign_to: [value],\n    },\n    onSuccess: () => {\n      emit(\"update\");\n    },\n  });\n  emit(\"update\");\n};\n\nconst removeCurrentAssignee = (value) => {\n  createResource({\n    url: \"frappe.desk.form.assign_to.remove\",\n    auto: true,\n    params: {\n      doctype: props.doctype,\n      name: props.docname,\n      assign_to: value,\n    },\n    onSuccess: () => {\n      emit(\"update\");\n    },\n  });\n};\n</script>\n","<template>\n  <Dialog v-model=\"show\" :options=\"{ title: 'Canned Responses', size: '4xl' }\">\n    <template #body-content>\n      <TextInput\n        ref=\"searchInput\"\n        v-model=\"search\"\n        type=\"text\"\n        :placeholder=\"'Site Down'\"\n      >\n        <template #prefix>\n          <FeatherIcon name=\"search\" class=\"h-4 w-4 text-gray-500\" />\n        </template>\n      </TextInput>\n      <div\n        v-if=\"filteredTemplates.length\"\n        class=\"mt-2 grid max-h-[560px] grid-cols-3 gap-2 overflow-y-auto\"\n      >\n        <div\n          v-for=\"template in filteredTemplates\"\n          :key=\"template.name\"\n          class=\"flex h-56 cursor-pointer flex-col gap-2 rounded-lg border p-3 hover:bg-gray-100\"\n          @click=\"emit('apply', template)\"\n        >\n          <div class=\"border-b pb-2 text-base font-semibold\">\n            {{ template.title }}\n          </div>\n          <TextEditor\n            v-if=\"template.message\"\n            :content=\"template.message\"\n            :editable=\"false\"\n            editor-class=\"!prose-sm max-w-none !text-sm text-gray-600 focus:outline-none\"\n            class=\"flex-1 overflow-hidden\"\n          />\n        </div>\n      </div>\n      <div v-else class=\"mt-2\">\n        <div class=\"flex h-56 flex-col items-center justify-center\">\n          <div class=\"text-lg text-gray-500\">\n            {{ \"No templates found\" }}\n          </div>\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script setup>\nimport { TextEditor, createListResource } from \"frappe-ui\";\nimport { ref, computed, nextTick, watch, onMounted } from \"vue\";\n\nconst props = defineProps({\n  doctype: {\n    type: String,\n    default: \"\",\n  },\n});\n\nconst show = defineModel();\nconst searchInput = ref(\"\");\n\nconst emit = defineEmits([\"apply\"]);\n\nconst search = ref(\"\");\n\nconst templates = createListResource({\n  type: \"list\",\n  doctype: \"HD Canned Response\",\n  cache: [\"cannedResponses\", props.doctype],\n  fields: [\"title\", \"message\", \"modified\"],\n  orderBy: \"modified desc\",\n  pageLength: 99999,\n});\n\nonMounted(() => {\n  if (templates.data == null) {\n    templates.fetch();\n  }\n});\n\nconst filteredTemplates = computed(() => {\n  return (\n    templates.data?.filter((template) => {\n      return template.title.toLowerCase().includes(search.value.toLowerCase());\n    }) ?? []\n  );\n});\n\nwatch(show, (value) => value && nextTick(() => searchInput.value?.el?.focus()));\n</script>\n","<template>\n  <div class=\"h-screen overflow-y-auto py-3.5\">\n    <div\n      v-for=\"(activity, i) in activities\"\n      :key=\"activity.key\"\n      class=\"activity\"\n    >\n      <div class=\"flex gap-4 px-6\">\n        <div\n          class=\"relative flex justify-center after:absolute after:left-[50%] after:top-0 after:-z-10 after:border-l after:border-gray-200\"\n          :class=\"[i != activities.length - 1 ? 'after:h-full' : 'after:h-4']\"\n        >\n          <div\n            class=\"z-10 flex h-7 w-7 items-center justify-center rounded-full bg-gray-100\"\n            :class=\"[\n              activity.type === 'history' ? 'bg-white' : 'bg-gray-100',\n              activity.type === 'comment' ? 'mt-0.5' : '',\n              activity.type === 'email' ? 'mt-2' : '',\n            ]\"\n          >\n            <component\n              :is=\"getActivityIcon(activity.type)\"\n              :class=\"[\n                activity.type == 'history' ? 'text-gray-600' : 'text-gray-800',\n              ]\"\n            />\n          </div>\n        </div>\n        <div class=\"mb-4 w-full max-w-[742px]\">\n          <EmailBox\n            v-if=\"activity.type === 'email'\"\n            v-bind=\"activity\"\n            @reply=\"(e) => emit('email:reply', e)\"\n          />\n          <CommentBox\n            v-else-if=\"activity.type === 'comment'\"\n            v-bind=\"activity\"\n            @update=\"() => emit('update')\"\n          />\n          <HistoryBox v-else v-bind=\"activity\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useElementVisibility } from \"@vueuse/core\";\nimport { DotIcon, EmailAtIcon, CommentIcon } from \"@/components/icons\";\nimport { EmailBox, CommentBox, HistoryBox } from \"@/components\";\n\ndefineProps({\n  activities: {\n    type: Array,\n    required: true,\n  },\n});\n\nconst emit = defineEmits([\"email:reply\", \"update\"]);\n\nfunction getActivityIcon(type) {\n  if (type === \"email\") return EmailAtIcon;\n  else if (type === \"comment\") return CommentIcon;\n  else return DotIcon;\n}\n\nfunction scrollToLatestActivity() {\n  setTimeout(() => {\n    let el;\n    let e = document.getElementsByClassName(\"activity\");\n    el = e[e.length - 1];\n    if (el && !useElementVisibility(el).value) {\n      el.scrollIntoView({ behavior: \"smooth\" });\n      el.focus();\n    }\n  }, 500);\n}\n\ndefineExpose({\n  scrollToLatestActivity,\n});\n</script>\n","<template>\n  <div class=\"flex flex-col gap-3 border-b px-6 py-3\">\n    <div\n      v-for=\"s in sections\"\n      :key=\"s.label\"\n      class=\"flex items-center text-base leading-5\"\n    >\n      <Tooltip :text=\"s.label\">\n        <div class=\"w-[126px] text-sm text-gray-600\">{{ s.label }}</div>\n      </Tooltip>\n      <div class=\"flex items-center justify-between\">\n        <div v-if=\"s.value\">{{ s.value }}</div>\n        <Tooltip :text=\"s.tooltipValue\">\n          <Badge\n            v-if=\"s.badgeText\"\n            class=\"-ml-1\"\n            :label=\"s.badgeText\"\n            variant=\"subtle\"\n            :theme=\"s.badgeColor\"\n          />\n        </Tooltip>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Badge, Tooltip } from \"frappe-ui\";\nimport { dayjs } from \"@/dayjs\";\nimport { formatTime } from \"@/utils\";\nimport { dateFormat, dateTooltipFormat } from \"@/utils\";\nimport { computed } from \"vue\";\n\nconst props = defineProps({\n  agreementStatus: {\n    type: String,\n    required: true,\n  },\n  ticketCreatedOn: {\n    type: String,\n    required: true,\n  },\n  firstRespondedOn: {\n    type: String,\n    required: true,\n  },\n  responseBy: {\n    type: String,\n    required: true,\n  },\n  resolutionDate: {\n    type: String,\n    required: true,\n  },\n  resolutionBy: {\n    type: String,\n    required: true,\n  },\n  source: {\n    type: String,\n    required: true,\n  },\n});\n\nconst firstResponseBadge = computed(() => {\n  let firstResponse = null;\n  if (!props.firstRespondedOn && dayjs().isBefore(dayjs(props.responseBy))) {\n    firstResponse = {\n      label: `Due in ${formatTime(dayjs(props.responseBy).diff(dayjs(), \"s\"))}`,\n      color: \"orange\",\n    };\n  } else if (dayjs(props.firstRespondedOn).isBefore(dayjs(props.responseBy))) {\n    firstResponse = {\n      label: `Fulfilled in ${formatTime(\n        dayjs(props.firstRespondedOn).diff(dayjs(props.ticketCreatedOn), \"s\")\n      )}`,\n      color: \"green\",\n    };\n  } else {\n    firstResponse = {\n      label: \"Failed\",\n      color: \"red\",\n    };\n  }\n  return firstResponse;\n});\n\nconst resolutionBadge = computed(() => {\n  let resolution = null;\n  if (!props.resolutionDate && dayjs().isBefore(props.resolutionBy)) {\n    resolution = {\n      label: `Due in ${formatTime(\n        dayjs(props.resolutionBy).diff(dayjs(), \"s\")\n      )}`,\n      color: \"orange\",\n    };\n  } else if (dayjs(props.resolutionDate).isBefore(props.resolutionBy)) {\n    resolution = {\n      label: `Fulfilled in ${formatTime(\n        dayjs(props.resolutionDate).diff(dayjs(props.ticketCreatedOn), \"s\")\n      )}`,\n      color: \"green\",\n    };\n  } else {\n    resolution = {\n      label: \"Failed\",\n      color: \"red\",\n    };\n  }\n  return resolution;\n});\n\nconst sections = computed(() => [\n  {\n    label: \"First Response\",\n    tooltipValue: dateFormat(\n      props.firstRespondedOn || props.responseBy,\n      dateTooltipFormat\n    ),\n    badgeText: firstResponseBadge.value.label,\n    badgeColor: firstResponseBadge.value.color,\n  },\n  {\n    label: \"Resolution\",\n    tooltipValue: dateFormat(\n      props.resolutionDate || props.resolutionBy,\n      dateTooltipFormat\n    ),\n    badgeText: resolutionBadge.value.label,\n    badgeColor: resolutionBadge.value.color,\n  },\n  {\n    label: \"Source\",\n    value: props.source,\n  },\n]);\n</script>\n","<template>\n  <div class=\"flex items-center justify-start gap-5 border-b p-5\">\n    <Avatar\n      size=\"3xl\"\n      class=\"h-[88px] w-[88px]\"\n      :image=\"contact.image\"\n      :label=\"contact.name\"\n    />\n    <div class=\"flex flex-col gap-2.5\">\n      <Tooltip :text=\"contact.name\">\n        <div class=\"w-[242px] truncate text-2xl font-medium\">\n          {{ contact.name }}\n        </div>\n      </Tooltip>\n      <div class=\"flex gap-1.5\">\n        <Tooltip :text=\"contact.email_id\">\n          <Button class=\"h-7 w-7\">\n            <EmailIcon class=\"h-4 w-4\" @click=\"openEmailBox()\" />\n          </Button>\n        </Tooltip>\n        <!-- <RouterLink\n          class=\"group cursor-pointer space-x-1 hover:text-gray-900\"\n          :to=\"{\n            name: 'TicketsAgent',\n          }\"\n          target=\"_blank\"\n        >\n          <Button\n            class=\"h-7 w-7\"\n            @click=\"\n              () => {\n                console.log('Show Contact Tickets');\n              }\n            \"\n          >\n            <Tooltip text=\"Show Contact Tickets\">\n              <TicketIcon class=\"h-4 w-4\" />\n            </Tooltip>\n          </Button>\n        </RouterLink> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Tooltip, Avatar } from \"frappe-ui\";\nimport { EmailIcon, TicketIcon } from \"@/components/icons/\";\n\nconst props = defineProps({\n  contact: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst emit = defineEmits([\"email:open\"]);\n\nfunction openEmailBox() {\n  emit(\"email:open\", props.contact.email_id);\n}\n</script>\n","import { computed, ComputedRef } from \"vue\";\nimport { defineStore } from \"pinia\";\nimport { createListResource } from \"frappe-ui\";\n\ntype Team = {\n  name: string;\n};\n\nexport const useTeamStore = defineStore(\"team\", () => {\n  const d__ = createListResource({\n    doctype: \"HD Team\",\n    auto: true,\n    pageLength: 99999,\n  });\n\n  const options: ComputedRef<Array<Team>> = computed(\n    () => d__.list?.data || []\n  );\n\n  const dropdown = computed(() =>\n    options.value.map((i) => ({\n      label: i.name,\n      value: i.name,\n    }))\n  );\n\n  return {\n    dropdown,\n    options,\n  };\n});\n","import { computed, ComputedRef } from \"vue\";\nimport { defineStore } from \"pinia\";\nimport { createListResource } from \"frappe-ui\";\n\ntype TicketPriority = {\n  name: string;\n  description: string;\n};\n\nexport const useTicketPriorityStore = defineStore(\"ticketPriority\", () => {\n  const d__ = createListResource({\n    doctype: \"HD Ticket Priority\",\n    orderBy: \"integer_value desc\",\n    auto: true,\n    pageLength: 99999,\n  });\n\n  const options: ComputedRef<Array<TicketPriority>> = computed(\n    () => d__.list?.data || []\n  );\n  const dropdown = computed(() =>\n    options.value.map((o) => ({\n      label: o.name,\n      value: o.name,\n    }))\n  );\n  const names = computed(() => options.value.map((o) => o.name));\n  const colorMap = {\n    Urgent: \"red\",\n    High: \"orange\",\n    Medium: \"blue\",\n    Low: \"green\",\n  };\n\n  return {\n    colorMap,\n    dropdown,\n    names,\n    options,\n  };\n});\n","import { computed, ComputedRef } from \"vue\";\nimport { defineStore } from \"pinia\";\nimport { createListResource } from \"frappe-ui\";\n\ntype TicketType = {\n  name: string;\n  description: string;\n  priority: string;\n};\n\nexport const useTicketTypeStore = defineStore(\"ticketType\", () => {\n  const d__ = createListResource({\n    doctype: \"HD Ticket Type\",\n    fields: [\"*\"],\n    auto: true,\n    pageLength: 99999,\n  });\n\n  const options: ComputedRef<Array<TicketType>> = computed(\n    () => d__.list?.data || []\n  );\n  const dropdown = computed(() =>\n    options.value.map((o) => ({\n      label: o.name,\n      value: o.name,\n    }))\n  );\n\n  return {\n    dropdown,\n    options,\n  };\n});\n","<template>\n  <div class=\"flex items-center gap-2 px-6 pb-1 leading-5 first:mt-3\">\n    <Tooltip :text=\"field.label\">\n      <div class=\"w-[106px] shrink-0 truncate text-sm text-gray-600\">\n        {{ field.label }}\n        <span v-if=\"field.required\" class=\"text-red-500\"> * </span>\n      </div>\n    </Tooltip>\n    <div\n      class=\"-m-0.5 min-h-[28px] flex-1 items-center overflow-hidden p-0.5 text-base\"\n    >\n      <component\n        :is=\"component\"\n        :key=\"transValue\"\n        class=\"form-control\"\n        :placeholder=\"`Add ${field.label}`\"\n        :value=\"transValue\"\n        @change=\"\n          emitUpdate(field.fieldname, $event.value || $event.target.value)\n        \"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, h } from \"vue\";\nimport { Autocomplete } from \"@/components\";\nimport { createResource, FormControl, Tooltip } from \"frappe-ui\";\nimport { Field, FieldValue } from \"@/types\";\nimport SearchComplete from \"./SearchComplete.vue\";\n\ninterface P {\n  field: Field;\n  value: FieldValue;\n}\n\ninterface R {\n  fieldname: Field[\"fieldname\"];\n  value: FieldValue;\n}\n\ninterface E {\n  (event: \"change\", value: R);\n}\n\nconst props = defineProps<P>();\nconst emit = defineEmits<E>();\n\nconst component = computed(() => {\n  if (props.field.url_method) {\n    return h(Autocomplete, {\n      options: apiOptions.data,\n    });\n  } else if (props.field.fieldtype === \"Link\" && props.field.options) {\n    return h(SearchComplete, {\n      doctype: props.field.options,\n    });\n  } else if (props.field.fieldtype === \"Select\") {\n    return h(Autocomplete, {\n      options: props.field.options\n        .split(\"\\n\")\n        .map((o) => ({ label: o, value: o })),\n    });\n  } else if (props.field.fieldtype === \"Check\") {\n    return h(Autocomplete, {\n      options: [\n        {\n          label: \"Yes\",\n          value: 1,\n        },\n        {\n          label: \"No\",\n          value: 0,\n        },\n      ],\n    });\n  } else {\n    return h(FormControl);\n  }\n});\n\nconst apiOptions = createResource({\n  url: props.field.url_method,\n  auto: !!props.field.url_method,\n  transform: (data) =>\n    data.map((o) => ({\n      label: o,\n      value: o,\n    })),\n});\n\nconst transValue = computed(() => {\n  if (props.field.fieldtype === \"Check\") {\n    return props.value ? \"Yes\" : \"No\";\n  }\n  return props.value;\n});\n\nfunction emitUpdate(fieldname: Field[\"fieldname\"], value: FieldValue) {\n  emit(\"change\", { fieldname, value });\n}\n</script>\n<style scoped>\n:deep(.form-control input:not([type=\"checkbox\"])),\n:deep(.form-control select),\n:deep(.form-control textarea),\n:deep(.form-control button) {\n  border-color: transparent;\n  background: white;\n}\n\n:deep(.form-control button) {\n  gap: 0;\n}\n:deep(.form-control [type=\"checkbox\"]) {\n  margin-left: 9px;\n  cursor: pointer;\n}\n\n:deep(.form-control button > div) {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n:deep(.form-control button svg) {\n  color: white;\n  width: 0;\n}\n</style>\n","<template>\n  <div class=\"flex flex-1 flex-col overflow-hidden overflow-y-auto border-b\">\n    <div\n      v-for=\"o in options\"\n      :key=\"o.field\"\n      class=\"flex items-center gap-2 px-6 pb-1 leading-5 first:mt-3\"\n    >\n      <Tooltip :text=\"o.label\">\n        <div class=\"w-[106px] shrink-0 truncate text-sm text-gray-600\">\n          {{ o.label }}\n        </div>\n      </Tooltip>\n      <div\n        class=\"-m-0.5 min-h-[28px] flex-1 items-center overflow-hidden p-0.5 text-base\"\n      >\n        <FormControl\n          v-if=\"o.type === 'textarea'\"\n          class=\"form-control\"\n          :type=\"o.type\"\n          :value=\"ticket[o.field]\"\n          variant=\"subtle\"\n          rows=\"2\"\n          @change=\"update(o.field, $event.target.value, $event)\"\n        />\n        <FormControl\n          v-else-if=\"o.type === 'select'\"\n          class=\"form-control\"\n          :type=\"o.type\"\n          :value=\"ticket[o.field]\"\n          :options=\"customers?.data\"\n          @change=\"update(o.field, $event.target.value)\"\n        />\n        <Autocomplete\n          v-else\n          class=\"form-control\"\n          :options=\"o.store.dropdown\"\n          :placeholder=\"`Add ${o.label}`\"\n          :value=\"ticket[o.field]\"\n          @change=\"update(o.field, $event.value)\"\n        />\n      </div>\n    </div>\n    <UniInput2\n      v-for=\"field in ticket.template.fields\"\n      :key=\"field.fieldname\"\n      :field=\"field\"\n      :value=\"ticket[field.fieldname]\"\n      @change=\"(data) => update(data.fieldname, data.value)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport { createResource, FormControl, Tooltip } from \"frappe-ui\";\nimport { Autocomplete } from \"@/components\";\nimport { useTeamStore } from \"@/stores/team\";\nimport { useTicketPriorityStore } from \"@/stores/ticketPriority\";\nimport { useTicketTypeStore } from \"@/stores/ticketType\";\nimport UniInput2 from \"@/components/UniInput2.vue\";\nimport { createToast } from \"@/utils\";\nimport { Field, FieldValue } from \"@/types\";\n\nconst emit = defineEmits([\"update\"]);\n\nconst props = defineProps({\n  ticket: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst customers = createResource({\n  url: \"helpdesk.utils.get_customer\",\n  params: {\n    contact: props.ticket.raised_by,\n  },\n  auto: true,\n  transform: (data: Array<object>) => {\n    return data.map((d: object) => ({\n      label: d,\n      value: d,\n    }));\n  },\n});\n\nconst options = computed(() => {\n  return [\n    {\n      field: \"ticket_type\",\n      label: \"Ticket type\",\n      store: useTicketTypeStore(),\n    },\n    {\n      field: \"priority\",\n      label: \"Priority\",\n      store: useTicketPriorityStore(),\n    },\n    {\n      field: \"agent_group\",\n      label: \"Team\",\n      store: useTeamStore(),\n    },\n    {\n      field: \"customer\",\n      label: \"Customer\",\n      type: \"select\",\n      placeholder: \"Select Customer\",\n    },\n    {\n      field: \"subject\",\n      label: \"Subject\",\n      type: \"textarea\",\n      placeholder: \"Problem in XYZ\",\n    },\n  ];\n});\n\nfunction update(field: Field[\"fieldname\"], value: FieldValue, event = null) {\n  if (field === \"subject\" && value === \"\") {\n    createToast({\n      title: \"Subject is required\",\n      icon: \"x\",\n      iconClasses: \"text-red-600\",\n    });\n    event.target.value = props.ticket.subject;\n    return;\n  }\n  emit(\"update\", { field, value });\n}\n</script>\n<style scoped>\n:deep(.form-control input:not([type=\"checkbox\"])),\n:deep(.form-control select),\n:deep(.form-control textarea),\n:deep(.form-control button) {\n  border-color: transparent;\n  background: white;\n}\n\n:deep(.form-control button) {\n  gap: 0;\n}\n:deep(.form-control [type=\"checkbox\"]) {\n  margin-left: 9px;\n  cursor: pointer;\n}\n\n:deep(.form-control button > div) {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n:deep(.form-control button svg) {\n  color: white;\n  width: 0;\n}\n</style>\n","<template>\n  <div class=\"flex w-[382px] flex-col justify-between border-l\">\n    <div class=\"h-10.5 flex items-center justify-between border-b px-5 py-2.5\">\n      <span class=\"cursor-copy text-lg font-semibold\" @click=\"copyToClipboard()\"\n        >#{{ ticket.name }}</span\n      >\n    </div>\n    <TicketAgentContact\n      :contact=\"ticket.contact\"\n      @email:open=\"(e) => emit('email:open', e)\"\n    />\n    <div\n      v-if=\"ticket.feedback_rating\"\n      class=\"border-b px-6 py-3 text-base text-gray-600\"\n    >\n      <div class=\"flex\">\n        <div class=\"min-w-[106px] pb-1.5\">Rating</div>\n        <div class=\"px-1.5\">\n          <StarRating :rating=\"ticket.feedback_rating\" />\n        </div>\n      </div>\n      <div class=\"flex\">\n        <div class=\"w-[106px] pb-1.5\">Feedback</div>\n        <div class=\"px-1.5 text-gray-800\">\n          {{ ticket.feedback_text }}\n        </div>\n      </div>\n      <div v-if=\"ticket.feedback_extra\" class=\"flex\">\n        <div class=\"min-w-[106px] pb-1.5\">Comment</div>\n        <div class=\"px-1.5 text-gray-800\">\n          {{ ticket.feedback_extra }}\n        </div>\n      </div>\n    </div>\n    <TicketAgentDetails\n      :agreement-status=\"ticket.agreement_status\"\n      :first-responded-on=\"ticket.first_responded_on\"\n      :response-by=\"ticket.response_by\"\n      :resolution-date=\"ticket.resolution_date\"\n      :resolution-by=\"ticket.resolution_by\"\n      :ticket-created-on=\"ticket.creation\"\n      :source=\"ticket.via_customer_portal ? 'Portal' : 'Mail'\"\n    />\n    <TicketAgentFields :ticket=\"ticket\" @update=\"update\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { StarRating } from \"@/components\";\nimport TicketAgentDetails from \"./TicketAgentDetails.vue\";\nimport TicketAgentContact from \"./TicketAgentContact.vue\";\nimport TicketAgentFields from \"./TicketAgentFields.vue\";\nimport { createToast } from \"@/utils\";\n\nconst props = defineProps({\n  ticket: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst emit = defineEmits([\"update\", \"email:open\"]);\n\nfunction update(val) {\n  emit(\"update\", val);\n}\n\nfunction copyToClipboard() {\n  navigator.clipboard.writeText(`${props.ticket.name}`);\n  createToast({\n    title: \"Copied to clipboard\",\n    text: props.ticket.name,\n    icon: \"check\",\n    iconClasses: \"text-green-600\",\n  });\n}\n</script>\n","<template>\n  <div v-if=\"normalActions.length\">\n    <Button\n      v-for=\"action in normalActions\"\n      :key=\"action.label\"\n      :label=\"action.label\"\n      @click=\"action.onClick()\"\n    >\n      <template v-if=\"action.icon\" #prefix>\n        <FeatherIcon :name=\"action.icon\" class=\"h-4 w-4\" />\n      </template>\n    </Button>\n  </div>\n  <Dropdown v-if=\"groupedActions.length\" :options=\"groupedActions\">\n    <Button icon=\"more-horizontal\" />\n  </Dropdown>\n  <div v-if=\"groupedWithLabelActions.length\">\n    <div v-for=\"g in groupedWithLabelActions\" :key=\"g.label\">\n      <Dropdown v-slot=\"{ open }\" :options=\"g.action\">\n        <Button :label=\"g.label\">\n          <template #suffix>\n            <FeatherIcon\n              :name=\"open ? 'chevron-up' : 'chevron-down'\"\n              class=\"h-4\"\n            />\n          </template>\n        </Button>\n      </Dropdown>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, h } from \"vue\";\nimport { Dropdown } from \"frappe-ui\";\n\nconst props = defineProps({\n  actions: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst normalActions = computed(() => {\n  return props.actions.filter((action) => !action.group);\n});\n\nconst groupedWithLabelActions = computed(() => {\n  let _actions = [];\n\n  props.actions\n    .filter((action) => action.buttonLabel && action.group)\n    .forEach((action) => {\n      let groupIndex = _actions.findIndex(\n        (a) => a.label === action.buttonLabel\n      );\n      if (groupIndex > -1) {\n        _actions[groupIndex].action.push(action);\n      } else {\n        _actions.push({\n          label: action.buttonLabel,\n          action: [action],\n        });\n      }\n    });\n  return _actions;\n});\n\nconst groupedActions = computed(() => {\n  let _actions = [];\n  _actions = _actions.concat(\n    props.actions.filter((action) => action.group && !action.buttonLabel)\n  );\n  return _actions;\n});\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <LayoutHeader v-if=\"ticket.data\">\n      <template #left-header>\n        <Breadcrumbs :items=\"breadcrumbs\" />\n      </template>\n      <template #right-header>\n        <CustomActions\n          v-if=\"ticket.data._customActions\"\n          :actions=\"ticket.data._customActions\"\n        />\n        <div v-if=\"ticket.data.assignees?.length\">\n          <component :is=\"ticket.data.assignees.length == 1 ? 'Button' : 'div'\">\n            <MultipleAvatar\n              :avatars=\"ticket.data.assignees\"\n              @click=\"showAssignmentModal = true\"\n            />\n          </component>\n        </div>\n        <button\n          v-else\n          class=\"rounded bg-gray-100 px-2 py-1.5 text-base text-gray-800\"\n          @click=\"showAssignmentModal = true\"\n        >\n          Assign\n        </button>\n        <Dropdown :options=\"dropdownOptions\">\n          <template #default=\"{ open }\">\n            <Button :label=\"ticket.data.status\">\n              <template #prefix>\n                <IndicatorIcon\n                  :class=\"ticketStatusStore.textColorMap[ticket.data.status]\"\n                />\n              </template>\n              <template #suffix>\n                <FeatherIcon\n                  :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                  class=\"h-4\"\n                />\n              </template>\n            </Button>\n          </template>\n        </Dropdown>\n      </template>\n    </LayoutHeader>\n    <div v-if=\"ticket.data\" class=\"flex h-screen overflow-hidden\">\n      <div class=\"flex flex-1 flex-col\">\n        <div class=\"flex items-center justify-between border-b py-1 pr-2.5\">\n          <span class=\"pl-6 text-lg font-semibold\">Activity</span>\n          <Switch\n            v-model=\"showFullActivity\"\n            size=\"sm\"\n            label=\"Show all activity\"\n          />\n        </div>\n        <TicketAgentActivities\n          ref=\"ticketAgentActivitiesRef\"\n          :activities=\"activities\"\n          @update=\"\n            () => {\n              ticket.reload();\n            }\n          \"\n          @email:reply=\"\n            (e) => {\n              communicationAreaRef.replyToEmail(e);\n            }\n          \"\n        />\n        <CommunicationArea\n          ref=\"communicationAreaRef\"\n          v-model=\"ticket.data\"\n          :to-emails=\"[ticket.data.raised_by]\"\n          :cc-emails=\"[]\"\n          :bcc-emails=\"[]\"\n          @update=\"\n            () => {\n              ticket.reload();\n              ticketAgentActivitiesRef.scrollToLatestActivity();\n            }\n          \"\n        />\n      </div>\n      <TicketAgentSidebar\n        :ticket=\"ticket.data\"\n        @update=\"({ field, value }) => updateTicket(field, value)\"\n        @email:open=\"(e) => communicationAreaRef.toggleEmailBox()\"\n      />\n    </div>\n    <AssignmentModal\n      v-if=\"ticket.data\"\n      v-model=\"showAssignmentModal\"\n      :assignees=\"ticket.data.assignees\"\n      :docname=\"ticketId\"\n      doctype=\"HD Ticket\"\n      @update=\"\n        () => {\n          ticket.reload();\n        }\n      \"\n    />\n    <Dialog v-model=\"showSubjectDialog\">\n      <template #body-title>\n        <h3>Rename</h3>\n      </template>\n      <template #body-content>\n        <FormControl\n          v-model=\"subjectInput\"\n          :type=\"'text'\"\n          size=\"sm\"\n          variant=\"subtle\"\n          :disabled=\"false\"\n          label=\"New Subject\"\n        />\n      </template>\n      <template #actions>\n        <Button\n          variant=\"solid\"\n          :disabled=\"!subjectInput\"\n          :loading=\"isLoading\"\n          @click=\"\n            () => {\n              updateTicket('subject', subjectInput);\n              showSubjectDialog = false;\n            }\n          \"\n        >\n          Confirm\n        </Button>\n        <Button class=\"ml-2\" @click=\"showSubjectDialog = false\"> Close </Button>\n      </template>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, h, watch, onMounted, onUnmounted } from \"vue\";\nimport { useStorage } from \"@vueuse/core\";\nimport {\n  Breadcrumbs,\n  Dropdown,\n  Switch,\n  createResource,\n  Dialog,\n  FormControl,\n} from \"frappe-ui\";\n\nimport {\n  LayoutHeader,\n  MultipleAvatar,\n  AssignmentModal,\n  CommunicationArea,\n} from \"@/components\";\nimport { TicketAgentActivities, TicketAgentSidebar } from \"@/components/ticket\";\nimport { IndicatorIcon } from \"@/components/icons\";\n\nimport { useTicketStatusStore } from \"@/stores/ticketStatus\";\nimport { useUserStore } from \"@/stores/user\";\nimport { createToast, setupCustomActions } from \"@/utils\";\n\nconst ticketStatusStore = useTicketStatusStore();\nconst { getUser } = useUserStore();\nconst ticketAgentActivitiesRef = ref(null);\nconst communicationAreaRef = ref(null);\nconst subjectInput = ref(null);\nconst isLoading = ref(false);\n\nconst props = defineProps({\n  ticketId: {\n    type: String,\n    required: true,\n  },\n});\n\nlet storage = useStorage(\"ticket_agent\", {\n  showAllActivity: true,\n});\n\nconst showFullActivity = ref(storage.value.showAllActivity);\nconst showAssignmentModal = ref(false);\nconst showSubjectDialog = ref(false);\n\nconst ticket = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_ticket.api.get_one\",\n  cache: [\"Ticket\", props.ticketId],\n  auto: true,\n  params: {\n    name: props.ticketId,\n  },\n  transform: (data) => {\n    if (data._assign) {\n      data.assignees = JSON.parse(data._assign).map((assignee) => {\n        return {\n          name: assignee,\n          image: getUser(assignee).user_image,\n          label: getUser(assignee).full_name,\n        };\n      });\n    }\n  },\n  onSuccess: (data) => {\n    subjectInput.value = data.subject;\n    setupCustomActions(data, {\n      doc: data,\n    });\n  },\n});\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: \"Tickets\", route: { name: \"TicketsAgent\" } }];\n  items.push({\n    label: ticket.data?.subject,\n    route: { name: \"TicketAgent\" },\n  });\n  return items;\n});\n\nwatch(\n  () => showFullActivity.value,\n  (value) => {\n    storage.value.showAllActivity = value;\n  }\n);\n\nconst dropdownOptions = computed(() =>\n  ticketStatusStore.options.map((o) => ({\n    label: o,\n    value: o,\n    onClick: () => updateTicket(\"status\", o),\n    icon: () =>\n      h(IndicatorIcon, {\n        class: ticketStatusStore.textColorMap[o],\n      }),\n  }))\n);\n\nconst activities = computed(() => {\n  const emailProps = ticket.data.communications.map((email) => {\n    return {\n      type: \"email\",\n      key: email.creation,\n      sender: { name: email.user.email, full_name: email.user.name },\n      to: email.recipients,\n      cc: email.cc,\n      bcc: email.bcc,\n      creation: email.creation,\n      subject: email.subject,\n      attachments: email.attachments,\n      content: email.content,\n    };\n  });\n\n  const commentProps = ticket.data.comments.map((comment) => {\n    return {\n      name: comment.name,\n      type: \"comment\",\n      key: comment.creation,\n      commentedBy: comment.commented_by,\n      commenter: comment.user.name,\n      creation: comment.creation,\n      content: comment.content,\n    };\n  });\n\n  if (!showFullActivity.value) {\n    return [...emailProps, ...commentProps].sort(\n      (a, b) => new Date(a.creation) - new Date(b.creation)\n    );\n  }\n\n  const historyProps = [...ticket.data.history, ...ticket.data.views].map(\n    (h) => {\n      return {\n        type: \"history\",\n        key: h.creation,\n        content: h.action ? h.action : \"viewed this\",\n        creation: h.creation,\n        user: h.user.name + \" \",\n      };\n    }\n  );\n\n  const sorted = [...emailProps, ...commentProps, ...historyProps].sort(\n    (a, b) => new Date(a.creation) - new Date(b.creation)\n  );\n\n  const data = [];\n  let i = 0;\n\n  while (i < sorted.length) {\n    const currentActivity = sorted[i];\n    if (currentActivity.type === \"history\") {\n      currentActivity.relatedActivities = [];\n      for (let j = i + 1; j < sorted.length + 1; j++) {\n        const nextActivity = sorted[j];\n        if (nextActivity && nextActivity.type === \"history\") {\n          currentActivity.relatedActivities.push(nextActivity);\n        } else {\n          data.push(currentActivity);\n          i = j - 1;\n          break;\n        }\n      }\n    } else {\n      data.push(currentActivity);\n    }\n    i++;\n  }\n\n  return data;\n});\n\nfunction updateTicket(fieldname: string, value: string) {\n  isLoading.value = true;\n  createResource({\n    url: \"frappe.client.set_value\",\n    params: {\n      doctype: \"HD Ticket\",\n      name: props.ticketId,\n      fieldname,\n      value,\n    },\n    auto: true,\n    onSuccess: () => {\n      isLoading.value = false;\n      ticket.reload();\n      createToast({\n        title: \"Ticket updated\",\n        icon: \"check\",\n        iconClasses: \"text-green-600\",\n      });\n    },\n    onError: (e) => {\n      isLoading.value = false;\n\n      const title =\n        e.messages && e.messages.length > 0\n          ? e.messages[0]\n          : \"Failed to update ticket\";\n\n      createToast({\n        title,\n        icon: \"x\",\n        iconClasses: \"text-red-600\",\n      });\n    },\n  });\n}\nonMounted(() => {\n  document.title = props.ticketId;\n});\n\nonUnmounted(() => {\n  document.title = \"Helpdesk\";\n});\n</script>\n"],"names":["_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","editorRef","ref","showCannedResponseSelectorModal","loading","props","__props","newEmail","useStorage","emailEmpty","computed","emit","__emit","doc","_useModel","attachments","toEmailsClone","ccEmailsClone","bccEmailsClone","showCC","showBCC","cc","bcc","ccInput","bccInput","applyCannedResponse","template","submitMail","createResource","x","toggleCC","nextTick","toggleBCC","removeAttachment","attachment","a","addToReply","body","toEmails","ccEmails","bccEmails","textEditorMenuButtons","__expose","agentsList","useAgentStore","newComment","commentEmpty","agents","agent","submitComment","values","emails","search","error","query","text","showOptions","selectedValue","val","addValue","watchDebounced","reload","filterOptions","data","c","option","email","options","searchedContacts","value","value2","removeValue","v","removeLastValue","emailRef","setFocus","content","showEmailBox","showCommentBox","emailEditorRef","toggleEmailBox","toggleCommentBox","replyToEmail","authStore","useAuthStore","showDialog","deleteComment","createToast","show_others","show","getUser","useUserStore","addAssignee","removeCurrentAssignee","searchInput","templates","createListResource","onMounted","filteredTemplates","watch","getActivityIcon","type","EmailAtIcon","CommentIcon","DotIcon","scrollToLatestActivity","el","e","useElementVisibility","firstResponseBadge","firstResponse","dayjs","formatTime","resolutionBadge","resolution","sections","dateFormat","dateTooltipFormat","openEmailBox","useTeamStore","defineStore","d__","i","useTicketPriorityStore","dropdown","o","names","useTicketTypeStore","component","h","Autocomplete","apiOptions","SearchComplete","FormControl","transValue","emitUpdate","fieldname","customers","update","field","event","copyToClipboard","normalActions","action","groupedWithLabelActions","_actions","groupIndex","groupedActions","ticketStatusStore","useTicketStatusStore","ticketAgentActivitiesRef","communicationAreaRef","subjectInput","isLoading","storage","showFullActivity","showAssignmentModal","showSubjectDialog","ticket","assignee","setupCustomActions","breadcrumbs","items","dropdownOptions","updateTicket","IndicatorIcon","activities","emailProps","commentProps","comment","b","historyProps","h2","sorted","currentActivity","j","nextActivity","title","onUnmounted"],"mappings":"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"}