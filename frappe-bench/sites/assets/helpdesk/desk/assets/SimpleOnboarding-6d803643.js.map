{"version":3,"file":"SimpleOnboarding-6d803643.js","sources":["../../../../desk/src/pages/onboarding/OnboardingIntro.vue","../../../../desk/src/pages/onboarding/email/data.ts","../../../../desk/src/pages/onboarding/email/EmailIntro.vue","../../../../desk/src/pages/onboarding/email/SelectService.vue","../../../../desk/src/pages/onboarding/email/EmailCredentials.vue","../../../../desk/src/pages/onboarding/email/SuccessMessage.vue","../../../../desk/src/pages/onboarding/email/SetupEmail.vue","../../../../desk/src/pages/onboarding/SetupFavicon.vue","../../../../desk/src/pages/onboarding/SetupLogo.vue","../../../../desk/src/pages/onboarding/SetupName.vue","../../../../desk/src/pages/onboarding/SetupSkipEmail.vue","../../../../desk/src/pages/onboarding/SuccessMessage.vue","../../../../desk/src/pages/onboarding/SimpleOnboarding.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col gap-2 text-gray-800\">\n    <div class=\"text-base text-gray-900\">\n      {{ text }}\n    </div>\n    <div class=\"text-base text-gray-900\">\n      {{ subText }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted } from \"vue\";\nimport { capture } from \"@/telemetry\";\n\nconst text =\n  \"We're excited to have you join us and explore the world of efficient customer support. \\\n\tWe are here to transform the way you handle customer inquiries, streamline ticket \\\n\tmanagement, and deliver outstanding service.\";\nconst subText =\n  \"Once again, welcome to Frappe Helpdesk! Let's hope for a long and smooth journey!\";\n\nonMounted(() => capture(\"onboarding_started\"));\n</script>\n","import { ref } from \"vue\";\nimport { defineStore } from \"pinia\";\n\nexport const useOnboardingEmailStore = defineStore(\"onboarding\", () => {\n  const step = ref(0);\n  const service = ref(\"\");\n\n  function next() {\n    step.value++;\n  }\n\n  return {\n    next,\n    service,\n    step,\n  };\n});\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"text-gray-700\">\n      {{ help }}\n    </div>\n    <Button label=\"Let's go!\" variant=\"outline\" class=\"w-max\" @click=\"next\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Button } from \"frappe-ui\";\nimport { useOnboardingEmailStore } from \"./data\";\n\nconst { next } = useOnboardingEmailStore();\nconst help =\n  \"Did you know that our Helpdesk becomes even more powerful when \\\n\tintegrated with email? With this integration, you can send and \\\n\treceive emails directly from your Helpdesk inbox. It streamlines \\\n\tcommunication and enhances productivity. Would you like assistance \\\n\tin setting up your email integration now?\";\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"text-gray-700\">\n      {{ title }}\n    </div>\n    <div class=\"grid grid-cols-4 gap-4\">\n      <div\n        v-for=\"s in services\"\n        :key=\"s.name\"\n        class=\"flex h-20 w-20 cursor-pointer items-center justify-center place-self-center rounded-xl bg-gray-100 hover:bg-gray-200\"\n        :class=\"{\n          'ring-2': s.name === service,\n          'ring-gray-300': s.name === service,\n        }\"\n        @click=\"service = s.name\"\n      >\n        <Tooltip :text=\"s.name\">\n          <img :src=\"s.icon\" class=\"h-12 w-12\" />\n        </Tooltip>\n      </div>\n    </div>\n    <div\n      v-if=\"info\"\n      class=\"flex items-center gap-2 rounded-xl p-2 ring-1 ring-gray-200\"\n    >\n      <IconAlert class=\"h-12 w-12 text-blue-500\" />\n      <div class=\"text-xs text-gray-700\">\n        {{ info }}\n      </div>\n    </div>\n    <Button\n      label=\"Continue\"\n      :disabled=\"isEmpty(service)\"\n      class=\"w-max\"\n      variant=\"outline\"\n      @click=\"next\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted } from \"vue\";\nimport { storeToRefs } from \"pinia\";\nimport { Button, Tooltip } from \"frappe-ui\";\nimport { isEmpty } from \"lodash\";\nimport { capture } from \"@/telemetry\";\nimport { useOnboardingEmailStore } from \"./data\";\nimport IconAlert from \"~icons/espresso/alert-circle\";\nimport LogoGmail from \"@/assets/images/gmail.png\";\nimport LogoOutlook from \"@/assets/images/outlook.png\";\nimport LogoSendgrid from \"@/assets/images/sendgrid.png\";\nimport LogoSparkpost from \"@/assets/images/sparkpost.webp\";\nimport LogoYahoo from \"@/assets/images/yahoo.png\";\nimport LogoYandex from \"@/assets/images/yandex.png\";\n\nconst onboardingEmailStore = useOnboardingEmailStore();\nconst { next } = onboardingEmailStore;\nconst { service } = storeToRefs(onboardingEmailStore);\nconst title = \"Which service do you want to add?\";\nconst services = [\n  {\n    name: \"GMail\",\n    icon: LogoGmail,\n    info: \"Setting up GMail requires you to enable two factor authentication \\\n\t\tand app specific passwords. Read more at https://support.google.com/accounts/answer/185833\",\n  },\n  {\n    name: \"Outlook\",\n    icon: LogoOutlook,\n  },\n  {\n    name: \"Sendgrid\",\n    icon: LogoSendgrid,\n  },\n  {\n    name: \"SparkPost\",\n    icon: LogoSparkpost,\n  },\n  {\n    name: \"Yahoo\",\n    icon: LogoYahoo,\n  },\n  {\n    name: \"Yandex\",\n    icon: LogoYandex,\n  },\n];\nconst info = computed(\n  () => services.find((s) => s.name === service.value)?.info\n);\n\nonMounted(() => capture(\"onboarding_email_select_service_reached\"));\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <form class=\"space-y-4\" @submit.prevent=\"submit\">\n      <Input\n        v-model=\"accountName\"\n        label=\"Account name\"\n        placeholder=\"John Doe (Example.com)\"\n        type=\"text\"\n        required\n      />\n      <Input\n        v-model=\"email\"\n        label=\"Email\"\n        placeholder=\"john.doe@example.com\"\n        type=\"email\"\n        required\n      />\n      <Input\n        v-model=\"password\"\n        label=\"Password\"\n        placeholder=\"••••••••\"\n        type=\"password\"\n        required\n      />\n    </form>\n    <Button\n      label=\"Finish!\"\n      :disabled=\"!accountName || !email || !password\"\n      :loading=\"insertRes.loading\"\n      class=\"w-max\"\n      variant=\"outline\"\n      @click=\"submit\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref } from \"vue\";\nimport { storeToRefs } from \"pinia\";\nimport { createResource, Button, Input, debounce } from \"frappe-ui\";\nimport { capture } from \"@/telemetry\";\nimport { useError } from \"@/composables/error\";\nimport { useOnboardingEmailStore } from \"./data\";\n\nconst onboardingEmailStore = useOnboardingEmailStore();\nconst { next } = onboardingEmailStore;\nconst { service } = storeToRefs(onboardingEmailStore);\nconst accountName = ref(\"\");\nconst email = ref(\"\");\nconst password = ref(\"\");\n\nconst emailDefaults = {\n  GMail: {\n    email_server: \"imap.gmail.com\",\n    use_ssl: 1,\n    smtp_server: \"smtp.gmail.com\",\n  },\n  outlook: {\n    email_server: \"imap-mail.outlook.com\",\n    use_ssl: 1,\n    smtp_server: \"smtp-mail.outlook.com\",\n  },\n  Sendgrid: {\n    smtp_server: \"smtp.sendgrid.net\",\n    smtp_port: 587,\n  },\n  SparkPost: {\n    smtp_server: \"smtp.sparkpostmail.com\",\n  },\n  Yahoo: {\n    email_server: \"imap.mail.yahoo.com\",\n    use_ssl: 1,\n    smtp_server: \"smtp.mail.yahoo.com\",\n    smtp_port: 587,\n  },\n  Yandex: {\n    email_server: \"imap.yandex.com\",\n    use_ssl: 1,\n    smtp_server: \"smtp.yandex.com\",\n    smtp_port: 587,\n  },\n};\n\nconst insertRes = createResource({\n  url: \"frappe.client.insert\",\n  onSuccess: () => {\n    capture(\"onboarding_email_credentials_success\");\n    next();\n  },\n  onError: (e) => {\n    useError()(e);\n    capture(\"onboarding_email_credentials_fail\");\n  },\n});\n\nconst submit = debounce(() => {\n  insertRes.submit({\n    doc: {\n      doctype: \"Email Account\",\n      email_account_name: accountName.value,\n      email_id: email.value,\n      password: password.value,\n      enable_incoming: true,\n      enable_outgoing: true,\n      default_incoming: true,\n      default_outgoing: true,\n      email_sync_option: \"ALL\",\n      initial_sync_count: 100,\n      imap_folder: [\n        {\n          append_to: \"HD Ticket\",\n          folder_name: \"INBOX\",\n        },\n      ],\n      create_contact: true,\n      track_email_status: true,\n      service: service.value,\n      use_tls: 1,\n      use_imap: 1,\n      smtp_port: 587,\n      ...emailDefaults[service.value],\n    },\n  });\n}, 500);\n\nonMounted(() => capture(\"onboarding_email_credentials_reached\"));\n</script>\n","<template>\n  <div class=\"flex flex-col items-center justify-center gap-4\">\n    <div class=\"text-7xl\">\n      {{ emoji }}\n    </div>\n    <div class=\"text-center text-base italic text-gray-900\">\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted } from \"vue\";\nimport { capture } from \"@/telemetry\";\n\nconst emoji = \"✔️\";\nconst message =\n  \"Fantastic! Your email is now active. You are ready unleash true \\\n\tpotential of Frappe Helpdesk!\";\n\nonMounted(() => capture(\"onboarding_email_finished\"));\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <component :is=\"steps[step]\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted } from \"vue\";\nimport { storeToRefs } from \"pinia\";\nimport { capture } from \"@/telemetry\";\nimport { useOnboardingEmailStore } from \"./data\";\nimport EmailIntro from \"./EmailIntro.vue\";\nimport SelectService from \"./SelectService.vue\";\nimport EmailCredentials from \"./EmailCredentials.vue\";\nimport SuccessMessage from \"./SuccessMessage.vue\";\n\nconst onboardingEmailStore = useOnboardingEmailStore();\nconst { step } = storeToRefs(onboardingEmailStore);\nconst steps = [EmailIntro, SelectService, EmailCredentials, SuccessMessage];\n\nonMounted(() => capture(\"onboarding_email_reached\"));\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"text-gray-700\">\n      {{ help }}\n    </div>\n    <img v-if=\"imageUrl\" class=\"m-auto h-8 w-8\" :src=\"imageUrl\" />\n    <FileUploader @success=\"(file) => update(file)\">\n      <template #default=\"{ error, openFileSelector }\">\n        <span>\n          <Button\n            label=\"Upload Favicon\"\n            :loading=\"r.loading\"\n            class=\"w-max\"\n            variant=\"outline\"\n            @click=\"openFileSelector\"\n          />\n          <ErrorMessage class=\"mt-2\" :message=\"error\" />\n        </span>\n      </template>\n    </FileUploader>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Ref, onMounted, ref } from \"vue\";\nimport { createResource, FileUploader } from \"frappe-ui\";\nimport { capture } from \"@/telemetry\";\n\nconst help =\n  \"A favicon enhances your website by providing a small, recognizable icon that \\\n\tappears in browser tabs. It improves brand recognition, adds professionalism, \\\n\taids navigation, establishes trust, and maintains brand consistency\";\nconst imageUrl: Ref<string> = ref(null);\n\nconst r = createResource({\n  url: \"frappe.client.set_value\",\n  debounce: 1000,\n  onSuccess(data) {\n    imageUrl.value = data.brand_favicon;\n    capture(\"onboarding_favicon_changed\");\n  },\n});\n\nfunction update(file) {\n  r.submit({\n    doctype: \"HD Settings\",\n    name: \"HD Settings\",\n    fieldname: \"brand_favicon\",\n    value: file.file_url,\n  });\n}\n\nonMounted(() => capture(\"onboarding_favicon_reached\"));\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"text-gray-700\">\n      {{ help }}\n    </div>\n    <img v-if=\"imageUrl\" class=\"m-auto h-8\" :src=\"imageUrl\" />\n    <FileUploader @success=\"(file) => update(file)\">\n      <template #default=\"{ error, openFileSelector }\">\n        <span>\n          <Button\n            label=\"Upload Logo\"\n            :loading=\"r.loading\"\n            class=\"w-max\"\n            variant=\"outline\"\n            @click=\"openFileSelector\"\n          />\n          <ErrorMessage class=\"mt-2\" :message=\"error\" />\n        </span>\n      </template>\n    </FileUploader>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Ref, onMounted, ref } from \"vue\";\nimport { createResource, FileUploader } from \"frappe-ui\";\nimport { capture } from \"@/telemetry\";\n\nconst help =\n  \"this will be used in many places, including login and loading screens. \\\n\tAn image with transparent background and a resolution of 160 x 32 is preferred\";\nconst imageUrl: Ref<string> = ref(null);\n\nconst r = createResource({\n  url: \"frappe.client.set_value\",\n  debounce: 1000,\n  onSuccess(data) {\n    imageUrl.value = data.brand_logo;\n    capture(\"onboarding_logo_changed\");\n  },\n});\n\nfunction update(file) {\n  r.submit({\n    doctype: \"HD Settings\",\n    name: \"HD Settings\",\n    fieldname: \"brand_logo\",\n    value: file.file_url,\n  });\n}\n\nonMounted(() => capture(\"onboarding_logo_reached\"));\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4 text-gray-800\">\n    {{ text }}\n    <div class=\"relative flex items-center justify-end\">\n      <Input\n        type=\"text\"\n        class=\"w-full\"\n        :placeholder=\"placeholder\"\n        @input=\"update\"\n      />\n      <IconCheck\n        v-if=\"isCheckVisible\"\n        class=\"absolute mr-2 w-6 text-green-500\"\n      />\n    </div>\n    <div class=\"italic text-gray-800\">\n      {{ subText }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref } from \"vue\";\nimport { createResource } from \"frappe-ui\";\nimport { capture } from \"@/telemetry\";\nimport IconCheck from \"~icons/ph/check-bold\";\n\nconst text =\n  \"Now, let's set a name for your Helpdesk that reflects your organization's \\\n\tidentity and values. So, what would you like to name your Helpdesk?\";\nconst subText =\n  \"Choose a name that resonates with your brand and instills \\\n\ttrust in your customers\";\nconst placeholder = \"My Helpdesk\";\nconst isCheckVisible = ref(false);\n\nconst r = createResource({\n  url: \"frappe.client.set_value\",\n  debounce: 1000,\n  onSuccess() {\n    isCheckVisible.value = true;\n    capture(\"onboarding_name_changed\");\n  },\n});\n\nfunction update(value: string) {\n  isCheckVisible.value = false;\n  r.submit({\n    doctype: \"HD Settings\",\n    name: \"HD Settings\",\n    fieldname: \"helpdesk_name\",\n    value,\n  });\n}\n\nonMounted(() => capture(\"onboarding_name_reached\"));\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4 text-gray-800\">\n    {{ query }}\n    <Button\n      :label=\"isYes ? 'No' : 'Yes'\"\n      class=\"w-max\"\n      variant=\"outline\"\n      @click=\"update(!isYes)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref } from \"vue\";\nimport { createResource, Button } from \"frappe-ui\";\nimport { capture } from \"@/telemetry\";\n\nconst query =\n  \"Did you know that our Helpdesk is designed to function independently, \\\n\twithout relying on email? Our customer portal is finely tuned to be a \\\n\tstandalone solution, eliminating the hassle of email setup. Would you \\\n\tlike me to disable the email workflow for you?\";\nconst isYes = ref(false);\n\nconst r = createResource({\n  url: \"frappe.client.set_value\",\n  debounce: 1000,\n  onSuccess(data) {\n    isYes.value = data.skip_email_workflow;\n    const cond = isYes.value ? \"yes\" : \"no\";\n    const event = \"onboarding_skip_email_\" + cond;\n    capture(event);\n  },\n});\n\nfunction update(value: boolean) {\n  r.submit({\n    doctype: \"HD Settings\",\n    name: \"HD Settings\",\n    fieldname: \"skip_email_workflow\",\n    value,\n  });\n}\n\nonMounted(() => capture(\"onboarding_skip_email_reached\"));\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <div>\n      <div class=\"font-medium\">Don't forget to star our GitHub repo</div>\n      <a class=\"text-sm text-gray-800\" :href=\"github\" target=\"_blank\">\n        {{ github }}\n      </a>\n    </div>\n    <div>\n      <div class=\"font-medium\">\n        If you find any bugs, report them at the issue tracker\n      </div>\n      <a class=\"text-sm text-gray-800\" :href=\"issues\" target=\"_blank\">\n        {{ issues }}\n      </a>\n    </div>\n    <div>\n      <div class=\"font-medium\">\n        For any queries or support, reach out to our support portal\n      </div>\n      <a class=\"text-sm text-gray-800\" :href=\"support\" target=\"_blank\">\n        {{ support }}\n      </a>\n    </div>\n    <div>\n      <div class=\"font-medium\">Or via our e-mail</div>\n      <a class=\"text-sm text-gray-800\" :href=\"'mailto:' + email\">\n        {{ email }}\n      </a>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted } from \"vue\";\nimport { capture } from \"@/telemetry\";\n\nconst github = \"https://github.com/frappe/helpdesk\";\nconst issues = \"https://github.com/frappe/helpdesk/issues\";\nconst support = \"https://frappedesk.com/helpdesk\";\nconst email = \"hello@frappe.io\";\n\nonMounted(() => capture(\"onboarding_finished\"));\n</script>\n","<template>\n  <div class=\"flex h-screen w-screen items-center justify-center bg-gray-100\">\n    <div class=\"container-box w-1/3 rounded-xl text-base text-gray-900\">\n      <div class=\"rounded-t-xl bg-white px-8 py-6\">\n        <div class=\"mb-4 text-xl font-semibold\">\n          {{ steps[step][\"title\"] }}\n        </div>\n        <component :is=\"steps[step]['component']\" />\n      </div>\n      <div class=\"flex justify-end rounded-b-xl bg-gray-200 px-8 py-3\">\n        <Button\n          v-for=\"action in actions\"\n          :key=\"action.label\"\n          :label=\"action.label\"\n          :variant=\"action.variant\"\n          @click=\"action.onClick\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onBeforeMount, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { createResource } from \"frappe-ui\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { useConfigStore } from \"@/stores/config\";\nimport OnboardingIntro from \"./OnboardingIntro.vue\";\nimport SetupEmail from \"./email/SetupEmail.vue\";\nimport SetupFavicon from \"./SetupFavicon.vue\";\nimport SetupLogo from \"./SetupLogo.vue\";\nimport SetupName from \"./SetupName.vue\";\nimport SetupSkipEmail from \"./SetupSkipEmail.vue\";\nimport SuccessMessage from \"./SuccessMessage.vue\";\n\nconst router = useRouter();\nconst authStore = useAuthStore();\nconst configStore = useConfigStore();\nconst step = ref(0);\nconst steps = [\n  {\n    title: \"Welcome to Frappe Helpdesk! 🎉\",\n    component: OnboardingIntro,\n  },\n  {\n    title: \"Begin with a name! 🖋️\",\n    component: SetupName,\n  },\n  {\n    title: \"Let's set a logo 💫\",\n    component: SetupLogo,\n  },\n  {\n    title: \"How about a Favicon? 🌏\",\n    component: SetupFavicon,\n  },\n  {\n    title: \"Did you know? 💡\",\n    component: SetupSkipEmail,\n  },\n  {\n    title: \"Let's setup an email 📬\",\n    component: SetupEmail,\n  },\n  {\n    title: \"That's it for now! 🙏\",\n    component: SuccessMessage,\n  },\n];\nconst actions = computed(() =>\n  [\n    {\n      label: \"← Previous\",\n      appearance: \"minimal\",\n      variant: \"ghost\",\n      onClick() {\n        step.value--;\n      },\n      condition: step.value + 1 > 1 && step.value + 1 <= steps.length,\n    },\n    {\n      label: \"Next →\",\n      appearance: \"primary\",\n      variant: \"solid\",\n      onClick() {\n        step.value++;\n      },\n      condition: step.value + 1 < steps.length,\n    },\n    {\n      label: \"Finish ✓\",\n      variant: \"solid\",\n      onClick() {\n        finish();\n      },\n      condition: step.value + 1 === steps.length,\n    },\n  ].filter((a) => a.condition)\n);\n\nfunction finish() {\n  createResource({\n    url: \"frappe.client.set_value\",\n  })\n    .submit({\n      doctype: \"HD Settings\",\n      name: \"HD Settings\",\n      fieldname: \"setup_complete\",\n      value: true,\n    })\n    .then(redirect);\n}\n\nfunction redirect() {\n  router.replace({ path: \"/\" });\n}\n\nonBeforeMount(() => {\n  if (!authStore.hasDeskAccess || configStore.isSetupComplete) {\n    redirect();\n  }\n});\n</script>\n\n<style scoped>\n.container-box {\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n}\n</style>\n"],"names":["text","subText","onMounted","capture","useOnboardingEmailStore","defineStore","step","ref","service","next","help","title","onboardingEmailStore","storeToRefs","services","LogoGmail","LogoOutlook","LogoSendgrid","LogoSparkpost","LogoYahoo","LogoYandex","info","computed","s","accountName","email","password","emailDefaults","insertRes","createResource","e","useError","submit","debounce","emoji","message","steps","EmailIntro","SelectService","EmailCredentials","SuccessMessage","imageUrl","r","data","update","file","placeholder","isCheckVisible","value","query","isYes","event","github","issues","support","router","useRouter","authStore","useAuthStore","configStore","useConfigStore","OnboardingIntro","SetupName","SetupLogo","SetupFavicon","SetupSkipEmail","SetupEmail","actions","finish","a","redirect","onBeforeMount"],"mappings":"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"}