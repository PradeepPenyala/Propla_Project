{"version":3,"file":"AgentRoot-f25b8eaf.js","sources":["../../../../desk/src/stores/sidebar.ts","../../../../desk/src/stores/notification.ts","../../../../desk/src/components/notifications/Notifications.vue","../../../../desk/src/components/desk/sidebar/UserMenu.vue","../../../../desk/src/assets/images/frappe-mail.svg","../../../../desk/src/components/Settings/emailConfig.ts","../../../../desk/src/components/Settings/EmailAdd.vue","../../../../desk/src/components/Settings/EmailAccountCard.vue","../../../../desk/src/components/Settings/EmailAccountList.vue","../../../../desk/src/components/Settings/EmailEdit.vue","../../../../desk/src/components/Settings/EmailConfig.vue","../../../../desk/src/components/Settings/Branding.vue","../../../../desk/src/components/Settings/SettingsModal.vue","../../../../desk/src/components/icons/AppsIcon.vue","../../../../desk/src/components/Apps.vue","../../../../desk/src/components/desk/sidebar/SideBar.vue","../../../../desk/src/pages/desk/AgentRoot.vue"],"sourcesContent":["import { computed, ref } from \"vue\";\nimport { defineStore } from \"pinia\";\nimport { useStorage } from \"@vueuse/core\";\n\nexport const useSidebarStore = defineStore(\"sidebar\", () => {\n  const isOpen = ref(true);\n  const isExpanded = useStorage(\"sidebar_is_expanded\", true);\n  const width = computed(() => {\n    return isExpanded.value ? \"224px\" : \"50px\";\n  });\n\n  function toggle(state?: boolean) {\n    isOpen.value = state ?? !isOpen.value;\n  }\n\n  function toggleExpanded(state?: boolean) {\n    isExpanded.value = state ?? !isExpanded.value;\n  }\n\n  return {\n    isExpanded,\n    isOpen,\n    toggle,\n    toggleExpanded,\n    width,\n  };\n});\n","import { computed, ref } from \"vue\";\nimport { defineStore } from \"pinia\";\nimport { createResource } from \"frappe-ui\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { useError } from \"@/composables/error\";\nimport { createListManager } from \"@/composables/listManager\";\nimport { Notification, Resource } from \"@/types\";\n\nexport const useNotificationStore = defineStore(\"notification\", () => {\n  const authStore = useAuthStore();\n  const visible = ref(false);\n  const resource: Resource<Array<Notification>> = createListManager({\n    doctype: \"HD Notification\",\n    cache: \"Notifications\",\n    filters: {\n      user_to: [\"=\", authStore.userId],\n    },\n    fields: [\n      \"creation\",\n      \"name\",\n      \"notification_type\",\n      \"read\",\n      \"reference_comment\",\n      \"reference_ticket\",\n      \"user_from\",\n      \"user_to\",\n    ],\n    orderBy: \"creation desc\",\n    auto: true,\n  });\n  const clear = createResource({\n    url: \"helpdesk.helpdesk.doctype.hd_notification.utils.clear\",\n    auto: false,\n    onSuccess: () => resource.reload(),\n    onError: useError(),\n  });\n\n  const read = (ticket) => {\n    createResource({\n      url: \"helpdesk.helpdesk.doctype.hd_notification.utils.clear\",\n      auto: true,\n      params: {\n        ticket: ticket,\n      },\n      onSuccess: () => resource.reload(),\n      onError: useError(),\n    });\n  };\n\n  const data = computed(() => resource.data || []);\n  const unread = computed(() => data.value.filter((d) => !d.read).length);\n\n  function toggle() {\n    visible.value = !visible.value;\n  }\n\n  return {\n    clear,\n    data,\n    toggle,\n    read,\n    unread,\n    visible,\n  };\n});\n","<template>\n  <span\n    v-if=\"notificationStore.visible\"\n    ref=\"target\"\n    class=\"fixed z-10 h-screen overflow-auto bg-white\"\n    :style=\"{\n      'box-shadow': '8px 0px 8px rgba(0, 0, 0, 0.1)',\n      'max-width': '350px',\n      'min-width': '350px',\n      left: sidebarStore.width,\n    }\"\n  >\n    <div\n      class=\"sticky top-0 z-10 flex items-center justify-between border-b bg-white px-5 py-2.5\"\n    >\n      <span class=\"text-lg font-medium\">Notifications</span>\n      <span>\n        <Button\n          theme=\"blue\"\n          variant=\"ghost\"\n          @click=\"() => notificationStore.clear.submit()\"\n        >\n          <template #icon>\n            <LucideCheckCheck class=\"h-4 w-4\" />\n          </template>\n        </Button>\n        <Button\n          theme=\"gray\"\n          variant=\"ghost\"\n          @click=\"() => notificationStore.toggle()\"\n        >\n          <template #icon>\n            <LucideX class=\"h-4 w-4\" />\n          </template>\n        </Button>\n      </span>\n    </div>\n    <div class=\"divide-y text-base\">\n      <RouterLink\n        v-for=\"n in notificationStore.data\"\n        :key=\"n.name\"\n        class=\"flex cursor-pointer items-start gap-3.5 px-5 py-2.5 hover:bg-gray-100\"\n        :to=\"getRoute(n)\"\n        @click=\"\n          () => {\n            notificationStore.toggle();\n            notificationStore.read(n.reference_ticket);\n          }\n        \"\n      >\n        <UserAvatar v-bind=\"n.user_from\" />\n        <span>\n          <div class=\"mb-2 leading-5\">\n            <span class=\"space-x-1 text-gray-700\">\n              <span class=\"font-medium text-gray-900\">{{\n                n.user_from.name\n              }}</span>\n              <span v-if=\"n.notification_type === 'Mention'\"\n                >mentioned you in ticket</span\n              >\n              <span v-if=\"n.notification_type === 'Assignment'\"\n                >assigned you a ticket</span\n              >\n              <span v-if=\"n.notification_type === 'Reaction'\"\n                >has reopened the ticket</span\n              >\n              <span class=\"font-medium text-gray-900\">{{\n                n.reference_ticket\n              }}</span>\n            </span>\n          </div>\n          <div class=\"flex items-center gap-2\">\n            <div class=\"text-sm text-gray-600\">\n              {{ dayjs.tz(n.creation).fromNow() }}\n            </div>\n            <div v-if=\"!n.read\" class=\"h-1.5 w-1.5 rounded-full bg-gray-900\" />\n          </div>\n        </span>\n      </RouterLink>\n    </div>\n  </span>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { onClickOutside } from \"@vueuse/core\";\nimport { dayjs } from \"@/dayjs\";\nimport { Notification } from \"@/types\";\nimport { useSidebarStore } from \"@/stores/sidebar\";\nimport { useNotificationStore } from \"@/stores/notification\";\nimport { UserAvatar } from \"@/components\";\n\nconst notificationStore = useNotificationStore();\nconst sidebarStore = useSidebarStore();\nconst target = ref(null);\nonClickOutside(target, () => {\n  if (notificationStore.visible) {\n    notificationStore.toggle();\n  }\n});\n\nfunction getRoute(n: Notification) {\n  switch (n.notification_type) {\n    case \"Mention\":\n      return {\n        name: \"TicketAgent\",\n        params: {\n          ticketId: n.reference_ticket,\n        },\n        hash: \"#\" + n.reference_comment,\n      };\n    case \"Assignment\":\n    case \"Reaction\":\n      return {\n        name: \"TicketAgent\",\n        params: {\n          ticketId: n.reference_ticket,\n        },\n      };\n  }\n}\n</script>\n","<template>\n  <Dropdown :options=\"options\">\n    <template #default=\"{ open }\">\n      <button\n        class=\"flex h-12 items-center rounded-md py-2 duration-300 ease-in-out\"\n        :class=\"\n          !sidebarStore.isExpanded\n            ? 'w-auto px-0'\n            : open\n            ? 'w-52 bg-white px-2 shadow-sm'\n            : 'w-52 px-2 hover:bg-gray-200'\n        \"\n      >\n        <BrandLogo />\n        <div\n          class=\"flex flex-1 flex-col text-left duration-300 ease-in-out\"\n          :class=\"\n            !sidebarStore.isExpanded\n              ? 'ml-0 w-0 overflow-hidden opacity-0'\n              : 'ml-2 w-auto opacity-100'\n          \"\n        >\n          <div class=\"text-base font-medium leading-none text-gray-900\">\n            Helpdesk\n          </div>\n          <div class=\"mt-1 text-sm leading-none text-gray-700\">\n            {{ authStore.userName }}\n          </div>\n        </div>\n        <div\n          class=\"duration-300 ease-in-out\"\n          :class=\"\n            !sidebarStore.isExpanded\n              ? 'ml-0 w-0 overflow-hidden opacity-0'\n              : 'ml-2 w-auto opacity-100'\n          \"\n        >\n          <FeatherIcon\n            name=\"chevron-down\"\n            class=\"h-4 w-4 text-gray-600\"\n            aria-hidden=\"true\"\n          />\n        </div>\n      </button>\n    </template>\n  </Dropdown>\n</template>\n\n<script setup lang=\"ts\">\nimport { Dropdown, Avatar } from \"frappe-ui\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { useSidebarStore } from \"@/stores/sidebar\";\nimport { useConfigStore } from \"@/stores/config\";\nimport BrandLogo from \"@/components/BrandLogo.vue\";\n\nconst config = useConfigStore();\n\ndefineProps({\n  options: {\n    type: Array,\n    required: true,\n  },\n});\n\nconst authStore = useAuthStore();\nconst sidebarStore = useSidebarStore();\n</script>\n","export default \"__VITE_ASSET__61f532d2__\"","import LogoGmail from \"@/assets/images/gmail.png\";\nimport LogoOutlook from \"@/assets/images/outlook.png\";\nimport LogoSendgrid from \"@/assets/images/sendgrid.png\";\nimport LogoSparkpost from \"@/assets/images/sparkpost.webp\";\nimport LogoYahoo from \"@/assets/images/yahoo.png\";\nimport LogoYandex from \"@/assets/images/yandex.png\";\nimport LogoFrappeMail from \"@/assets/images/frappe-mail.svg\";\nimport { RenderField, EmailService, EmailAccount } from \"@/types\";\nimport { validateEmailWithZod } from \"@/utils\";\nconst fixedFields: RenderField[] = [\n  {\n    label: \"Account Name\",\n    name: \"email_account_name\",\n    type: \"text\",\n    placeholder: \"Support / Sales\",\n  },\n  {\n    label: \"Email ID\",\n    name: \"email_id\",\n    type: \"email\",\n    placeholder: \"johndoe@example.com\",\n  },\n];\n\nexport const incomingOutgoingFields: RenderField[] = [\n  {\n    label: \"Enable Incoming\",\n    name: \"enable_incoming\",\n    type: \"checkbox\",\n    description:\n      \"If enabled, tickets can be created from the incoming emails on this account.\",\n  },\n  {\n    label: \"Enable Outgoing\",\n    name: \"enable_outgoing\",\n    type: \"checkbox\",\n    description: \"If enabled, outgoing emails can be sent from this account.\",\n  },\n  {\n    label: \"Default Incoming\",\n    name: \"default_incoming\",\n    type: \"checkbox\",\n    description:\n      \"If enabled, all replies to your company (eg: replies@yourcomany.com) will come to this account. Note: Only one account can be default incoming.\",\n  },\n  {\n    label: \"Default Outgoing\",\n    name: \"default_outgoing\",\n    type: \"checkbox\",\n    description:\n      \"If enabled, all outgoing emails will be sent from this account. Note: Only one account can be default outgoing.\",\n  },\n];\n\nexport const popularProviderFields = [\n  ...fixedFields,\n  {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"********\",\n  },\n];\n\nexport const customProviderFields = [\n  ...fixedFields,\n  {\n    label: \"API Key\",\n    name: \"api_key\",\n    type: \"text\",\n    placeholder: \"********\",\n  },\n  {\n    label: \"API Secret\",\n    name: \"api_secret\",\n    type: \"password\",\n    placeholder: \"********\",\n  },\n];\n\nexport const services: EmailService[] = [\n  {\n    name: \"Frappe Mail\",\n    icon: LogoFrappeMail,\n    info: `Setting up Frappe Mail requires you to have an API key and API Secret of your email account. Read more `,\n    link: \"https://yandex.com/support/id/authorization/app-passwords.html\",\n    custom: true,\n  },\n  {\n    name: \"GMail\",\n    icon: LogoGmail,\n    info: `Setting up GMail requires you to enable two factor authentication\n\t\t  and app specific passwords. Read more`,\n    link: \"https://support.google.com/accounts/answer/185833\",\n    custom: false,\n  },\n  {\n    name: \"Outlook\",\n    icon: LogoOutlook,\n    info: `Setting up Outlook requires you to enable two factor authentication\n\t\t  and app specific passwords. Read more`,\n    link: \"https://support.microsoft.com/en-us/account-billing/how-to-get-and-use-app-passwords-5896ed9b-4263-e681-128a-a6f2979a7944\",\n    custom: false,\n  },\n  {\n    name: \"Sendgrid\",\n    icon: LogoSendgrid,\n    info: `Setting up Sendgrid requires you to enable two factor authentication\n\t\t  and app specific passwords. Read more `,\n    link: \"https://sendgrid.com/docs/ui/account-and-settings/two-factor-authentication/\",\n    custom: false,\n  },\n  {\n    name: \"SparkPost\",\n    icon: LogoSparkpost,\n    info: `Setting up SparkPost requires you to enable two factor authentication\n\t\t  and app specific passwords. Read more `,\n    link: \"https://support.sparkpost.com/docs/my-account-and-profile/enabling-two-factor-authentication\",\n    custom: false,\n  },\n  {\n    name: \"Yahoo\",\n    icon: LogoYahoo,\n    info: `Setting up Yahoo requires you to enable two factor authentication\n\t\t  and app specific passwords. Read more `,\n    link: \"https://help.yahoo.com/kb/SLN15241.html\",\n    custom: false,\n  },\n  {\n    name: \"Yandex\",\n    icon: LogoYandex,\n    info: `Setting up Yandex requires you to enable two factor authentication\n\t\t  and app specific passwords. Read more `,\n    link: \"https://yandex.com/support/id/authorization/app-passwords.html\",\n    custom: false,\n  },\n];\n\nexport const emailIcon = {\n  GMail: LogoGmail,\n  Outlook: LogoOutlook,\n  Sendgrid: LogoSendgrid,\n  SparkPost: LogoSparkpost,\n  Yahoo: LogoYahoo,\n  Yandex: LogoYandex,\n  \"Frappe Mail\": LogoFrappeMail,\n};\n\nexport function validateInputs(state: EmailAccount, isCustom: boolean) {\n  if (!state.email_account_name) {\n    return \"Account name is required\";\n  }\n  if (!state.email_id) {\n    return \"Email ID is required\";\n  }\n  const validEmail = validateEmailWithZod(state.email_id);\n  if (!validEmail) {\n    return \"Invalid email ID\";\n  }\n  if (!isCustom && !state.password) {\n    return \"Password is required\";\n  }\n  if (isCustom) {\n    if (!state.api_key) {\n      return \"API Key is required\";\n    }\n    if (!state.api_secret) {\n      return;\n    }\n  }\n  return \"\";\n}\n","<template>\n  <div class=\"flex h-full flex-col gap-4\">\n    <!-- title and desc -->\n    <div role=\"heading\" aria-level=\"1\" class=\"flex flex-col gap-1\">\n      <h5 class=\"text-lg font-semibold\">Setup Email</h5>\n      <p class=\"text-sm text-gray-600\">\n        Choose the email service provider you want to configure.\n      </p>\n    </div>\n    <!-- email service provider selection -->\n    <div class=\"flex flex-wrap items-center gap-4\">\n      <div\n        v-for=\"s in services\"\n        :key=\"s.name\"\n        class=\"min-w-3 mt-4 flex flex-col items-center gap-1\"\n        @click=\"handleSelect(s)\"\n      >\n        <EmailProviderIcon\n          :service-name=\"s.name\"\n          :logo=\"s.icon\"\n          :selected=\"selectedService?.name === s?.name\"\n        />\n      </div>\n    </div>\n    <div v-if=\"selectedService\" class=\"flex flex-col gap-4\">\n      <!-- email service provider info -->\n      <div class=\"flex items-center gap-2 rounded-md p-2 ring-1 ring-gray-200\">\n        <IconAlert\n          class=\"h-6 w-5 w-min-5 w-max-5 min-h-5 max-w-5 text-blue-500\"\n        />\n        <div class=\"text-wrap text-xs text-gray-700\">\n          {{ selectedService.info }}\n          <a\n            :href=\"selectedService.link\"\n            target=\"_blank\"\n            class=\"text-blue-500 underline\"\n            >here</a\n          >\n          .\n        </div>\n      </div>\n      <!-- service provider fields -->\n      <div class=\"flex flex-col gap-4\">\n        <div class=\"grid grid-cols-1 gap-4\">\n          <div\n            v-for=\"field in fields\"\n            :key=\"field.name\"\n            class=\"flex flex-col gap-1\"\n          >\n            <FormControl\n              v-model=\"state[field.name]\"\n              :label=\"field.label\"\n              :name=\"field.name\"\n              :type=\"field.type\"\n              :placeholder=\"field.placeholder\"\n            />\n          </div>\n        </div>\n        <div class=\"grid grid-cols-2 gap-4\">\n          <div\n            v-for=\"field in incomingOutgoingFields\"\n            :key=\"field.name\"\n            class=\"flex flex-col gap-1\"\n          >\n            <FormControl\n              v-model=\"state[field.name]\"\n              :label=\"field.label\"\n              :name=\"field.name\"\n              :type=\"field.type\"\n            />\n            <p class=\"text-xs text-gray-500\">{{ field.description }}</p>\n          </div>\n        </div>\n        <ErrorMessage v-if=\"error\" class=\"ml-1\" :message=\"error\" />\n      </div>\n    </div>\n    <!-- action button -->\n    <div v-if=\"selectedService\" class=\"mt-auto flex justify-between\">\n      <Button\n        label=\"Back\"\n        theme=\"gray\"\n        variant=\"outline\"\n        :disabled=\"addEmailRes.loading\"\n        @click=\"emit('update:step', 'email-list')\"\n      />\n      <Button\n        label=\"Create\"\n        variant=\"solid\"\n        :loading=\"addEmailRes.loading\"\n        @click=\"createEmailAccount\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, Reactive, reactive, Ref, ref } from \"vue\";\nimport { createResource } from \"frappe-ui\";\nimport IconAlert from \"~icons/espresso/alert-circle\";\nimport { createToast } from \"@/utils\";\nimport {\n  customProviderFields,\n  popularProviderFields,\n  services,\n  validateInputs,\n  incomingOutgoingFields,\n} from \"./emailConfig\";\nimport EmailProviderIcon from \"./EmailProviderIcon.vue\";\nimport { EmailService, EmailAccount, EmailStep } from \"@/types\";\n\ninterface E {\n  (event: \"update:step\", value: EmailStep): void;\n}\n\nconst emit = defineEmits<E>();\n\nconst state: Reactive<EmailAccount> = reactive({\n  service: \"\",\n  email_account_name: \"\",\n  email_id: \"\",\n  password: \"\",\n  api_key: \"\",\n  api_secret: \"\",\n  enable_incoming: false,\n  enable_outgoing: false,\n  default_incoming: false,\n  default_outgoing: false,\n});\n\nconst selectedService: Ref<EmailService> = ref(null);\nconst fields = computed(() =>\n  selectedService.value.custom ? customProviderFields : popularProviderFields\n);\n\nfunction handleSelect(service: EmailService) {\n  selectedService.value = service;\n  state.service = service.name;\n}\n\nconst addEmailRes = createResource({\n  url: \"helpdesk.api.settings.create_email_account\",\n  makeParams: (val: EmailAccount) => {\n    return {\n      ...val,\n    };\n  },\n  onSuccess: () => {\n    createToast({\n      title: \"Email account created successfully\",\n      icon: \"check\",\n      iconClasses: \"text-green-600\",\n    });\n    emit(\"update:step\", \"email-list\");\n  },\n  onError: () => {\n    error.value = \"Failed to create email account, Invalid credentials\";\n  },\n});\n\nconst error = ref(\"\");\nfunction createEmailAccount() {\n  error.value = validateInputs(state, selectedService.value.custom);\n  if (error.value) return;\n\n  addEmailRes.submit({ data: state });\n}\n</script>\n\n<style scoped></style>\n","<template>\n  <div\n    class=\"flex justify-between items-center border-b border-gray-200 p-2 cursor-pointer\"\n  >\n    <!-- avatar and name -->\n    <div class=\"flex justify-between items-center gap-2\">\n      <EmailProviderIcon :logo=\"emailIcon[emailAccount.service]\" />\n      <div>\n        <p class=\"text-gray-700 font-semibold\">\n          {{ emailAccount.email_account_name }}\n        </p>\n        <div class=\"text-sm text-gray-500\">{{ emailAccount.email_id }}</div>\n      </div>\n    </div>\n    <div>\n      <Badge\n        variant=\"subtle\"\n        :label=\"badgeTitleColor[0]\"\n        :theme=\"badgeTitleColor[1]\"\n      />\n    </div>\n    <!-- email id -->\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { EmailAccount } from \"@/types\";\nimport { emailIcon } from \"./emailConfig\";\nimport EmailProviderIcon from \"./EmailProviderIcon.vue\";\nimport { computed } from \"vue\";\n\ninterface P {\n  emailAccount: EmailAccount;\n}\n\nconst props = defineProps<P>();\n\nconst badgeTitleColor = computed(() => {\n  if (\n    props.emailAccount.default_incoming &&\n    props.emailAccount.default_outgoing\n  ) {\n    const color =\n      props.emailAccount.enable_incoming && props.emailAccount.enable_outgoing\n        ? \"blue\"\n        : \"gray\";\n    return [\"Default Sending and Inbox\", color];\n  } else if (props.emailAccount.default_incoming) {\n    const color = props.emailAccount.enable_incoming ? \"blue\" : \"gray\";\n    return [\"Default Inbox\", color];\n  } else if (props.emailAccount.default_outgoing) {\n    const color = props.emailAccount.enable_outgoing ? \"blue\" : \"gray\";\n    return [\"Default Sending\", color];\n  } else {\n    const color = props.emailAccount.enable_incoming ? \"blue\" : \"gray\";\n    return [\"Inbox\", color];\n  }\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <div>\n    <!-- header -->\n    <div class=\"flex items-center justify-between\">\n      <h1 class=\"text-lg font-semibold\">Email Accounts</h1>\n      <Button\n        label=\"Add Account\"\n        theme=\"gray\"\n        variant=\"solid\"\n        @click=\"emit('update:step', 'email-add')\"\n      >\n        <template #prefix>\n          <LucidePlus class=\"h-4 w-4\" />\n        </template>\n      </Button>\n    </div>\n    <!-- list accounts -->\n    <div\n      v-if=\"!emailAccounts.loading && Boolean(emailAccounts.data?.length)\"\n      class=\"mt-4\"\n    >\n      <div v-for=\"emailAccount in emailAccounts.data\" :key=\"emailAccount.name\">\n        <EmailAccountCard\n          :emailAccount=\"emailAccount\"\n          @click=\"emit('update:step', 'email-edit', emailAccount)\"\n        />\n      </div>\n    </div>\n    <!-- fallback if no email accounts -->\n    <div v-else class=\"flex items-center justify-center h-64 text-gray-500\">\n      Please add an email account to continue.\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { createListResource } from \"frappe-ui\";\nimport EmailAccountCard from \"./EmailAccountCard.vue\";\nimport { EmailAccount } from \"@/types\";\n\nconst emit = defineEmits([\"update:step\"]);\n\nconst emailAccounts = createListResource({\n  doctype: \"Email Account\",\n  cache: true,\n  fields: [\"*\"],\n  filters: {\n    email_id: [\"Not Like\", \"%example%\"],\n  },\n  pageLength: 10,\n  auto: true,\n  onSuccess: (accounts: EmailAccount[]) => {\n    // convert 0 to false to handle boolean fields\n    accounts.forEach((account) => {\n      account.enable_incoming = Boolean(account.enable_incoming);\n      account.enable_outgoing = Boolean(account.enable_outgoing);\n      account.default_incoming = Boolean(account.default_incoming);\n      account.default_outgoing = Boolean(account.default_outgoing);\n    });\n  },\n});\n</script>\n","<template>\n  <div class=\"flex h-full flex-col gap-4\">\n    <!-- title and desc -->\n    <div role=\"heading\" aria-level=\"1\" class=\"flex gap-1 justify-between\">\n      <h5 class=\"text-lg font-semibold\">Edit Email</h5>\n    </div>\n    <div class=\"w-fit\">\n      <EmailProviderIcon\n        :logo=\"emailIcon[accountData.service]\"\n        :service-name=\"accountData.service\"\n      />\n    </div>\n    <!-- banner for setting up email account -->\n    <div class=\"flex items-center gap-2 rounded-md p-2 ring-1 ring-gray-200\">\n      <IconAlert\n        class=\"h-6 w-5 w-min-5 w-max-5 min-h-5 max-w-5 text-blue-500\"\n      />\n      <div class=\"text-wrap text-xs text-gray-700\">\n        {{ info.description }}\n        <a :href=\"info.link\" target=\"_blank\" class=\"text-blue-500 underline\"\n          >here</a\n        >\n        .\n      </div>\n    </div>\n    <!-- fields -->\n    <div class=\"flex flex-col gap-4\">\n      <div class=\"grid grid-cols-1 gap-4\">\n        <div\n          v-for=\"field in fields\"\n          :key=\"field.name\"\n          class=\"flex flex-col gap-1\"\n        >\n          <FormControl\n            v-model=\"state[field.name]\"\n            :label=\"field.label\"\n            :name=\"field.name\"\n            :type=\"field.type\"\n            :placeholder=\"field.placeholder\"\n          />\n        </div>\n      </div>\n      <div class=\"grid grid-cols-2 gap-4\">\n        <div\n          v-for=\"field in incomingOutgoingFields\"\n          :key=\"field.name\"\n          class=\"flex flex-col gap-1\"\n        >\n          <FormControl\n            v-model=\"state[field.name]\"\n            :label=\"field.label\"\n            :name=\"field.name\"\n            :type=\"field.type\"\n          />\n          <p class=\"text-xs text-gray-500\">{{ field.description }}</p>\n        </div>\n      </div>\n      <ErrorMessage v-if=\"error\" class=\"ml-1\" :message=\"error\" />\n    </div>\n    <!-- action buttons -->\n    <div class=\"mt-auto flex justify-between\">\n      <Button\n        label=\"Back\"\n        theme=\"gray\"\n        variant=\"outline\"\n        :disabled=\"loading\"\n        @click=\"emit('update:step', 'email-list')\"\n      />\n      <Button\n        label=\"Update Account\"\n        variant=\"solid\"\n        @click=\"updateAccount\"\n        :loading=\"loading\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, reactive, ref } from \"vue\";\nimport { call } from \"frappe-ui\";\nimport EmailProviderIcon from \"./EmailProviderIcon.vue\";\nimport {\n  emailIcon,\n  services,\n  popularProviderFields,\n  customProviderFields,\n  validateInputs,\n  incomingOutgoingFields,\n} from \"./emailConfig\";\nimport { EmailAccount, EmailStep } from \"@/types\";\nimport { createToast } from \"@/utils\";\nimport IconAlert from \"~icons/espresso/alert-circle\";\n\ninterface P {\n  accountData: EmailAccount;\n}\n\ninterface E {\n  (event: \"update:step\", step: EmailStep): void;\n}\n\nconst props = withDefaults(defineProps<P>(), {\n  accountData: null,\n});\n\nconst emit = defineEmits<E>();\n\nconst state = reactive({\n  email_account_name: props.accountData.email_account_name || \"\",\n  service: props.accountData.service || \"\",\n  email_id: props.accountData.email_id || \"\",\n  api_key: props.accountData?.api_key || null,\n  api_secret: props.accountData?.api_secret || null,\n  password: props.accountData?.password || null,\n  enable_incoming: props.accountData.enable_incoming || false,\n  enable_outgoing: props.accountData.enable_outgoing || false,\n  default_outgoing: props.accountData.default_outgoing || false,\n  default_incoming: props.accountData.default_incoming || false,\n});\n\nconst info = {\n  description: \"To know more about setting up email accounts, click\",\n  link: \"https://docs.erpnext.com/docs/user/manual/en/email-account\",\n};\n\nconst isCustomService = computed(() => {\n  return services.find((s) => s.name === props.accountData.service).custom;\n});\n\nconst fields = computed(() => {\n  if (isCustomService.value) {\n    return customProviderFields;\n  }\n  return popularProviderFields;\n});\n\nconst error = ref(\"\");\nconst loading = ref(false);\nasync function updateAccount() {\n  error.value = validateInputs(state, isCustomService.value);\n  if (error.value) return;\n  const old = { ...props.accountData };\n  const updatedEmailAccount = { ...state };\n\n  const nameChanged =\n    old.email_account_name !== updatedEmailAccount.email_account_name;\n  delete old.email_account_name;\n  delete updatedEmailAccount.email_account_name;\n\n  const otherFieldsChanged = isDirty.value;\n  const values = updatedEmailAccount;\n\n  if (!nameChanged && !otherFieldsChanged) {\n    createToast({\n      title: \"No changes made\",\n      icon: \"info\",\n      iconClasses: \"text-blue-600\",\n    });\n    return;\n  }\n\n  if (nameChanged) {\n    try {\n      loading.value = true;\n      await callRenameDoc();\n      succesHandler();\n    } catch (err) {\n      errorHandler();\n    }\n  }\n  if (otherFieldsChanged) {\n    try {\n      loading.value = true;\n      await callSetValue(values);\n      succesHandler();\n    } catch (err) {\n      errorHandler();\n    }\n  }\n}\n\nconst isDirty = computed(() => {\n  return (\n    state.email_id !== props.accountData.email_id ||\n    state.api_key !== props.accountData.api_key ||\n    state.api_secret !== props.accountData.api_secret ||\n    state.password !== props.accountData.password ||\n    state.enable_incoming !== props.accountData.enable_incoming ||\n    state.enable_outgoing !== props.accountData.enable_outgoing ||\n    state.default_outgoing !== props.accountData.default_outgoing ||\n    state.default_incoming !== props.accountData.default_incoming\n  );\n});\n\nasync function callRenameDoc() {\n  const d = await call(\"frappe.client.rename_doc\", {\n    doctype: \"Email Account\",\n    old_name: props.accountData.email_account_name,\n    new_name: state.email_account_name,\n  });\n  return d;\n}\n\nasync function callSetValue(values) {\n  const d = await call(\"frappe.client.set_value\", {\n    doctype: \"Email Account\",\n    name: state.email_account_name,\n    fieldname: values,\n  });\n  return d.name;\n}\n\nfunction succesHandler() {\n  emit(\"update:step\", \"email-list\");\n  createToast({\n    title: \"Email account updated successfully\",\n    icon: \"check\",\n    iconClasses: \"text-green-600\",\n  });\n}\n\nfunction errorHandler() {\n  loading.value = false;\n  error.value = \"Failed to update email account, Invalid credentials\";\n}\n</script>\n","<template>\n  <div class=\"flex-1\">\n    <div v-if=\"step === 'email-add'\" class=\"h-full\">\n      <EmailAdd @update:step=\"updateStep\" />\n    </div>\n    <div v-else-if=\"step === 'email-list'\" class=\"h-full\">\n      <EmailAccountList @update:step=\"updateStep\" />\n    </div>\n    <div v-else-if=\"step === 'email-edit'\" class=\"h-full\">\n      <EmailEdit :account-data=\"accountData\" @update:step=\"updateStep\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Ref, ref } from \"vue\";\nimport EmailAdd from \"./EmailAdd.vue\";\nimport EmailAccountList from \"./EmailAccountList.vue\";\nimport EmailEdit from \"./EmailEdit.vue\";\nimport { EmailAccount, EmailStep } from \"@/types\";\n\nconst step: Ref<EmailStep> = ref(\"email-list\");\nconst accountData: Ref<EmailAccount> = ref(null);\nfunction updateStep(newStep: EmailStep, data?: EmailAccount) {\n  step.value = newStep;\n  accountData.value = data;\n}\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <h1 class=\"text-lg font-semibold\">Customise your Helpdesk</h1>\n\n    <!-- Brand Logo & Favicon -->\n    <div v-for=\"config in brandingConfig\" class=\"flex flex-col gap-2\">\n      <p class=\"text-sm text-gray-600\">{{ config.title }}</p>\n      <div class=\"flex gap-4 items-center\">\n        <Avatar\n          v-if=\"config.image && !websiteSettings.loading\"\n          size=\"3xl\"\n          :image=\"config.image\"\n        />\n        <FileUploader\n          v-if=\"!config.image\"\n          :fileTypes=\"['image/*']\"\n          @success=\"\n            (file) => {\n              update(file.file_url, config.doctype, config.fieldname);\n            }\n          \"\n        >\n          <template #default=\"{ openFileSelector }\">\n            <Button\n              @click=\"openFileSelector()\"\n              iconLeft=\"upload\"\n              label=\"Upload Image\"\n              :loading=\"config.loading\"\n            />\n          </template>\n        </FileUploader>\n\n        <div v-else>\n          <Button\n            label=\"Remove\"\n            @click=\"update('', config.doctype, config.fieldname)\"\n            iconLeft=\"trash\"\n            :loading=\"config.loading\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { FileUploader, Avatar, createResource } from \"frappe-ui\";\nimport { computed, reactive } from \"vue\";\nimport { useConfigStore } from \"@/stores/config\";\nimport { createToast } from \"@/utils\";\n\nconst config = useConfigStore();\n\nconst state = reactive({\n  brandLogo: config.brandLogo,\n  brandFavicon: \"\",\n});\n\nconst loadingState = reactive({\n  logoLoading: false,\n  faviconLoading: false,\n});\n\nconst brandingConfig = computed(() => [\n  {\n    title: \"Brand Logo\",\n    image: state.brandLogo,\n    doctype: \"HD Settings\",\n    fieldname: \"brand_logo\",\n    loading: loadingState.logoLoading,\n  },\n  {\n    title: \"Brand Favicon\",\n    image: state.brandFavicon,\n    doctype: \"Website Settings\",\n    fieldname: \"favicon\",\n    loading: loadingState.faviconLoading,\n  },\n]);\n\nconst websiteSettings = createResource({\n  url: \"frappe.client.get_value\",\n  cache: true,\n  params: {\n    doctype: \"Website Settings\",\n    fieldname: \"favicon\",\n  },\n  onSuccess(data) {\n    state.brandFavicon = data.favicon;\n  },\n  auto: true,\n});\n\nconst settingsResource = createResource({\n  url: \"frappe.client.set_value\",\n  debounce: 1000,\n  onSuccess(data) {\n    if (data.doctype === \"HD Settings\") {\n      handleLogoChange(data.brand_logo);\n    } else {\n      handleFaviconChange(data.favicon);\n    }\n  },\n  onError() {\n    createToast({\n      title: \"Failed to update, please try again\",\n      icon: \"x\",\n      iconClasses: \"text-red-600\",\n    });\n    loadingState.logoLoading = false;\n    loadingState.faviconLoading = false;\n  },\n});\n\nfunction update(file: string, doctype: string, fieldname: string) {\n  settingsResource.submit({\n    doctype: doctype,\n    name: doctype,\n    fieldname: fieldname,\n    value: file,\n  });\n  doctype === \"HD Settings\"\n    ? (loadingState.logoLoading = true)\n    : (loadingState.faviconLoading = true);\n}\n\nfunction handleLogoChange(url: string) {\n  state.brandLogo = url;\n  loadingState.logoLoading = false;\n\n  createToast({\n    title: \"Brand Logo Updated\",\n    icon: \"check\",\n    iconClasses: \"text-green-600\",\n  });\n}\n\nfunction handleFaviconChange(url: string) {\n  state.brandFavicon = url;\n  loadingState.faviconLoading = false;\n\n  createToast({\n    title: \"Favicon Updated\",\n    text: \"Please refresh the page to see the changes\",\n    icon: \"check\",\n    iconClasses: \"text-green-600\",\n  });\n}\n</script>\n\n<style scoped></style>\n","<template>\n  <Dialog v-model=\"show\" :options=\"{ size: '4xl' }\">\n    <template #body>\n      <div class=\"flex\" :style=\"{ height: 'calc(100vh - 8rem)' }\">\n        <div class=\"flex w-52 shrink-0 flex-col bg-gray-50 p-2\">\n          <h1 class=\"px-2 pt-2 text-lg font-semibold\">Settings</h1>\n          <div class=\"mt-3\">\n            <button\n              v-for=\"tab in tabs\"\n              :key=\"tab.label\"\n              class=\"flex h-7 w-full items-center gap-2 rounded px-2 py-1\"\n              :class=\"[\n                activeTab?.label == tab.label\n                  ? 'bg-white shadow-sm'\n                  : 'hover:bg-gray-100',\n              ]\"\n              @click=\"activeTab = tab\"\n            >\n              <component :is=\"tab.icon\" class=\"h-4 w-4 text-gray-700\" />\n              <span class=\"text-base text-gray-800\">\n                {{ tab.label }}\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"flex flex-1 flex-col overflow-scroll p-4\">\n          <component :is=\"activeTab.component\" v-if=\"activeTab\" />\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n<script setup lang=\"ts\">\nimport { ModelRef, ref } from \"vue\";\nimport { Dialog } from \"frappe-ui\";\nimport LucideMail from \"~icons/lucide/mail\";\nimport ImageUp from \"~icons/lucide/image-up\";\nimport EmailConfig from \"./EmailConfig.vue\";\nimport Branding from \"./Branding.vue\";\nlet tabs = [\n  {\n    label: \"Email Accounts\",\n    icon: LucideMail,\n    component: EmailConfig,\n  },\n  {\n    label: \"Branding\",\n    icon: ImageUp,\n    component: Branding,\n  },\n];\nconst show: ModelRef<boolean> = defineModel();\nconst activeTab = ref(tabs[0]);\n</script>\n","<template>\n  <svg\n    fill=\"none\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    width=\"16\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      class=\"\"\n      clip-rule=\"evenodd\"\n      d=\"M13.8496 4.69692L12.0062 6.54029C11.8109 6.73555 11.4944 6.73555 11.2991 6.54028L9.45572 4.69692C9.26046 4.50166 9.26046 4.18508 9.45572 3.98981L11.2991 2.14645C11.4944 1.95118 11.8109 1.95118 12.0062 2.14645L13.8496 3.98981C14.0448 4.18507 14.0448 4.50166 13.8496 4.69692ZM14.5567 3.28271C15.1425 3.86849 15.1425 4.81824 14.5567 5.40403L12.7133 7.24739C12.1275 7.83318 11.1778 7.83318 10.592 7.24739L8.74862 5.40402C8.16283 4.81824 8.16283 3.86849 8.74862 3.28271L10.592 1.43934C11.1778 0.853553 12.1275 0.853554 12.7133 1.43934L14.5567 3.28271ZM5.60691 4.34338C5.60691 5.3394 4.79948 6.14683 3.80346 6.14683C2.80743 6.14683 2 5.3394 2 4.34338C2 3.34736 2.80743 2.53992 3.80346 2.53992C4.79948 2.53992 5.60691 3.34736 5.60691 4.34338ZM6.60691 4.34338C6.60691 5.89168 5.35176 7.14683 3.80346 7.14683C2.25515 7.14683 1 5.89168 1 4.34338C1 2.79507 2.25515 1.53992 3.80346 1.53992C5.35176 1.53992 6.60691 2.79507 6.60691 4.34338ZM12.9565 10.3897H10.3495C10.0734 10.3897 9.84954 10.6136 9.84954 10.8897V13.4966C9.84954 13.7728 10.0734 13.9966 10.3495 13.9966H12.9565C13.2326 13.9966 13.4565 13.7728 13.4565 13.4966V10.8897C13.4565 10.6136 13.2326 10.3897 12.9565 10.3897ZM10.3495 9.38971C9.52112 9.38971 8.84954 10.0613 8.84954 10.8897V13.4966C8.84954 14.325 9.52111 14.9966 10.3495 14.9966H12.9565C13.7849 14.9966 14.4565 14.325 14.4565 13.4966V10.8897C14.4565 10.0613 13.7849 9.38971 12.9565 9.38971H10.3495ZM2.5 10.3897H5.10691C5.38305 10.3897 5.60691 10.6136 5.60691 10.8897V13.4966C5.60691 13.7728 5.38306 13.9966 5.10691 13.9966H2.5C2.22386 13.9966 2 13.7728 2 13.4966V10.8897C2 10.6136 2.22386 10.3897 2.5 10.3897ZM1 10.8897C1 10.0613 1.67157 9.38971 2.5 9.38971H5.10691C5.93534 9.38971 6.60691 10.0613 6.60691 10.8897V13.4966C6.60691 14.325 5.93534 14.9966 5.10691 14.9966H2.5C1.67157 14.9966 1 14.325 1 13.4966V10.8897Z\"\n      fill=\"currentColor\"\n      fill-rule=\"evenodd\"\n    ></path>\n  </svg>\n</template>\n","<template>\n  <Popover placement=\"right-start\" class=\"flex w-full\">\n    <template #target=\"{ togglePopover }\">\n      <button\n        :class=\"[\n          'group w-full flex h-7 items-center justify-between rounded px-2 text-base text-gray-800 hover:bg-gray-100',\n        ]\"\n        @click.prevent=\"togglePopover()\"\n      >\n        <div class=\"flex gap-2\">\n          <AppsIcon />\n          <span class=\"whitespace-nowrap\">Apps</span>\n        </div>\n        <ChevronRight class=\"h-4 w-4 stroke-1.5\" />\n      </button>\n    </template>\n    <template #body>\n      <div\n        class=\"grid grid-cols-3 justify-between mx-3 p-2 rounded-lg border border-gray-100 bg-white shadow-xl\"\n      >\n        <div v-for=\"app in apps.data\" key=\"name\">\n          <a\n            :href=\"app.route\"\n            class=\"flex flex-col gap-1.5 rounded justify-center items-center py-2 px-3 hover:bg-gray-100\"\n          >\n            <img class=\"size-8\" :src=\"app.logo\" />\n            <div class=\"text-sm\" @click=\"app.onClick\">\n              {{ app.title }}\n            </div>\n          </a>\n        </div>\n      </div>\n    </template>\n  </Popover>\n</template>\n<script setup>\nimport { Popover, createResource } from \"frappe-ui\";\nimport AppsIcon from \"./icons/AppsIcon.vue\";\nimport ChevronRight from \"~icons/lucide/chevron-right\";\n\nconst apps = createResource({\n  url: \"frappe.apps.get_apps\",\n  cache: \"apps\",\n  auto: true,\n  transform: (data) => {\n    let _apps = [\n      {\n        name: \"frappe\",\n        logo: \"/assets/helpdesk/desk/desk.png\",\n        title: \"Desk\",\n        route: \"/app\",\n      },\n    ];\n    data.map((app) => {\n      if (app.name === \"helpdesk\") return;\n      _apps.push({\n        name: app.name,\n        logo: app.logo,\n        title: app.title,\n        route: app.route,\n      });\n    });\n    return _apps;\n  },\n});\n</script>\n","<template>\n  <div\n    class=\"z-0 flex select-none flex-col border-r border-gray-200 bg-gray-50 p-2 text-base duration-300 ease-in-out\"\n    :style=\"{\n      'min-width': width,\n      'max-width': width,\n    }\"\n  >\n    <UserMenu class=\"mb-2 ml-0.5\" :options=\"profileSettings\" />\n    <SidebarLink\n      label=\"Search\"\n      class=\"mb-1\"\n      :icon=\"LucideSearch\"\n      :on-click=\"() => openCommandPalette()\"\n      :is-expanded=\"isExpanded\"\n    >\n      <template #right>\n        <span class=\"flex items-center gap-0.5 font-medium text-gray-600\">\n          <component :is=\"device.modifierIcon\" class=\"h-3 w-3\" />\n          <span>K</span>\n        </span>\n      </template>\n    </SidebarLink>\n    <span class=\"mb-4\">\n      <div\n        v-if=\"notificationStore.unread\"\n        class=\"absolute z-20 h-1.5 w-1.5 translate-x-6 translate-y-1 rounded-full bg-gray-800\"\n        theme=\"gray\"\n        variant=\"solid\"\n      />\n      <SidebarLink\n        class=\"relative\"\n        label=\"Notifications\"\n        :icon=\"LucideInbox\"\n        :on-click=\"() => notificationStore.toggle()\"\n        :is-expanded=\"isExpanded\"\n      >\n        <template #right>\n          <Badge\n            v-if=\"isExpanded && notificationStore.unread\"\n            :label=\"notificationStore.unread\"\n            theme=\"gray\"\n            variant=\"subtle\"\n          />\n        </template>\n      </SidebarLink>\n    </span>\n    <div class=\"mb-4 flex flex-col gap-1\">\n      <SidebarLink\n        v-for=\"option in menuOptions\"\n        v-bind=\"option\"\n        :key=\"option.label\"\n        :is-expanded=\"isExpanded\"\n        :is-active=\"option.to?.includes(route.name.toString())\"\n      />\n    </div>\n    <div class=\"grow\" />\n    <SidebarLink\n      :icon=\"isExpanded ? LucideArrowLeftFromLine : LucideArrowRightFromLine\"\n      :is-active=\"false\"\n      :is-expanded=\"isExpanded\"\n      :label=\"isExpanded ? 'Collapse' : 'Expand'\"\n      :on-click=\"() => (isExpanded = !isExpanded)\"\n    />\n    <SettingsModal v-if=\"authStore.isAdmin\" v-model=\"showSettingsModal\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, markRaw, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { storeToRefs } from \"pinia\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { useNotificationStore } from \"@/stores/notification\";\nimport { useSidebarStore } from \"@/stores/sidebar\";\nimport {\n  AGENT_PORTAL_AGENT_LIST,\n  AGENT_PORTAL_CONTACT_LIST,\n  AGENT_PORTAL_CUSTOMER_LIST,\n  AGENT_PORTAL_TEAM_LIST,\n  AGENT_PORTAL_TICKET_LIST,\n  CUSTOMER_PORTAL_LANDING,\n} from \"@/router\";\nimport { useDevice } from \"@/composables\";\nimport { SidebarLink } from \"@/components\";\nimport UserMenu from \"./UserMenu.vue\";\nimport LucideArrowLeftFromLine from \"~icons/lucide/arrow-left-from-line\";\nimport LucideArrowRightFromLine from \"~icons/lucide/arrow-right-from-line\";\nimport LucideBookOpen from \"~icons/lucide/book-open\";\nimport LucideCloudLightning from \"~icons/lucide/cloud-lightning\";\nimport LucideContact2 from \"~icons/lucide/contact-2\";\nimport LucideInbox from \"~icons/lucide/inbox\";\nimport LucideTicket from \"~icons/lucide/ticket\";\nimport LucideUser from \"~icons/lucide/user\";\nimport LucideUserCircle2 from \"~icons/lucide/user-circle-2\";\nimport LucideUsers from \"~icons/lucide/users\";\nimport LucideSearch from \"~icons/lucide/search\";\nimport SettingsModal from \"@/components/Settings/SettingsModal.vue\";\nimport Apps from \"@/components/Apps.vue\";\n\nconst route = useRoute();\nconst router = useRouter();\nconst authStore = useAuthStore();\nconst notificationStore = useNotificationStore();\nconst { isExpanded, width } = storeToRefs(useSidebarStore());\nconst device = useDevice();\nconst showSettingsModal = ref(false);\n\nconst menuOptions = computed(() => [\n  {\n    label: \"Tickets\",\n    icon: LucideTicket,\n    to: AGENT_PORTAL_TICKET_LIST,\n  },\n  {\n    label: \"Agents\",\n    icon: LucideUser,\n    to: AGENT_PORTAL_AGENT_LIST,\n  },\n  {\n    label: \"Knowledge base\",\n    icon: LucideBookOpen,\n    to: \"DeskKBHome\",\n  },\n  {\n    label: \"Teams\",\n    icon: LucideUsers,\n    to: AGENT_PORTAL_TEAM_LIST,\n  },\n  {\n    label: \"Canned responses\",\n    icon: LucideCloudLightning,\n    to: \"CannedResponses\",\n  },\n  {\n    label: \"Customers\",\n    icon: LucideUserCircle2,\n    to: AGENT_PORTAL_CUSTOMER_LIST,\n  },\n  {\n    label: \"Contacts\",\n    icon: LucideContact2,\n    to: AGENT_PORTAL_CONTACT_LIST,\n  },\n]);\n\nconst profileSettings = [\n  {\n    component: markRaw(Apps),\n  },\n  {\n    label: \"Customer portal\",\n    icon: \"users\",\n    onClick: () => {\n      const path = router.resolve({ name: CUSTOMER_PORTAL_LANDING });\n      window.open(path.href);\n    },\n  },\n  {\n    icon: \"life-buoy\",\n    label: \"Support\",\n    onClick: () => window.open(\"https://t.me/frappedesk\"),\n  },\n  {\n    icon: \"book-open\",\n    label: \"Docs\",\n    onClick: () => window.open(\"https://docs.frappe.io/helpdesk\"),\n  },\n  {\n    label: \"Settings\",\n    icon: \"settings\",\n    onClick: () => (showSettingsModal.value = true),\n    condition: () => authStore.isAdmin,\n  },\n  {\n    label: \"Log out\",\n    icon: \"log-out\",\n    onClick: () => authStore.logout(),\n  },\n];\n\nfunction openCommandPalette() {\n  window.dispatchEvent(\n    new KeyboardEvent(\"keydown\", { key: \"k\", metaKey: true })\n  );\n}\n</script>\n","<template>\n  <div class=\"flex h-screen w-screen\">\n    <SideBar />\n    <Notifications />\n    <RouterView class=\"z-0 flex flex-1 flex-col overflow-auto\" />\n    <CommandPalette />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onBeforeMount } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { useConfigStore } from \"@/stores/config\";\nimport { CUSTOMER_PORTAL_LANDING, ONBOARDING_PAGE } from \"@/router\";\nimport { CommandPalette, Notifications } from \"@/components\";\nimport SideBar from \"@/components/desk/sidebar/SideBar.vue\";\n\nconst router = useRouter();\nconst authStore = useAuthStore();\nconst configStore = useConfigStore();\n\nonBeforeMount(() => {\n  if (!authStore.hasDeskAccess) {\n    router.replace({ name: CUSTOMER_PORTAL_LANDING });\n  }\n\n  if (!configStore.isSetupComplete) {\n    router.replace({ name: ONBOARDING_PAGE });\n  }\n});\n</script>\n"],"names":["useSidebarStore","defineStore","isOpen","ref","isExpanded","useStorage","width","computed","toggle","state","toggleExpanded","useNotificationStore","authStore","useAuthStore","visible","resource","createListManager","clear","createResource","useError","read","ticket","data","unread","d","notificationStore","sidebarStore","target","onClickOutside","getRoute","n","useConfigStore","LogoFrappeMail","fixedFields","incomingOutgoingFields","popularProviderFields","customProviderFields","services","LogoGmail","LogoOutlook","LogoSendgrid","LogoSparkpost","LogoYahoo","LogoYandex","emailIcon","validateInputs","isCustom","validateEmailWithZod","emit","__emit","reactive","selectedService","fields","handleSelect","service","addEmailRes","val","createToast","error","createEmailAccount","props","__props","badgeTitleColor","emailAccounts","createListResource","accounts","account","info","isCustomService","s","loading","updateAccount","old","updatedEmailAccount","nameChanged","otherFieldsChanged","isDirty","values","callRenameDoc","succesHandler","errorHandler","callSetValue","call","step","accountData","updateStep","newStep","config","loadingState","brandingConfig","websiteSettings","settingsResource","handleLogoChange","handleFaviconChange","update","file","doctype","fieldname","url","tabs","LucideMail","EmailConfig","ImageUp","Branding","show","_useModel","activeTab","_hoisted_1","_hoisted_2","_createElementVNode","apps","_apps","app","route","useRoute","router","useRouter","storeToRefs","device","useDevice","showSettingsModal","menuOptions","LucideTicket","AGENT_PORTAL_TICKET_LIST","LucideUser","AGENT_PORTAL_AGENT_LIST","LucideBookOpen","LucideUsers","AGENT_PORTAL_TEAM_LIST","LucideCloudLightning","LucideUserCircle2","AGENT_PORTAL_CUSTOMER_LIST","LucideContact2","AGENT_PORTAL_CONTACT_LIST","profileSettings","markRaw","Apps","path","CUSTOMER_PORTAL_LANDING","openCommandPalette","configStore","onBeforeMount","ONBOARDING_PAGE"],"mappings":"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"}