{"version":3,"file":"TicketNew-f29d51e8.js","sources":["../../../../desk/src/components/UniInput.vue","../../../../desk/src/pages/ticket/TicketNewArticles.vue","../../../../desk/src/pages/TicketNew.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-1.5\">\n    <span class=\"block text-sm text-gray-700\">\n      {{ field.label }}\n      <span v-if=\"field.required\" class=\"place-self-center text-red-500\">\n        *\n      </span>\n    </span>\n    <component\n      :is=\"component\"\n      :placeholder=\"placeholder\"\n      :value=\"transValue\"\n      :model-value=\"transValue\"\n      @update:model-value=\"emitUpdate(field.fieldname, $event)\"\n      @change=\"emitUpdate(field.fieldname, $event.value || $event)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, h } from \"vue\";\nimport { Autocomplete } from \"@/components\";\nimport { createResource, FormControl } from \"frappe-ui\";\nimport { Field } from \"@/types\";\nimport SearchComplete from \"./SearchComplete.vue\";\n\ntype Value = string | number | boolean;\n\ninterface P {\n  field: Field;\n  value: Value;\n}\n\ninterface R {\n  fieldname: Field[\"fieldname\"];\n  value: Value;\n}\n\ninterface E {\n  (event: \"change\", value: R);\n}\n\nconst props = defineProps<P>();\nconst emit = defineEmits<E>();\n\nconst component = computed(() => {\n  if (props.field.url_method) {\n    return h(Autocomplete, {\n      options: apiOptions.data,\n    });\n  } else if (props.field.fieldtype === \"Link\" && props.field.options) {\n    return h(SearchComplete, {\n      doctype: props.field.options,\n    });\n  } else if (props.field.fieldtype === \"Select\") {\n    return h(Autocomplete, {\n      options: props.field.options\n        .split(\"\\n\")\n        .map((o) => ({ label: o, value: o })),\n    });\n  } else if (props.field.fieldtype === \"Check\") {\n    return h(Autocomplete, {\n      options: [\n        {\n          label: \"Yes\",\n          value: 1,\n        },\n        {\n          label: \"No\",\n          value: 0,\n        },\n      ],\n    });\n  } else {\n    return h(FormControl, {\n      debounce: 500,\n    });\n  }\n});\n\nconst apiOptions = createResource({\n  url: props.field.url_method,\n  auto: !!props.field.url_method,\n  transform: (data) =>\n    data.map((o) => ({\n      label: o,\n      value: o,\n    })),\n});\n\nconst transValue = computed(() => {\n  if (props.field.fieldtype === \"Check\") {\n    return props.value ? \"Yes\" : \"No\";\n  }\n  return props.value;\n});\n\nconst placeholder = computed(() => {\n  if (props.field.fieldtype === \"Data\" && !props.field.url_method) {\n    return \"Type something\";\n  }\n  return \"Select an option\";\n});\n\nfunction emitUpdate(fieldname: Field[\"fieldname\"], value: Value) {\n  emit(\"change\", { fieldname, value });\n}\n</script>\n","<template>\n  <div\n    v-if=\"!isEmpty(articles.data) && search.length > 2\"\n    class=\"rounded border bg-cyan-50 px-5 py-3 text-base\"\n  >\n    <div class=\"mb-2 font-medium\">\n      These articles may already cover what you are looking for\n      <RouterLink\n        class=\"group cursor-pointer space-x-1 hover:text-gray-900\"\n        :to=\"{\n          name: 'KBHome',\n        }\"\n        target=\"_blank\"\n      >\n        <span class=\"text-xs\">(View All)</span>\n      </RouterLink>\n    </div>\n    <dl class=\"space-y-2\">\n      <div\n        v-for=\"a in articles.data\"\n        :key=\"a.id\"\n        class=\"focus:ring-cyan-30 rounded-md border-2 border-hidden p-4 hover:bg-cyan-100 focus:outline-none focus:ring active:bg-cyan-50\"\n      >\n        <RouterLink\n          class=\"group cursor-pointer space-x-1 hover:text-gray-900\"\n          :to=\"{\n            name: 'KBArticlePublic',\n            params: {\n              articleId: a.name.split('#')[0],\n            },\n            hash: `#${a.name.split('#')[1]}`,\n          }\"\n          target=\"_blank\"\n        >\n          <dt class=\"font-semibold\">{{ a.subject }} - {{ a.headings }}</dt>\n          <!-- eslint-disable-next-line vue/no-v-html -->\n          <dd class=\"font-light\" v-html=\"a.description\"></dd>\n        </RouterLink>\n      </div>\n    </dl>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch } from \"vue\";\nimport { createResource } from \"frappe-ui\";\nimport { isEmpty } from \"lodash\";\n\ninterface P {\n  search: string;\n}\n\nconst props = defineProps<P>();\nconst articles = createResource({\n  url: \"helpdesk.api.article.search\",\n  debounce: 500,\n  auto: false,\n});\nwatch(\n  () => props.search,\n  (search) => {\n    if (search.length < 3) return;\n    articles.update({\n      params: {\n        query: search,\n      },\n    });\n    articles.reload();\n  }\n);\n</script>\n","<template>\n  <div class=\"flex flex-col overflow-y-auto\">\n    <TicketBreadcrumbs\n      :parent=\"route.meta.parent\"\n      title=\"New\"\n      :current=\"route.name\"\n    />\n    <div v-if=\"template.data?.about\" class=\"mx-5 my-3\">\n      <div class=\"prose-f\" v-html=\"sanitize(template.data.about)\" />\n    </div>\n    <div class=\"grid grid-cols-1 gap-4 px-5 sm:grid-cols-3\">\n      <UniInput\n        v-for=\"field in visibleFields\"\n        :key=\"field.fieldname\"\n        :field=\"field\"\n        :value=\"templateFields[field.fieldname]\"\n        @change=\"templateFields[field.fieldname] = $event.value\"\n      />\n    </div>\n    <div class=\"m-5\">\n      <FormControl\n        v-model=\"subject\"\n        type=\"text\"\n        label=\"Subject*\"\n        placeholder=\"A short description\"\n      />\n    </div>\n    <TicketNewArticles\n      v-if=\"isCustomerPortal\"\n      :search=\"subject\"\n      class=\"mx-5 mb-5\"\n    />\n    <div v-if=\"isCustomerPortal\" class=\"mx-5 mb-5 h-full\">\n      <TicketTextEditor\n        v-show=\"subject.length > 2 || description.length > 0\"\n        ref=\"editor\"\n        v-model:attachments=\"attachments\"\n        v-model:content=\"description\"\n        placeholder=\"Detailed explanation\"\n        expand\n      >\n        <template #bottom-right>\n          <Button\n            label=\"Submit\"\n            theme=\"gray\"\n            variant=\"solid\"\n            :disabled=\"\n              $refs.editor.editor.isEmpty || ticket.loading || !subject\n            \"\n            @click=\"() => ticket.submit()\"\n          />\n        </template>\n      </TicketTextEditor>\n      <h4\n        v-show=\"subject.length <= 2 && description.length === 0\"\n        class=\"flex items-center justify-center text-lg text-gray-500\"\n      >\n        Please enter a subject to continue\n      </h4>\n    </div>\n\n    <!-- for agent portal -->\n    <div v-else class=\"mx-5 mb-5 h-full\">\n      <TicketTextEditor\n        ref=\"editor\"\n        v-model:attachments=\"attachments\"\n        v-model:content=\"description\"\n        placeholder=\"Detailed explanation\"\n        expand\n      >\n        <template #bottom-right>\n          <Button\n            label=\"Submit\"\n            theme=\"gray\"\n            variant=\"solid\"\n            :disabled=\"\n              $refs.editor.editor.isEmpty || ticket.loading || !subject\n            \"\n            @click=\"() => ticket.submit()\"\n          />\n        </template>\n      </TicketTextEditor>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, reactive, onMounted } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { createResource, usePageMeta, Button, FormControl } from \"frappe-ui\";\nimport sanitizeHtml from \"sanitize-html\";\nimport { isEmpty } from \"lodash\";\nimport { useError } from \"@/composables/error\";\nimport { UniInput } from \"@/components\";\nimport TicketBreadcrumbs from \"./ticket/TicketBreadcrumbs.vue\";\nimport TicketNewArticles from \"./ticket/TicketNewArticles.vue\";\nimport TicketTextEditor from \"./ticket/TicketTextEditor.vue\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { capture } from \"@/telemetry\";\n\ninterface P {\n  templateId?: string;\n}\n\nconst props = withDefaults(defineProps<P>(), {\n  templateId: \"\",\n});\n\nconst route = useRoute();\nconst router = useRouter();\nconst subject = ref(\"\");\nconst description = ref(\"\");\nconst attachments = ref([]);\nconst templateFields = reactive({});\n\nconst isCustomerPortal = window.location.pathname.includes(\"/my-tickets\");\n\nconst template = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_ticket_template.api.get_one\",\n  makeParams: () => ({\n    name: props.templateId || \"Default\",\n  }),\n  auto: true,\n});\n\nconst visibleFields = computed(() =>\n  template.data?.fields?.filter(\n    (f) => route.meta.agent || !f.hide_from_customer\n  )\n);\nconst ticket = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_ticket.api.new\",\n  debounce: 300,\n  makeParams: () => ({\n    doc: {\n      description: description.value,\n      subject: subject.value,\n      template: props.templateId,\n      ...templateFields,\n    },\n    attachments: attachments.value,\n  }),\n  validate: (params) => {\n    const fields = visibleFields.value?.filter((f) => f.required) || [];\n    const toVerify = [...fields, \"subject\", \"description\"];\n    for (const field of toVerify) {\n      if (isEmpty(params.doc[field.fieldname || field])) {\n        return `${field.label || field} is required`;\n      }\n    }\n  },\n  onSuccess: (data) => {\n    router.push({\n      name: route.meta.onSuccessRoute as string,\n      params: {\n        ticketId: data.name,\n      },\n    });\n    if (!isCustomerPortal) return;\n    // only capture telemetry for customer portal\n    capture(\"new_ticket_submitted\", {\n      data: {\n        user: userID,\n        ticketID: data.name,\n        subject: subject.value,\n        description: description.value,\n        customFields: templateFields,\n      },\n    });\n  },\n  onError: useError(),\n});\n\nfunction sanitize(html: string) {\n  return sanitizeHtml(html, {\n    allowedTags: sanitizeHtml.defaults.allowedTags.concat([\"img\"]),\n  });\n}\n\nusePageMeta(() => ({\n  title: \"New Ticket\",\n}));\n\nconst { userId: userID } = useAuthStore();\nonMounted(() => {\n  capture(\"new_ticket_page\", {\n    data: {\n      user: userID,\n    },\n  });\n});\n</script>\n"],"names":["props","__props","emit","__emit","component","computed","h","Autocomplete","apiOptions","SearchComplete","FormControl","createResource","data","o","transValue","placeholder","emitUpdate","fieldname","value","articles","watch","search","route","useRoute","router","useRouter","subject","ref","description","attachments","templateFields","reactive","isCustomerPortal","template","visibleFields","f","ticket","params","toVerify","field","isEmpty","capture","userID","useError","sanitize","html","sanitizeHtml","usePageMeta","useAuthStore","onMounted"],"mappings":"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"}